{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\自己的项目\\three_test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\自己的项目\\three_test\\src\\views\\test\\test3.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\views\\test\\test3.vue","mtime":1581261220547},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["test3.vue"],"names":[],"mappings":";;;;;;;;;AAOA,OAAA,KAAA,KAAA,MAAA,6BAAA;AACA,SAAA,aAAA,QAAA,8CAAA;AACA,SAAA,KAAA,QAAA,6CAAA;AACA,SAAA,oBAAA,QAAA,uDAAA;AACA,SAAA,SAAA,QAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAIA,MAAA,KAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,IALA;AAMA,MAAA,QAAA,EAAA,IANA;AAOA,MAAA,SAAA,EAAA,IAPA;AAQA,MAAA,KAAA,EAAA,IARA;AASA,MAAA,cAAA,EAAA,IATA;AAWA,MAAA,QAAA,EAAA,IAXA;AAaA,MAAA,WAAA,EAAA,EAbA;AAcA,MAAA,KAAA,EAAA;AAdA,KAAA;AAgBA,GAlBA;AAmBA,EAAA,aAnBA,2BAmBA;AAAA;;AACA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA,EAAA;AACA;AACA;;AACA,SAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA;AACA,UAAA,IAAA,CAAA,IAAA,IAAA,OAAA,EAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,KAAA,MAAA,EAAA;AACA,YAAA,GAAA,CAAA,QAAA,CAAA,OAAA;;AACA,gBAAA,GAAA,CAAA,QAAA,CAAA,MAAA,EAAA;AACA,cAAA,GAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,gBAAA,IAAA,CAAA,OAAA;AACA,eAFA;AAGA,aAJA,MAIA;AACA,cAAA,GAAA,CAAA,QAAA,CAAA,OAAA;AACA;AACA;AACA,SAXA;;AAYA,QAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA;AACA,OAdA,MAcA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA;AACA;AACA,KAnBA;AAoBA,SAAA,SAAA,GAAA,IAAA;AACA,SAAA,UAAA,GAAA,IAAA;AACA,SAAA,SAAA,GAAA,IAAA;AACA,SAAA,SAAA,GAAA,IAAA;AACA,SAAA,YAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,IAAA;AACA,SAAA,YAAA,GAAA,IAAA;AACA,SAAA,aAAA,GAAA,IAAA;AACA,SAAA,WAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,IAAA;AACA,SAAA,SAAA,GAAA,IAAA;AACA,SAAA,QAAA,GAAA,IAAA,CAnCA,CAqCA;;AACA,SAAA,SAAA,GAAA,IAAA;AACA,SAAA,MAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,SAAA,QAAA,GAAA,IAAA;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,SAAA,QAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,SAAA,MAAA,GAAA,IAAA;AACA,SAAA,SAAA,GAAA,IAAA;AACA,SAAA,KAAA,GAAA,IAAA;AAEA,IAAA,MAAA,CAAA,mBAAA,CAAA,OAAA,EAAA,KAAA,OAAA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,cAAA;AACA,GAxEA;AAyEA,EAAA,OAzEA,qBAyEA;AACA,QAAA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA,EAAA;AACA,WAAA,YAAA;AACA,WAAA,UAAA;AACA,WAAA,SAAA;AACA,WAAA,SAAA;AACA,WAAA,YAAA;AACA,WAAA,aAAA;AACA,WAAA,OAAA;AACA,WAAA,YAAA;AAEA,UAAA,MAAA,GAAA,IAAA,KAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,MAAA;AAEA,MAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,cAAA,EAAA,KAAA;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,KAAA,OAAA,EAAA,KAAA;AACA;AACA,GA1FA;AA2FA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CAAA,WAAA,CAAA,CADA,CAEA;;AACA,WAAA,QAAA,GAAA,IAAA,KAAA,CAAA,aAAA,CAAA;AACA,QAAA,SAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,CAAA,CAHA,CAMA;;AAEA,WAAA,QAAA,CAAA,OAAA,CACA,KAAA,SAAA,CAAA,WADA,EAEA,KAAA,SAAA,CAAA,YAFA,EARA,CAYA;;AACA,WAAA,SAAA,CAAA,WAAA,CAAA,KAAA,QAAA,CAAA,UAAA;AACA,KAfA;AAgBA,IAAA,UAhBA,wBAgBA;AACA;AACA,WAAA,MAAA,GAAA,IAAA,KAAA,CAAA,iBAAA,CACA,EADA,EAEA,KAAA,SAAA,CAAA,WAAA,GAAA,KAAA,SAAA,CAAA,YAFA,EAGA,CAHA,EAIA,OAJA,CAAA;AAMA,WAAA,MAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,CAAA,GAAA,IAAA;AAEA,WAAA,MAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA;AAEA,WAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,KAjCA;AAkCA,IAAA,SAlCA,uBAkCA;AACA;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,KAAA,EAAA;AACA,KArCA;AAsCA,IAAA,SAtCA,uBAsCA;AACA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,IAAA,KAAA,CAAA,YAAA,CAAA,QAAA,CAAA,EAFA,CAEA;;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CAHA,CAGA;;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,GAAA,GAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,GAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CARA,CASA;;AACA,WAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,KAlDA;AAmDA,IAAA,YAnDA,0BAmDA;AACA;AACA,WAAA,QAAA,GAAA,IAAA,aAAA,CACA,KAAA,MADA,EAEA,KAAA,QAAA,CAAA,UAFA,CAAA,CAFA,CAMA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,aAAA,GAAA,KAAA,CATA,CAUA;;AACA,WAAA,QAAA,CAAA,aAAA,GAAA,CAAA,CAXA,CAYA;;AACA,WAAA,QAAA,CAAA,UAAA,GAAA,IAAA,CAbA,CAcA;;AACA,WAAA,QAAA,CAAA,UAAA,GAAA,KAAA,CAfA,CAgBA;;AACA,WAAA,QAAA,CAAA,WAAA,GAAA,CAAA,CAjBA,CAkBA;;AACA,WAAA,QAAA,CAAA,WAAA,GAAA,MAAA,CAnBA,CAoBA;;AACA,WAAA,QAAA,CAAA,SAAA,GAAA,IAAA,CArBA,CAsBA;;AACA,WAAA,QAAA,CAAA,aAAA,GAAA,CAAA,CAvBA,CAuBA;;AACA,WAAA,QAAA,CAAA,aAAA,GAAA,IAAA,CAAA,EAAA,CAxBA,CAyBA;;AACA,WAAA,QAAA,CAAA,UAAA,GAAA,KAAA;AACA,WAAA,QAAA,CAAA,eAAA,GAAA,GAAA,CA3BA,CA2BA;AACA;;AACA,WAAA,QAAA,CAAA,UAAA,GAAA,KAAA,CA7BA,CA+BA;AACA,KAnFA;AAoFA,IAAA,aApFA,2BAoFA;AACA;AACA,WAAA,SAAA,GAAA,IAAA,KAAA,CAAA,SAAA,EAAA;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,OAAA,EAAA;AACA,KAxFA;AAyFA,IAAA,cAzFA,4BAyFA;AACA;AACA,WAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,sBAAA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,WAAA;AACA,KA9FA;AA+FA,IAAA,OA/FA,qBA+FA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,aAAA,QAAA,CAAA,MAAA;AACA,aAAA,QAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,KAAA,MAAA;AACA,QAAA,KAAA,CAAA,MAAA;;AACA,YAAA,KAAA,QAAA,EAAA;AACA,eAAA,QAAA,CAAA,kBAAA,GAAA,IAAA;AACA;;AACA,QAAA,qBAAA,CAAA,KAAA,OAAA,CAAA;AACA;AACA,KAzGA;AA0GA,IAAA,OA1GA,qBA0GA;AACA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA,GAAA,CAAA,GAAA,CAAA;AACA,WAAA,KAAA,CAAA,CAAA,GAAA,EAAA,KAAA,CAAA,OAAA,GAAA,MAAA,CAAA,WAAA,IAAA,CAAA,GAAA,CAAA,CAJA,CAKA;;AACA,WAAA,SAAA,CAAA,aAAA,CAAA,KAAA,KAAA,EAAA,KAAA,MAAA;AACA,UAAA,UAAA,GAAA,KAAA,SAAA,CAAA,gBAAA,CACA,KAAA,KAAA,CAAA,QADA,EAEA,IAFA,CAAA;;AAIA,UAAA,UAAA,CAAA,MAAA,EAAA;AACA;AACA,eAFA,CAGA;AACA;AACA,KA1HA;AA2HA,IAAA,YA3HA,0BA2HA;AAAA;;AACA,WAAA,WAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,IAAA,KAAA,CAAA,QAAA,EAAA;;AAEA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CACA,IAAA,KAAA,CAAA,OAAA,CACA,OAAA,IAAA,CAAA,MAAA,EADA,EAEA,OAAA,IAAA,CAAA,MAAA,EAFA,EAGA,OAAA,IAAA,CAAA,MAAA,EAHA,CADA;AAOA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,MAAA;;AAEA,YAAA,OAAA,GAAA,IAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,SAAA,EAAA,CAAA;AACA,QAAA,OAAA,CAAA,WAAA,GAAA,IAAA;AACA,YAAA,QAAA,GAAA,IAAA,KAAA,CAAA,cAAA,CAAA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,IAAA,EAAA,CAFA;AAGA,UAAA,GAAA,EAAA,OAHA;AAIA,UAAA,QAAA,EAAA,KAAA,CAAA,gBAJA;AAKA,UAAA,SAAA,EAAA,IALA;AAMA,UAAA,WAAA,EAAA;AANA,SAAA,CAAA;AASA,YAAA,SAAA,GAAA,IAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EAAA,QAAA,CAAA,CAzBA,CAyBA;;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,SAAA;;AAEA,YAAA,KAAA,GAAA,CAAA;AACA,QAAA,WAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,cAAA,CAAA,KAAA;;AACA,cAAA,KAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA;AACA,WAFA,MAEA;AACA,YAAA,KAAA,GAAA,CAAA;AACA;AACA,SAPA,EAOA,IAPA,CAAA;AAQA,OArCA;AAsCA,KAlKA;AAoKA,IAAA,WApKA,yBAoKA;AAAA;;AAAA,UAAA,GAAA,uEAAA,YAAA,CAAA,CAAA;AACA;AACA,UAAA,GAAA,GAAA,CAAA;AACA,UAAA,SAAA,GAAA,CACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,CAAA;;AASA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA,SAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CACA,OAAA,CAAA,GAAA,CAAA,QAAA,GAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CADA,EAEA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,MAAA;AACA,UAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAFA,CAGA;;AACA,cAAA,QAAA,GAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA;;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,QAAA;;AACA,UAAA,GAAA;;AACA,cAAA,GAAA,IAAA,SAAA,CAAA,MAAA,EAAA;AACA,YAAA,GAAA;AACA;AACA,SAZA;AAcA;AACA,KAjMA;AAmMA,IAAA,YAnMA,wBAmMA,cAnMA,EAmMA;AACA;AACA,UAAA,QAAA,GAAA,IAAA,KAAA,CAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,kBAAA,CAAA,cAAA;AACA,WAAA,KAAA,GACA,KAAA,KAAA,GAAA,QAAA,CAAA,QAAA,CAAA,MAAA,GACA,QAAA,CAAA,QAAA,CAAA,MADA,GAEA,KAAA,KAHA;AAKA,WAAA,WAAA,CAAA,IAAA,CAAA,QAAA;AACA,KA7MA;AA+MA,IAAA,cA/MA,0BA+MA,KA/MA,EA+MA;AAAA;;AACA,WAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,QAAA,CAAA,MAAA;AACA,YAAA,CAAA,GAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA,GAAA,MAAA,CAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EACA,EADA,CAEA;AACA,UAAA,CAAA,EAAA,CAAA,CAAA,CADA;AAEA,UAAA,CAAA,EAAA,CAAA,CAAA,CAFA;AAGA,UAAA,CAAA,EAAA,CAAA,CAAA;AAHA,SAFA,EAOA,IAPA,EASA,MATA,CASA,KAAA,CAAA,MAAA,CAAA,WAAA,CAAA,EATA,EAUA,KAVA,CAUA,OAAA,IAAA,CAAA,MAAA,EAVA,EAWA,KAXA;AAYA,OAfA;AAgBA,KAhOA;AAkOA,IAAA,SAlOA,uBAkOA;AACA;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CAFA,CAGA;;AACA,MAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,MAAA,GAAA,CAAA,SAAA;AAEA,MAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,CAAA,EAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA;AAEA,UAAA,QAAA,GAAA,GAAA,CAAA,oBAAA,CACA,MAAA,CAAA,KAAA,GAAA,CADA,EAEA,MAAA,CAAA,MAAA,GAAA,CAFA,EAGA,CAHA,EAIA,MAAA,CAAA,KAAA,GAAA,CAJA,EAKA,MAAA,CAAA,MAAA,GAAA,CALA,EAMA,MAAA,CAAA,KAAA,GAAA,CANA,CAAA;AAQA,MAAA,QAAA,CAAA,YAAA,CAAA,CAAA,EAAA,qBAAA;AACA,MAAA,QAAA,CAAA,YAAA,CAAA,GAAA,EAAA,qBAAA;AACA,MAAA,QAAA,CAAA,YAAA,CAAA,GAAA,EAAA,qBAAA;AACA,MAAA,QAAA,CAAA,YAAA,CAAA,CAAA,EAAA,iBAAA;AAEA,MAAA,GAAA,CAAA,SAAA,GAAA,QAAA;AACA,MAAA,GAAA,CAAA,IAAA,GAzBA,CA0BA;AAEA;AACA;;AACA,MAAA,GAAA,CAAA,MAAA;AAEA,aAAA,MAAA;AACA;AAnQA;AA3FA,CAAA","sourcesContent":["<template>\r\n    <div class=\"test\">\r\n        <div class=\"container\" id=\"container\"></div>\r\n        <!-- <canvas id=\"canvas\"></canvas> -->\r\n    </div>\r\n</template>\r\n<script>\r\nimport * as THREE from \"@/assets/build/three.module\";\r\nimport { OrbitControls } from \"@/assets/examples/jsm/controls/OrbitControls\";\r\nimport { TWEEN } from \"@/assets/examples/jsm/libs/tween.module.min\";\r\nimport { ParametricGeometries } from \"@/assets/examples/jsm/geometries/ParametricGeometries\";\r\nimport { FBXLoader } from \"@/assets/examples/jsm/loaders/FBXLoader\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            renderer: null,\r\n            camera: null,\r\n            scene: null,\r\n            light: null,\r\n            controls: null,\r\n            raycaster: null,\r\n            mouse: null,\r\n            particleSystem: null,\r\n\r\n            geometry: null,\r\n\r\n            geometryArr: [],\r\n            count: 0\r\n        };\r\n    },\r\n    beforeDestroy() {\r\n        if (!document.getElementById(\"container\")) {\r\n            return;\r\n        }\r\n        this.scene.children.forEach((data, index) => {\r\n            // console.log(data);\r\n            if (data.type == \"Group\") {\r\n                data.traverse(function(obj) {\r\n                    if (obj.type === \"Mesh\") {\r\n                        obj.geometry.dispose();\r\n                        if (obj.material.length) {\r\n                            obj.material.forEach(obj2 => {\r\n                                obj2.dispose();\r\n                            });\r\n                        } else {\r\n                            obj.material.dispose();\r\n                        }\r\n                    }\r\n                });\r\n                this.scene.remove(data);\r\n            } else {\r\n                this.scene.remove(data);\r\n            }\r\n        });\r\n        this.initThree = null;\r\n        this.initCamera = null;\r\n        this.initScene = null;\r\n        this.initLight = null;\r\n        this.initGeometry = null;\r\n        this.animate = null;\r\n        this.initControls = null;\r\n        this.initRaycaster = null;\r\n        this.initOutline = null;\r\n        this.addLine = null;\r\n        this.setSprite = null;\r\n        this.setLabel = null;\r\n\r\n        //变量\r\n        this.container = null;\r\n        this.camera = null;\r\n        this.scene = null;\r\n        this.renderer = null;\r\n        this.mesh = null;\r\n        this.light = null;\r\n        this.clock = null;\r\n        this.controls = null;\r\n        this.mesh1 = null;\r\n        this.mixer1 = null;\r\n        this.raycaster = null;\r\n        this.mouse = null;\r\n\r\n        window.removeEventListener(\"click\", this.onclikc);\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    },\r\n    mounted() {\r\n        if (document.getElementById(\"container\")) {\r\n            this.initRenderer();\r\n            this.initCamera();\r\n            this.initScene();\r\n            this.initLight();\r\n            this.initControls();\r\n            this.initRaycaster();\r\n            this.animate();\r\n            this.initGeometry();\r\n\r\n            let helper = new THREE.AxesHelper(10);\r\n            this.scene.add(helper);\r\n\r\n            window.addEventListener(\"resize\", this.onWindowResize, false);\r\n            window.addEventListener(\"click\", this.onclikc, false);\r\n        }\r\n    },\r\n    methods: {\r\n        initRenderer() {\r\n            this.container = document.getElementById(\"container\");\r\n            //渲染器\r\n            this.renderer = new THREE.WebGLRenderer({\r\n                antialias: true,\r\n                alpha: false\r\n            }); //alpha设置为true 背景为透明\r\n\r\n            this.renderer.setSize(\r\n                this.container.clientWidth,\r\n                this.container.clientHeight\r\n            );\r\n            // this.renderer.shadowMap.enabled = true;\r\n            this.container.appendChild(this.renderer.domElement);\r\n        },\r\n        initCamera() {\r\n            //相机\r\n            this.camera = new THREE.PerspectiveCamera(\r\n                75,\r\n                this.container.clientWidth / this.container.clientHeight,\r\n                1,\r\n                1000000\r\n            );\r\n            this.camera.position.x = 0;\r\n            this.camera.position.y = 0;\r\n            this.camera.position.z = 2000;\r\n\r\n            this.camera.up.x = 0;\r\n            this.camera.up.y = 1;\r\n            this.camera.up.z = 0;\r\n\r\n            this.camera.lookAt(0, 0, 0);\r\n        },\r\n        initScene() {\r\n            //场景\r\n            this.scene = new THREE.Scene();\r\n        },\r\n        initLight() {\r\n            //光源\r\n            this.scene.add(new THREE.AmbientLight(0xffffff)); // 创建环境光源，不产生阴影\r\n            this.light = new THREE.DirectionalLight(0xffffff); // 创建点光源，可以产生阴影\r\n            this.light.position.set(0, 110, 110);\r\n            this.light.shadow.camera.top = 100;\r\n            this.light.shadow.camera.bottom = -100;\r\n            this.light.shadow.camera.left = -100;\r\n            this.light.shadow.camera.right = 100;\r\n            //告诉平行光需要开启阴影投射\r\n            this.light.castShadow = true;\r\n            this.scene.add(this.light);\r\n        },\r\n        initControls() {\r\n            //相机旋转插件\r\n            this.controls = new OrbitControls(\r\n                this.camera,\r\n                this.renderer.domElement\r\n            );\r\n            // 页面转动效果\r\n            // controls.enabled = false;\r\n            // 使动画循环使用时阻尼或自转 意思是否有惯性\r\n            this.controls.enableDamping = false;\r\n            //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n            this.controls.dampingFactor = 1;\r\n            //是否可以缩放\r\n            this.controls.enableZoom = true;\r\n            //是否自动旋转\r\n            this.controls.autoRotate = false;\r\n            //设置相机距离原点的最远距离\r\n            this.controls.minDistance = 1;\r\n            //设置相机距离原点的最远距离\r\n            this.controls.maxDistance = 200000;\r\n            //是否开启右键拖拽\r\n            this.controls.enablePan = true;\r\n            //最大仰视角和俯视角\r\n            this.controls.minPolarAngle = 0; // radians\r\n            this.controls.maxPolarAngle = Math.PI;\r\n            //是否自动旋转，自动旋转速度。默认每秒30圈\r\n            this.controls.autoRotate = false;\r\n            this.controls.autoRotateSpeed = 0.2; // 30 seconds per round when fps is 60\r\n            //是否能使用键盘\r\n            this.controls.enableKeys = false;\r\n\r\n            // this.controls.target = new THREE.Vector3(17435, 2280, 13680); //修改相机原点\r\n        },\r\n        initRaycaster() {\r\n            //射线，用以判断点击那个模型(拾取)\r\n            this.raycaster = new THREE.Raycaster();\r\n            this.mouse = new THREE.Vector2();\r\n        },\r\n        onWindowResize() {\r\n            // 窗口自动适应\r\n            this.camera.aspect = window.innerWidth / window.innerHeight;\r\n            this.camera.updateProjectionMatrix();\r\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        },\r\n        animate() {\r\n            if (this.renderer) {\r\n                this.controls.update();\r\n                this.renderer.render(this.scene, this.camera);\r\n                TWEEN.update();\r\n                if (this.geometry) {\r\n                    this.geometry.verticesNeedUpdate = true;\r\n                }\r\n                requestAnimationFrame(this.animate);\r\n            }\r\n        },\r\n        onclikc() {\r\n            //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1.\r\n            let event = window.event;\r\n            this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n            this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n            // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n            this.raycaster.setFromCamera(this.mouse, this.camera);\r\n            let intersects = this.raycaster.intersectObjects(\r\n                this.scene.children,\r\n                true\r\n            );\r\n            if (intersects.length) {\r\n                // console.log(intersects[0]);\r\n                return;\r\n                // this.tween1();\r\n            }\r\n        },\r\n        initGeometry() {\r\n            this.loaderModel(() => {\r\n                this.geometry = new THREE.Geometry();\r\n\r\n                for (let i = 0; i < this.count; i++) {\r\n                    this.geometry.vertices.push(\r\n                        new THREE.Vector3(\r\n                            1000 * Math.random(),\r\n                            1000 * Math.random(),\r\n                            1000 * Math.random()\r\n                        )\r\n                    );\r\n                }\r\n                this.geometry.center();\r\n\r\n                let texture = new THREE.Texture(this.getCanvas());\r\n                texture.needsUpdate = true;\r\n                let material = new THREE.PointsMaterial({\r\n                    color: 0xffffff,\r\n                    size: 1,\r\n                    map: texture,\r\n                    blending: THREE.AdditiveBlending,\r\n                    depthTest: true,\r\n                    transparent: true\r\n                });\r\n\r\n                let particles = new THREE.Points(this.geometry, material); //加入粒子系统中\r\n                this.scene.add(particles);\r\n\r\n                let index = 0;\r\n                setInterval(() => {\r\n                    this.implementTween(index);\r\n                    if (index < 3) {\r\n                        index++;\r\n                    } else {\r\n                        index = 0;\r\n                    }\r\n                }, 5000);\r\n            });\r\n        },\r\n\r\n        loaderModel(fun = () => {}) {\r\n            //加载模型并获取他的顶点数据\r\n            let num = 0;\r\n            let modelPath = [\r\n                \"1_1.FBX\",\r\n                \"2_1.FBX\",\r\n                \"3_1.FBX\",\r\n                \"4_1.FBX\",\r\n                \"5_1.FBX\",\r\n                \"6_1.FBX\"\r\n            ];\r\n\r\n            for (let i = 0; i < modelPath.length; i++) {\r\n                let loader1 = new FBXLoader();\r\n                loader1.load(\r\n                    process.env.BASE_URL + \"models/\" + modelPath[i],\r\n                    mesh => {\r\n                        mesh.children[0].geometry.center();\r\n                        mesh.children[0].geometry.scale(50, 50, 50);\r\n                        // this.scene.add(mesh);\r\n                        let geometry = mesh.children[0].geometry;\r\n                        this.TranGeometry(geometry);\r\n                        num++;\r\n                        if (num >= modelPath.length) {\r\n                            fun();\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        TranGeometry(BufferGeometry) {\r\n            //把 \"BufferGeometry\" 转换成 \"Geometry\"\r\n            let geometry = new THREE.Geometry();\r\n            geometry.fromBufferGeometry(BufferGeometry);\r\n            this.count =\r\n                this.count < geometry.vertices.length\r\n                    ? geometry.vertices.length\r\n                    : this.count;\r\n\r\n            this.geometryArr.push(geometry);\r\n        },\r\n\r\n        implementTween(index) {\r\n            this.geometry.vertices.forEach((e, i, arr) => {\r\n                let length = this.geometryArr[index].vertices.length;\r\n                let o = this.geometryArr[index].vertices[i % length];\r\n                new TWEEN.Tween(e)\r\n                    .to(\r\n                        {\r\n                            x: o.x,\r\n                            y: o.y,\r\n                            z: o.z\r\n                        },\r\n                        1000\r\n                    )\r\n                    .easing(TWEEN.Easing.Exponential.In)\r\n                    .delay(1000 * Math.random())\r\n                    .start();\r\n            });\r\n        },\r\n\r\n        getCanvas() {\r\n            //粒子贴图\r\n            let canvas = document.createElement(\"canvas\");\r\n            // 开始绘制路径\r\n            canvas.width = 64;\r\n            canvas.height = 64;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.beginPath();\r\n\r\n            ctx.arc(canvas.width / 2, canvas.height / 2, 32, 0, Math.PI * 2);\r\n\r\n            let gradient = ctx.createRadialGradient(\r\n                canvas.width / 2,\r\n                canvas.height / 2,\r\n                0,\r\n                canvas.width / 2,\r\n                canvas.height / 2,\r\n                canvas.width / 2\r\n            );\r\n            gradient.addColorStop(0, \"rgba(255,255,255,1)\");\r\n            gradient.addColorStop(0.1, \"rgba(255,255,255,1)\");\r\n            gradient.addColorStop(0.4, \"rgba(255,255,255,9)\");\r\n            gradient.addColorStop(1, \"rgba(0,0,0,0.5)\");\r\n\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n            // 绘制圆的路径**\r\n\r\n            // 0°是从三点钟方向开始的\r\n            // 描边路径\r\n            ctx.stroke();\r\n\r\n            return canvas;\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.test {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    .container {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/test"}]}