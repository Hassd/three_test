{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\OBJLoader2.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\OBJLoader2.js","mtime":1581123525000},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/examples/jsm/loaders/OBJLoader2.js"],"names":["FileLoader","Object3D","Loader","OBJLoader2Parser","MeshReceiver","MaterialHandler","OBJLoader2","manager","call","parser","modelName","instanceNo","baseObject3d","materialHandler","meshReceiver","scope","defaultOnAssetAvailable","payload","_onAssetAvailable","setCallbackOnAssetAvailable","OBJLOADER2_VERSION","console","info","prototype","Object","assign","create","constructor","setLogging","enabled","debug","setMaterialPerSmoothingGroup","materialPerSmoothingGroup","setUseOAsMesh","useOAsMesh","setUseIndices","useIndices","setDisregardNormals","disregardNormals","setModelName","setBaseObject3d","undefined","addMaterials","materials","overrideExisting","onAssetAvailable","setCallbackOnProgress","onProgress","setCallbackOnError","onError","setCallbackOnLoad","onLoad","setCallbackOnMeshAlter","onMeshAlter","_setCallbacks","callbacks","setCallbackOnLoadMaterials","onLoadMaterials","load","url","onFileLoadProgress","Function","errorMessage","event","currentTarget","statusText","responseURL","urlFull","URL","window","location","href","filename","urlParts","split","length","urlPartsPath","slice","join","path","numericalValueRef","numericalValue","lengthComputable","loaded","total","output","toFixed","fileLoaderOnLoad","content","parse","fileLoader","setPath","resourcePath","setResponseType","logging","time","createDefaultMaterials","setMaterials","getMaterials","ArrayBuffer","Uint8Array","execute","String","executeLegacy","timeEnd","cmd","type","meshes","buildMeshes","mesh","add","addPayloadMaterials"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA,SACCA,UADD,EAECC,QAFD,EAGCC,MAHD,QAIO,gCAJP;AAMA,SAASC,gBAAT,QAAiC,4CAAjC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,eAAT,QAAgC,kCAAhC;AAEA;;;;;;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAWC,OAAX,EAAqB;AAEvCL,EAAAA,MAAM,CAACM,IAAP,CAAa,IAAb,EAAmBD,OAAnB;AAEA,OAAKE,MAAL,GAAc,IAAIN,gBAAJ,EAAd;AAEA,OAAKO,SAAL,GAAiB,EAAjB;AACA,OAAKC,UAAL,GAAkB,CAAlB;AACA,OAAKC,YAAL,GAAoB,IAAIX,QAAJ,EAApB;AAEA,OAAKY,eAAL,GAAuB,IAAIR,eAAJ,EAAvB;AACA,OAAKS,YAAL,GAAoB,IAAIV,YAAJ,CAAkB,KAAKS,eAAvB,CAApB,CAXuC,CAavC;;AACA,MAAIE,KAAK,GAAG,IAAZ;;AACA,MAAIC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAWC,OAAX,EAAqB;AAElDF,IAAAA,KAAK,CAACG,iBAAN,CAAyBD,OAAzB;AAEA,GAJD;;AAKA,OAAKR,MAAL,CAAYU,2BAAZ,CAAyCH,uBAAzC;AAEA,CAtBD;;AAwBAV,UAAU,CAACc,kBAAX,GAAgC,OAAhC;AACAC,OAAO,CAACC,IAAR,CAAc,+BAA+BhB,UAAU,CAACc,kBAAxD;AAGAd,UAAU,CAACiB,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAexB,MAAM,CAACqB,SAAtB,CAAf,EAAkD;AAExEI,EAAAA,WAAW,EAAErB,UAF2D;;AAIxE;;;;AAIAsB,EAAAA,UAAU,EAAE,oBAAWC,OAAX,EAAoBC,KAApB,EAA4B;AAEvC,SAAKrB,MAAL,CAAYmB,UAAZ,CAAwBC,OAAxB,EAAiCC,KAAjC;AACA,WAAO,IAAP;AAEA,GAbuE;;AAexE;;;;AAIAC,EAAAA,4BAA4B,EAAE,sCAAWC,yBAAX,EAAuC;AAEpE,SAAKvB,MAAL,CAAYsB,4BAAZ,CAA0CC,yBAA1C;AACA,WAAO,IAAP;AAEA,GAxBuE;;AA0BxE;;;;AAIAC,EAAAA,aAAa,EAAE,uBAAWC,UAAX,EAAwB;AAEtC,SAAKzB,MAAL,CAAYwB,aAAZ,CAA2BC,UAA3B;AACA,WAAO,IAAP;AAEA,GAnCuE;;AAqCxE;;;;AAIAC,EAAAA,aAAa,EAAE,uBAAWC,UAAX,EAAwB;AAEtC,SAAK3B,MAAL,CAAY0B,aAAZ,CAA2BC,UAA3B;AACA,WAAO,IAAP;AAEA,GA9CuE;;AAgDxE;;;;AAIAC,EAAAA,mBAAmB,EAAE,6BAAWC,gBAAX,EAA8B;AAElD,SAAK7B,MAAL,CAAY4B,mBAAZ,CAAiCC,gBAAjC;AACA,WAAO,IAAP;AAEA,GAzDuE;;AA2DxE;;;;;;AAMAC,EAAAA,YAAY,EAAE,sBAAW7B,SAAX,EAAuB;AAEpC,SAAKA,SAAL,GAAiBA,SAAS,GAAGA,SAAH,GAAe,KAAKA,SAA9C;AACA,WAAO,IAAP;AAEA,GAtEuE;;AAwExE;;;;;;AAMA8B,EAAAA,eAAe,EAAE,yBAAW5B,YAAX,EAA0B;AAE1C,SAAKA,YAAL,GAAsBA,YAAY,KAAK6B,SAAjB,IAA8B7B,YAAY,KAAK,IAAjD,GAA0D,KAAKA,YAA/D,GAA8EA,YAAlG;AACA,WAAO,IAAP;AAEA,GAnFuE;;AAqFxE;;;;;;;AAOA8B,EAAAA,YAAY,EAAE,sBAAWC,SAAX,EAAsBC,gBAAtB,EAAyC;AAEtD,SAAK/B,eAAL,CAAqB6B,YAArB,CAAmCC,SAAnC,EAA8CC,gBAA9C;AACA,WAAO,IAAP;AAEA,GAjGuE;;AAmGxE;;;;AAIAzB,EAAAA,2BAA2B,EAAE,qCAAW0B,gBAAX,EAA8B;AAE1D,SAAKpC,MAAL,CAAYU,2BAAZ,CAAyC0B,gBAAzC;AACA,WAAO,IAAP;AAEA,GA5GuE;;AA8GxE;;;;AAIAC,EAAAA,qBAAqB,EAAE,+BAAWC,UAAX,EAAwB;AAE9C,SAAKtC,MAAL,CAAYqC,qBAAZ,CAAmCC,UAAnC;AACA,WAAO,IAAP;AAEA,GAvHuE;;AAyHxE;;;;AAIAC,EAAAA,kBAAkB,EAAE,4BAAWC,OAAX,EAAqB;AAExC,SAAKxC,MAAL,CAAYuC,kBAAZ,CAAgCC,OAAhC;AACA,WAAO,IAAP;AAEA,GAlIuE;;AAoIxE;;;;AAIAC,EAAAA,iBAAiB,EAAE,2BAAWC,MAAX,EAAoB;AAEtC,SAAK1C,MAAL,CAAYyC,iBAAZ,CAA+BC,MAA/B;AACA,WAAO,IAAP;AAEA,GA7IuE;;AA+IxE;;;;;;AAMAC,EAAAA,sBAAsB,EAAE,gCAAWC,WAAX,EAAyB;AAEhD,SAAKvC,YAAL,CAAkBwC,aAAlB,CAAiC,KAAK7C,MAAL,CAAY8C,SAAZ,CAAsBR,UAAvD,EAAmEM,WAAnE;;AACA,WAAO,IAAP;AAEA,GA1JuE;;AA4JxE;;;;;;AAMAG,EAAAA,0BAA0B,EAAE,oCAAWC,eAAX,EAA6B;AAExD,SAAK5C,eAAL,CAAqByC,aAArB,CAAoCG,eAApC;;AACA,WAAO,IAAP;AAEA,GAvKuE;;AAyKxE;;;;;;;;;AASAC,EAAAA,IAAI,EAAE,cAAWC,GAAX,EAAgBR,MAAhB,EAAwBS,kBAAxB,EAA4CX,OAA5C,EAAqDI,WAArD,EAAmE;AAExE,QAAItC,KAAK,GAAG,IAAZ;;AACA,QAAKoC,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKV,SAA9B,IAA2C,EAAIU,MAAM,YAAYU,QAAtB,CAAhD,EAAmF;AAElF,UAAIC,YAAY,GAAG,uCAAnB;AACA/C,MAAAA,KAAK,CAACN,MAAN,CAAa8C,SAAb,CAAuBN,OAAvB,CAAgCa,YAAhC;AACA,YAAMA,YAAN;AAEA,KAND,MAMO;AAEN,WAAKrD,MAAL,CAAYyC,iBAAZ,CAA+BC,MAA/B;AAEA;;AACD,QAAKF,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKR,SAAhC,IAA6C,EAAIQ,OAAO,YAAYY,QAAvB,CAAlD,EAAsF;AAErFZ,MAAAA,OAAO,GAAG,iBAAWc,KAAX,EAAmB;AAE5B,YAAID,YAAY,GAAGC,KAAnB;;AACA,YAAKA,KAAK,CAACC,aAAN,IAAuBD,KAAK,CAACC,aAAN,CAAoBC,UAApB,KAAmC,IAA/D,EAAsE;AAErEH,UAAAA,YAAY,GAAG,6CAA6CC,KAAK,CAACC,aAAN,CAAoBE,WAAjE,GAA+E,YAA/E,GAA8FH,KAAK,CAACC,aAAN,CAAoBC,UAAjI;AAEA;;AACDlD,QAAAA,KAAK,CAACN,MAAN,CAAa8C,SAAb,CAAuBN,OAAvB,CAAgCa,YAAhC;AAEA,OAVD;AAYA;;AACD,QAAK,CAAEH,GAAP,EAAa;AAEZV,MAAAA,OAAO,CAAE,kDAAF,CAAP;AAEA;;AACD,QAAIkB,OAAO,GAAG,IAAIC,GAAJ,CAAST,GAAT,EAAcU,MAAM,CAACC,QAAP,CAAgBC,IAA9B,EAAqCA,IAAnD;AACA,QAAIC,QAAQ,GAAGL,OAAf;AACA,QAAIM,QAAQ,GAAGN,OAAO,CAACO,KAAR,CAAe,GAAf,CAAf;;AACA,QAAKD,QAAQ,CAACE,MAAT,GAAkB,CAAvB,EAA2B;AAE1BH,MAAAA,QAAQ,GAAGC,QAAQ,CAAEA,QAAQ,CAACE,MAAT,GAAkB,CAApB,CAAnB;AACA,UAAIC,YAAY,GAAGH,QAAQ,CAACI,KAAT,CAAgB,CAAhB,EAAmBJ,QAAQ,CAACE,MAAT,GAAkB,CAArC,EAAyCG,IAAzC,CAA+C,GAA/C,IAAuD,GAA1E;AACA,UAAKF,YAAY,KAAKnC,SAAjB,IAA8BmC,YAAY,KAAK,IAApD,EAA2D,KAAKG,IAAL,GAAYH,YAAZ;AAE3D;;AACD,QAAKhB,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAKnB,SAAtD,IAAmE,EAAImB,kBAAkB,YAAYC,QAAlC,CAAxE,EAAuH;AAEtH,UAAImB,iBAAiB,GAAG,CAAxB;AACA,UAAIC,cAAc,GAAG,CAArB;;AACArB,MAAAA,kBAAkB,GAAG,4BAAWG,KAAX,EAAmB;AAEvC,YAAK,CAAEA,KAAK,CAACmB,gBAAb,EAAgC;AAEhCD,QAAAA,cAAc,GAAGlB,KAAK,CAACoB,MAAN,GAAepB,KAAK,CAACqB,KAAtC;;AACA,YAAKH,cAAc,GAAGD,iBAAtB,EAA0C;AAEzCA,UAAAA,iBAAiB,GAAGC,cAApB;AACA,cAAII,MAAM,GAAG,kBAAkB1B,GAAlB,GAAwB,KAAxB,GAAgC,CAAEsB,cAAc,GAAG,GAAnB,EAAyBK,OAAzB,CAAkC,CAAlC,CAAhC,GAAwE,GAArF;AACAvE,UAAAA,KAAK,CAACN,MAAN,CAAa8C,SAAb,CAAuBR,UAAvB,CAAmC,cAAnC,EAAmDsC,MAAnD,EAA2DJ,cAA3D;AAEA;AAED,OAbD;AAeA;;AAED,SAAK7B,sBAAL,CAA6BC,WAA7B;;AACA,QAAIkC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAWC,OAAX,EAAqB;AAE3CzE,MAAAA,KAAK,CAACN,MAAN,CAAa8C,SAAb,CAAuBJ,MAAvB,CAA+BpC,KAAK,CAAC0E,KAAN,CAAaD,OAAb,CAA/B,EAAuD,oCAAvD;AAEA,KAJD;;AAKA,QAAIE,UAAU,GAAG,IAAI1F,UAAJ,CAAgB,KAAKO,OAArB,CAAjB;AACAmF,IAAAA,UAAU,CAACC,OAAX,CAAoB,KAAKZ,IAAL,IAAa,KAAKa,YAAtC;AACAF,IAAAA,UAAU,CAACG,eAAX,CAA4B,aAA5B;AACAH,IAAAA,UAAU,CAAChC,IAAX,CAAiBc,QAAjB,EAA2Be,gBAA3B,EAA6C3B,kBAA7C,EAAiEX,OAAjE;AAEA,GA9PuE;;AAgQxE;;;;;;AAMAwC,EAAAA,KAAK,EAAE,eAAWD,OAAX,EAAqB;AAE3B;AACA,QAAKA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK/C,SAArC,EAAiD;AAEhD,YAAM,mFAAN;AAEA;;AACD,QAAK,KAAKhC,MAAL,CAAYqF,OAAZ,CAAoBjE,OAAzB,EAAmC;AAElCR,MAAAA,OAAO,CAAC0E,IAAR,CAAc,sBAAsB,KAAKrF,SAAzC;AAEA,KAZ0B,CAc3B;;;AACA,SAAKG,eAAL,CAAqBmF,sBAArB,CAA6C,KAA7C,EAf2B,CAiB3B;;AACA,SAAKvF,MAAL,CAAYwF,YAAZ,CAA0B,KAAKpF,eAAL,CAAqBqF,YAArB,EAA1B;;AAEA,QAAKV,OAAO,YAAYW,WAAnB,IAAkCX,OAAO,YAAYY,UAA1D,EAAuE;AAEtE,UAAK,KAAK3F,MAAL,CAAYqF,OAAZ,CAAoBjE,OAAzB,EAAmCR,OAAO,CAACC,IAAR,CAAc,wBAAd;AACnC,WAAKb,MAAL,CAAY4F,OAAZ,CAAqBb,OAArB;AAEA,KALD,MAKO,IAAK,OAASA,OAAT,KAAuB,QAAvB,IAAmCA,OAAO,YAAYc,MAA3D,EAAoE;AAE1E,UAAK,KAAK7F,MAAL,CAAYqF,OAAZ,CAAoBjE,OAAzB,EAAmCR,OAAO,CAACC,IAAR,CAAc,iBAAd;AACnC,WAAKb,MAAL,CAAY8F,aAAZ,CAA2Bf,OAA3B;AAEA,KALM,MAKA;AAEN,WAAK/E,MAAL,CAAY8C,SAAZ,CAAsBN,OAAtB,CAA+B,yEAA/B;AAEA;;AACD,QAAK,KAAKxC,MAAL,CAAYqF,OAAZ,CAAoBjE,OAAzB,EAAmC;AAElCR,MAAAA,OAAO,CAACmF,OAAR,CAAiB,sBAAsB,KAAK9F,SAA5C;AAEA;;AACD,WAAO,KAAKE,YAAZ;AAEA,GAhTuE;AAkTxEM,EAAAA,iBAAiB,EAAE,2BAAWD,OAAX,EAAqB;AAEvC,QAAKA,OAAO,CAACwF,GAAR,KAAgB,gBAArB,EAAwC;;AAExC,QAAKxF,OAAO,CAACyF,IAAR,KAAiB,MAAtB,EAA+B;AAE9B,UAAIC,MAAM,GAAG,KAAK7F,YAAL,CAAkB8F,WAAlB,CAA+B3F,OAA/B,CAAb;AAF8B;AAAA;AAAA;;AAAA;AAG9B,6BAAkB0F,MAAlB,8HAA2B;AAAA,cAAjBE,IAAiB;AAE1B,eAAKjG,YAAL,CAAkBkG,GAAlB,CAAuBD,IAAvB;AAEA;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,KATD,MASO,IAAK5F,OAAO,CAACyF,IAAR,KAAiB,UAAtB,EAAmC;AAEzC,WAAK7F,eAAL,CAAqBkG,mBAArB,CAA0C9F,OAA1C;AAEA;AAED;AArUuE,CAAlD,CAAvB;AAyUA,SAASX,UAAT","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nimport {\n\tFileLoader,\n\tObject3D,\n\tLoader\n} from \"../../../build/three.module.js\";\n\nimport { OBJLoader2Parser } from \"./obj2/worker/parallel/OBJLoader2Parser.js\";\nimport { MeshReceiver } from \"./obj2/shared/MeshReceiver.js\";\nimport { MaterialHandler } from \"./obj2/shared/MaterialHandler.js\";\n\n/**\n * Creates a new OBJLoader2. Use it to load OBJ data from files or to parse OBJ data from arraybuffer or text.\n *\n * @param {LoadingManager} [manager] The loadingManager for the loader to use. Default is {@link LoadingManager}\n * @constructor\n */\nconst OBJLoader2 = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.parser = new OBJLoader2Parser();\n\n\tthis.modelName = '';\n\tthis.instanceNo = 0;\n\tthis.baseObject3d = new Object3D();\n\n\tthis.materialHandler = new MaterialHandler();\n\tthis.meshReceiver = new MeshReceiver( this.materialHandler );\n\n\t// as OBJLoader2 is no longer derived from OBJLoader2Parser, we need to override the default onAssetAvailable callback\n\tlet scope = this;\n\tlet defaultOnAssetAvailable = function ( payload ) {\n\n\t\tscope._onAssetAvailable( payload );\n\n\t};\n\tthis.parser.setCallbackOnAssetAvailable( defaultOnAssetAvailable );\n\n};\n\nOBJLoader2.OBJLOADER2_VERSION = '3.1.1';\nconsole.info( 'Using OBJLoader2 version: ' + OBJLoader2.OBJLOADER2_VERSION );\n\n\nOBJLoader2.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: OBJLoader2,\n\n\t/**\n\t * See {@link OBJLoader2Parser.setLogging}\n\t * @return {OBJLoader2}\n\t */\n\tsetLogging: function ( enabled, debug ) {\n\n\t\tthis.parser.setLogging( enabled, debug );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setMaterialPerSmoothingGroup}\n\t * @return {OBJLoader2}\n\t */\n\tsetMaterialPerSmoothingGroup: function ( materialPerSmoothingGroup ) {\n\n\t\tthis.parser.setMaterialPerSmoothingGroup( materialPerSmoothingGroup );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setUseOAsMesh}\n\t * @return {OBJLoader2}\n\t */\n\tsetUseOAsMesh: function ( useOAsMesh ) {\n\n\t\tthis.parser.setUseOAsMesh( useOAsMesh );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setUseIndices}\n\t * @return {OBJLoader2}\n\t */\n\tsetUseIndices: function ( useIndices ) {\n\n\t\tthis.parser.setUseIndices( useIndices );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setDisregardNormals}\n\t * @return {OBJLoader2}\n\t */\n\tsetDisregardNormals: function ( disregardNormals ) {\n\n\t\tthis.parser.setDisregardNormals( disregardNormals );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set the name of the model.\n\t *\n\t * @param {string} modelName\n\t * @return {OBJLoader2}\n\t */\n\tsetModelName: function ( modelName ) {\n\n\t\tthis.modelName = modelName ? modelName : this.modelName;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set the node where the loaded objects will be attached directly.\n\t *\n\t * @param {Object3D} baseObject3d Object already attached to scenegraph where new meshes will be attached to\n\t * @return {OBJLoader2}\n\t */\n\tsetBaseObject3d: function ( baseObject3d ) {\n\n\t\tthis.baseObject3d = ( baseObject3d === undefined || baseObject3d === null ) ? this.baseObject3d : baseObject3d;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Add materials as associated array.\n\t *\n\t * @param {Object} materials Object with named {@link Material}\n\t * @param overrideExisting boolean Override existing material\n\t * @return {OBJLoader2}\n\t */\n\taddMaterials: function ( materials, overrideExisting ) {\n\n\t\tthis.materialHandler.addMaterials( materials, overrideExisting );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnAssetAvailable}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnAssetAvailable: function ( onAssetAvailable ) {\n\n\t\tthis.parser.setCallbackOnAssetAvailable( onAssetAvailable );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnProgress}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnProgress: function ( onProgress ) {\n\n\t\tthis.parser.setCallbackOnProgress( onProgress );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnError}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnError: function ( onError ) {\n\n\t\tthis.parser.setCallbackOnError( onError );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnLoad}\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnLoad: function ( onLoad ) {\n\n\t\tthis.parser.setCallbackOnLoad( onLoad );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register a function that is called once a single mesh is available and it could be altered by the supplied function.\n\t *\n\t * @param {Function} [onMeshAlter]\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnMeshAlter: function ( onMeshAlter ) {\n\n\t\tthis.meshReceiver._setCallbacks( this.parser.callbacks.onProgress, onMeshAlter );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Register a function that is called once all materials have been loaded and they could be altered by the supplied function.\n\t *\n\t * @param {Function} [onLoadMaterials]\n\t * @return {OBJLoader2}\n\t */\n\tsetCallbackOnLoadMaterials: function ( onLoadMaterials ) {\n\n\t\tthis.materialHandler._setCallbacks( onLoadMaterials );\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Use this convenient method to load a file at the given URL. By default the fileLoader uses an ArrayBuffer.\n\t *\n\t * @param {string}  url A string containing the path/URL of the file to be loaded.\n\t * @param {function} onLoad A function to be called after loading is successfully completed. The function receives loaded Object3D as an argument.\n\t * @param {function} [onFileLoadProgress] A function to be called while the loading is in progress. The argument will be the XMLHttpRequest instance, which contains total and Integer bytes.\n\t * @param {function} [onError] A function to be called if an error occurs during loading. The function receives the error as an argument.\n\t * @param {function} [onMeshAlter] Called after every single mesh is made available by the parser\n\t */\n\tload: function ( url, onLoad, onFileLoadProgress, onError, onMeshAlter ) {\n\n\t\tlet scope = this;\n\t\tif ( onLoad === null || onLoad === undefined || ! ( onLoad instanceof Function ) ) {\n\n\t\t\tlet errorMessage = 'onLoad is not a function! Aborting...';\n\t\t\tscope.parser.callbacks.onError( errorMessage );\n\t\t\tthrow errorMessage;\n\n\t\t} else {\n\n\t\t\tthis.parser.setCallbackOnLoad( onLoad );\n\n\t\t}\n\t\tif ( onError === null || onError === undefined || ! ( onError instanceof Function ) ) {\n\n\t\t\tonError = function ( event ) {\n\n\t\t\t\tlet errorMessage = event;\n\t\t\t\tif ( event.currentTarget && event.currentTarget.statusText !== null ) {\n\n\t\t\t\t\terrorMessage = 'Error occurred while downloading!\\nurl: ' + event.currentTarget.responseURL + '\\nstatus: ' + event.currentTarget.statusText;\n\n\t\t\t\t}\n\t\t\t\tscope.parser.callbacks.onError( errorMessage );\n\n\t\t\t};\n\n\t\t}\n\t\tif ( ! url ) {\n\n\t\t\tonError( 'An invalid url was provided. Unable to continue!' );\n\n\t\t}\n\t\tlet urlFull = new URL( url, window.location.href ).href;\n\t\tlet filename = urlFull;\n\t\tlet urlParts = urlFull.split( '/' );\n\t\tif ( urlParts.length > 2 ) {\n\n\t\t\tfilename = urlParts[ urlParts.length - 1 ];\n\t\t\tlet urlPartsPath = urlParts.slice( 0, urlParts.length - 1 ).join( '/' ) + '/';\n\t\t\tif ( urlPartsPath !== undefined && urlPartsPath !== null ) this.path = urlPartsPath;\n\n\t\t}\n\t\tif ( onFileLoadProgress === null || onFileLoadProgress === undefined || ! ( onFileLoadProgress instanceof Function ) ) {\n\n\t\t\tlet numericalValueRef = 0;\n\t\t\tlet numericalValue = 0;\n\t\t\tonFileLoadProgress = function ( event ) {\n\n\t\t\t\tif ( ! event.lengthComputable ) return;\n\n\t\t\t\tnumericalValue = event.loaded / event.total;\n\t\t\t\tif ( numericalValue > numericalValueRef ) {\n\n\t\t\t\t\tnumericalValueRef = numericalValue;\n\t\t\t\t\tlet output = 'Download of \"' + url + '\": ' + ( numericalValue * 100 ).toFixed( 2 ) + '%';\n\t\t\t\t\tscope.parser.callbacks.onProgress( 'progressLoad', output, numericalValue );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tthis.setCallbackOnMeshAlter( onMeshAlter );\n\t\tlet fileLoaderOnLoad = function ( content ) {\n\n\t\t\tscope.parser.callbacks.onLoad( scope.parse( content ), \"OBJLoader2#load: Parsing completed\" );\n\n\t\t};\n\t\tlet fileLoader = new FileLoader( this.manager );\n\t\tfileLoader.setPath( this.path || this.resourcePath );\n\t\tfileLoader.setResponseType( 'arraybuffer' );\n\t\tfileLoader.load( filename, fileLoaderOnLoad, onFileLoadProgress, onError );\n\n\t},\n\n\t/**\n\t * Parses OBJ data synchronously from arraybuffer or string and returns the {@link Object3D}.\n\t *\n\t * @param {arraybuffer|string} content OBJ data as Uint8Array or String\n\t * @return {Object3D}\n\t */\n\tparse: function ( content ) {\n\n\t\t// fast-fail in case of illegal data\n\t\tif ( content === null || content === undefined ) {\n\n\t\t\tthrow 'Provided content is not a valid ArrayBuffer or String. Unable to continue parsing';\n\n\t\t}\n\t\tif ( this.parser.logging.enabled ) {\n\n\t\t\tconsole.time( 'OBJLoader parse: ' + this.modelName );\n\n\t\t}\n\n\t\t// Create default materials beforehand, but do not override previously set materials (e.g. during init)\n\t\tthis.materialHandler.createDefaultMaterials( false );\n\n\t\t// code works directly on the material references, parser clear its materials before updating\n\t\tthis.parser.setMaterials( this.materialHandler.getMaterials() );\n\n\t\tif ( content instanceof ArrayBuffer || content instanceof Uint8Array ) {\n\n\t\t\tif ( this.parser.logging.enabled ) console.info( 'Parsing arrayBuffer...' );\n\t\t\tthis.parser.execute( content );\n\n\t\t} else if ( typeof ( content ) === 'string' || content instanceof String ) {\n\n\t\t\tif ( this.parser.logging.enabled ) console.info( 'Parsing text...' );\n\t\t\tthis.parser.executeLegacy( content );\n\n\t\t} else {\n\n\t\t\tthis.parser.callbacks.onError( 'Provided content was neither of type String nor Uint8Array! Aborting...' );\n\n\t\t}\n\t\tif ( this.parser.logging.enabled ) {\n\n\t\t\tconsole.timeEnd( 'OBJLoader parse: ' + this.modelName );\n\n\t\t}\n\t\treturn this.baseObject3d;\n\n\t},\n\n\t_onAssetAvailable: function ( payload ) {\n\n\t\tif ( payload.cmd !== 'assetAvailable' ) return;\n\n\t\tif ( payload.type === 'mesh' ) {\n\n\t\t\tlet meshes = this.meshReceiver.buildMeshes( payload );\n\t\t\tfor ( let mesh of meshes ) {\n\n\t\t\t\tthis.baseObject3d.add( mesh );\n\n\t\t\t}\n\n\t\t} else if ( payload.type === 'material' ) {\n\n\t\t\tthis.materialHandler.addPayloadMaterials( payload );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { OBJLoader2 };\n"]}]}