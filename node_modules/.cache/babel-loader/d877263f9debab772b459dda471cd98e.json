{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\SVGLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\SVGLoader.js","mtime":1581176979126},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/SVGLoader.js"],"names":["BufferGeometry","Color","FileLoader","Float32BufferAttribute","Loader","Matrix3","Path","ShapePath","Vector2","Vector3","SVGLoader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","text","parse","parseNode","node","style","nodeType","transform","getNodeTransform","nodeName","parseStyle","hasAttribute","parsePathNode","parseRectNode","parsePolygonNode","parsePolylineNode","parseCircleNode","parseEllipseNode","parseLineNode","console","log","fill","undefined","color","setStyle","transformPath","currentTransform","paths","push","userData","nodes","childNodes","i","length","transformStack","pop","copy","identity","point","control","firstPoint","isFirstPoint","doSetFirstPoint","d","getAttribute","commands","match","l","command","type","charAt","data","substr","trim","numbers","parseFloats","j","jl","x","y","moveTo","lineTo","bezierCurveTo","getReflection","quadraticCurveTo","rx","ry","start","clone","parseArcCommand","currentPath","autoClose","curves","currentPoint","warn","x_axis_rotation","large_arc_flag","sweep_flag","end","Math","PI","abs","dx2","dy2","x1p","cos","sin","y1p","rxs","rys","x1ps","y1ps","cr","s","sqrt","dq","pq","q","max","cxp","cyp","cx","cy","theta","svgAngle","delta","absellipse","ux","uy","vx","vy","dot","len","ang","acos","min","parseFloat","w","h","iterator","a","b","index","regex","replace","r","subpath","absarc","subPaths","x1","y1","x2","y2","addStyle","svgName","jsName","adjustFunction","v","clamp","positive","string","array","split","number","indexOf","lastIndexOf","splice","parseNodeTransform","premultiply","tempTransform0","transformsTexts","tIndex","transformText","openParPos","closeParPos","transformType","tx","ty","translate","angle","tempTransform1","tempTransform2","rotate","tempTransform3","multiplyMatrices","scaleX","scaleY","scale","set","tan","m","transfVec2","v2","tempV3","applyMatrix3","isRotated","isTransformRotated","n","subPath","curve","isLineCurve","v1","isCubicBezierCurve","v0","v3","isQuadraticBezierCurve","isEllipseCurve","tempV2","aX","aY","xRadius","getTransformScaleX","yRadius","getTransformScaleY","elements","te","time","xml","DOMParser","parseFromString","timeEnd","documentElement","fillOpacity","strokeOpacity","strokeWidth","strokeLineJoin","strokeLineCap","strokeMiterLimit","getStrokeStyle","width","lineJoin","lineCap","miterLimit","strokeColor","pointsToStroke","points","arcDivisions","minDistance","vertices","normals","uvs","pointsToStrokeWithBuffers","geometry","setAttribute","tempV2_1","tempV2_2","tempV2_3","tempV2_4","tempV2_5","tempV2_6","tempV2_7","lastPointL","lastPointR","point0L","point0R","currentPointL","currentPointR","nextPointL","nextPointR","innerPoint","outerPoint","vertexOffset","removeDuplicatedPoints","numPoints","isClosed","equals","previousPoint","nextPoint","strokeWidth2","deltaU","u0","innerSideModified","joinIsOnLeftSide","isMiter","initialJoinIsOnLeftSide","numVertices","currentCoordinate","currentCoordinateUV","getNormal","multiplyScalar","sub","add","iPoint","normal1","u1","subVectors","normalize","miterSide","setLength","negate","miterLength2","segmentLengthPrev","divideScalar","segmentLengthNext","makeSegmentTriangles","makeSegmentWithBevelJoin","createSegmentTrianglesWithMiddleSection","makeCircularSector","miterFraction","addVertex","addCapGeometry","lastOuter","lastInner","toArray","p1","p2","result","position","u","center","il","rotateAround","addVectors","vl","dupPoints","distanceTo","newPoints"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n * @author zz85 / http://joshuakoo.com/\n * @author yomboprime / https://yombo.org\n */\n\nimport {\n    BufferGeometry,\n    Color,\n    FileLoader,\n    Float32BufferAttribute,\n    Loader,\n    Matrix3,\n    Path,\n    ShapePath,\n    Vector2,\n    Vector3\n} from \"../../js/three.module.js\";\n\nvar SVGLoader = function (manager) {\n\n    Loader.call(this, manager);\n\n};\n\nSVGLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\n    constructor: SVGLoader,\n\n    load: function (url, onLoad, onProgress, onError) {\n\n        var scope = this;\n\n        var loader = new FileLoader(scope.manager);\n        loader.setPath(scope.path);\n        loader.load(url, function (text) {\n\n            onLoad(scope.parse(text));\n\n        }, onProgress, onError);\n\n    },\n\n    parse: function (text) {\n\n        function parseNode(node, style) {\n\n            if (node.nodeType !== 1) return;\n\n            var transform = getNodeTransform(node);\n\n            var path = null;\n\n            switch (node.nodeName) {\n\n                case 'svg':\n                    break;\n\n                case 'g':\n                    style = parseStyle(node, style);\n                    break;\n\n                case 'path':\n                    style = parseStyle(node, style);\n                    if (node.hasAttribute('d')) path = parsePathNode(node);\n                    break;\n\n                case 'rect':\n                    style = parseStyle(node, style);\n                    path = parseRectNode(node);\n                    break;\n\n                case 'polygon':\n                    style = parseStyle(node, style);\n                    path = parsePolygonNode(node);\n                    break;\n\n                case 'polyline':\n                    style = parseStyle(node, style);\n                    path = parsePolylineNode(node);\n                    break;\n\n                case 'circle':\n                    style = parseStyle(node, style);\n                    path = parseCircleNode(node);\n                    break;\n\n                case 'ellipse':\n                    style = parseStyle(node, style);\n                    path = parseEllipseNode(node);\n                    break;\n\n                case 'line':\n                    style = parseStyle(node, style);\n                    path = parseLineNode(node);\n                    break;\n\n                default:\n                    console.log(node);\n\n            }\n\n            if (path) {\n\n                if (style.fill !== undefined && style.fill !== 'none') {\n\n                    path.color.setStyle(style.fill);\n\n                }\n\n                transformPath(path, currentTransform);\n\n                paths.push(path);\n\n                path.userData = { node: node, style: style };\n\n            }\n\n            var nodes = node.childNodes;\n\n            for (var i = 0; i < nodes.length; i++) {\n\n                parseNode(nodes[i], style);\n\n            }\n\n            if (transform) {\n\n                transformStack.pop();\n\n                if (transformStack.length > 0) {\n\n                    currentTransform.copy(transformStack[transformStack.length - 1]);\n\n                } else {\n\n                    currentTransform.identity();\n\n                }\n\n            }\n\n        }\n\n        function parsePathNode(node) {\n\n            var path = new ShapePath();\n\n            var point = new Vector2();\n            var control = new Vector2();\n\n            var firstPoint = new Vector2();\n            var isFirstPoint = true;\n            var doSetFirstPoint = false;\n\n            var d = node.getAttribute('d');\n\n            // console.log( d );\n\n            var commands = d.match(/[a-df-z][^a-df-z]*/ig);\n\n            for (var i = 0, l = commands.length; i < l; i++) {\n\n                var command = commands[i];\n\n                var type = command.charAt(0);\n                var data = command.substr(1).trim();\n\n                if (isFirstPoint === true) {\n\n                    doSetFirstPoint = true;\n                    isFirstPoint = false;\n\n                }\n\n                switch (type) {\n\n                    case 'M':\n                        var numbers = parseFloats(data);\n                        for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\n                            point.x = numbers[j + 0];\n                            point.y = numbers[j + 1];\n                            control.x = point.x;\n                            control.y = point.y;\n\n                            if (j === 0) {\n\n                                path.moveTo(point.x, point.y);\n\n                            } else {\n\n                                path.lineTo(point.x, point.y);\n\n                            }\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'H':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j++) {\n\n                            point.x = numbers[j];\n                            control.x = point.x;\n                            control.y = point.y;\n                            path.lineTo(point.x, point.y);\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'V':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j++) {\n\n                            point.y = numbers[j];\n                            control.x = point.x;\n                            control.y = point.y;\n                            path.lineTo(point.x, point.y);\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'L':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\n                            point.x = numbers[j + 0];\n                            point.y = numbers[j + 1];\n                            control.x = point.x;\n                            control.y = point.y;\n                            path.lineTo(point.x, point.y);\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'C':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 6) {\n\n                            path.bezierCurveTo(\n                                numbers[j + 0],\n                                numbers[j + 1],\n                                numbers[j + 2],\n                                numbers[j + 3],\n                                numbers[j + 4],\n                                numbers[j + 5]\n                            );\n                            control.x = numbers[j + 2];\n                            control.y = numbers[j + 3];\n                            point.x = numbers[j + 4];\n                            point.y = numbers[j + 5];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'S':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n\n                            path.bezierCurveTo(\n                                getReflection(point.x, control.x),\n                                getReflection(point.y, control.y),\n                                numbers[j + 0],\n                                numbers[j + 1],\n                                numbers[j + 2],\n                                numbers[j + 3]\n                            );\n                            control.x = numbers[j + 0];\n                            control.y = numbers[j + 1];\n                            point.x = numbers[j + 2];\n                            point.y = numbers[j + 3];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'Q':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n\n                            path.quadraticCurveTo(\n                                numbers[j + 0],\n                                numbers[j + 1],\n                                numbers[j + 2],\n                                numbers[j + 3]\n                            );\n                            control.x = numbers[j + 0];\n                            control.y = numbers[j + 1];\n                            point.x = numbers[j + 2];\n                            point.y = numbers[j + 3];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'T':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\n                            var rx = getReflection(point.x, control.x);\n                            var ry = getReflection(point.y, control.y);\n                            path.quadraticCurveTo(\n                                rx,\n                                ry,\n                                numbers[j + 0],\n                                numbers[j + 1]\n                            );\n                            control.x = rx;\n                            control.y = ry;\n                            point.x = numbers[j + 0];\n                            point.y = numbers[j + 1];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'A':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 7) {\n\n                            var start = point.clone();\n                            point.x = numbers[j + 5];\n                            point.y = numbers[j + 6];\n                            control.x = point.x;\n                            control.y = point.y;\n                            parseArcCommand(\n                                path, numbers[j], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], start, point\n                            );\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'm':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\n                            point.x += numbers[j + 0];\n                            point.y += numbers[j + 1];\n                            control.x = point.x;\n                            control.y = point.y;\n\n                            if (j === 0) {\n\n                                path.moveTo(point.x, point.y);\n\n                            } else {\n\n                                path.lineTo(point.x, point.y);\n\n                            }\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'h':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j++) {\n\n                            point.x += numbers[j];\n                            control.x = point.x;\n                            control.y = point.y;\n                            path.lineTo(point.x, point.y);\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'v':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j++) {\n\n                            point.y += numbers[j];\n                            control.x = point.x;\n                            control.y = point.y;\n                            path.lineTo(point.x, point.y);\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'l':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\n                            point.x += numbers[j + 0];\n                            point.y += numbers[j + 1];\n                            control.x = point.x;\n                            control.y = point.y;\n                            path.lineTo(point.x, point.y);\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'c':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 6) {\n\n                            path.bezierCurveTo(\n                                point.x + numbers[j + 0],\n                                point.y + numbers[j + 1],\n                                point.x + numbers[j + 2],\n                                point.y + numbers[j + 3],\n                                point.x + numbers[j + 4],\n                                point.y + numbers[j + 5]\n                            );\n                            control.x = point.x + numbers[j + 2];\n                            control.y = point.y + numbers[j + 3];\n                            point.x += numbers[j + 4];\n                            point.y += numbers[j + 5];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 's':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n\n                            path.bezierCurveTo(\n                                getReflection(point.x, control.x),\n                                getReflection(point.y, control.y),\n                                point.x + numbers[j + 0],\n                                point.y + numbers[j + 1],\n                                point.x + numbers[j + 2],\n                                point.y + numbers[j + 3]\n                            );\n                            control.x = point.x + numbers[j + 0];\n                            control.y = point.y + numbers[j + 1];\n                            point.x += numbers[j + 2];\n                            point.y += numbers[j + 3];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'q':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 4) {\n\n                            path.quadraticCurveTo(\n                                point.x + numbers[j + 0],\n                                point.y + numbers[j + 1],\n                                point.x + numbers[j + 2],\n                                point.y + numbers[j + 3]\n                            );\n                            control.x = point.x + numbers[j + 0];\n                            control.y = point.y + numbers[j + 1];\n                            point.x += numbers[j + 2];\n                            point.y += numbers[j + 3];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 't':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\n                            var rx = getReflection(point.x, control.x);\n                            var ry = getReflection(point.y, control.y);\n                            path.quadraticCurveTo(\n                                rx,\n                                ry,\n                                point.x + numbers[j + 0],\n                                point.y + numbers[j + 1]\n                            );\n                            control.x = rx;\n                            control.y = ry;\n                            point.x = point.x + numbers[j + 0];\n                            point.y = point.y + numbers[j + 1];\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'a':\n                        var numbers = parseFloats(data);\n\n                        for (var j = 0, jl = numbers.length; j < jl; j += 7) {\n\n                            var start = point.clone();\n                            point.x += numbers[j + 5];\n                            point.y += numbers[j + 6];\n                            control.x = point.x;\n                            control.y = point.y;\n                            parseArcCommand(\n                                path, numbers[j], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], start, point\n                            );\n\n                            if (j === 0 && doSetFirstPoint === true) firstPoint.copy(point);\n\n                        }\n                        break;\n\n                    case 'Z':\n                    case 'z':\n                        path.currentPath.autoClose = true;\n\n                        if (path.currentPath.curves.length > 0) {\n\n                            // Reset point to beginning of Path\n                            point.copy(firstPoint);\n                            path.currentPath.currentPoint.copy(point);\n                            isFirstPoint = true;\n\n                        }\n                        break;\n\n                    default:\n                        console.warn(command);\n\n                }\n\n                // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n                doSetFirstPoint = false;\n\n            }\n\n            return path;\n\n        }\n\n\t\t/**\n\t\t * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\t\t * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n\t\t * From\n\t\t * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n\t\t * To\n\t\t * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n\t\t */\n\n        function parseArcCommand(path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end) {\n\n            x_axis_rotation = x_axis_rotation * Math.PI / 180;\n\n            // Ensure radii are positive\n            rx = Math.abs(rx);\n            ry = Math.abs(ry);\n\n            // Compute (x1′, y1′)\n            var dx2 = (start.x - end.x) / 2.0;\n            var dy2 = (start.y - end.y) / 2.0;\n            var x1p = Math.cos(x_axis_rotation) * dx2 + Math.sin(x_axis_rotation) * dy2;\n            var y1p = - Math.sin(x_axis_rotation) * dx2 + Math.cos(x_axis_rotation) * dy2;\n\n            // Compute (cx′, cy′)\n            var rxs = rx * rx;\n            var rys = ry * ry;\n            var x1ps = x1p * x1p;\n            var y1ps = y1p * y1p;\n\n            // Ensure radii are large enough\n            var cr = x1ps / rxs + y1ps / rys;\n\n            if (cr > 1) {\n\n                // scale up rx,ry equally so cr == 1\n                var s = Math.sqrt(cr);\n                rx = s * rx;\n                ry = s * ry;\n                rxs = rx * rx;\n                rys = ry * ry;\n\n            }\n\n            var dq = (rxs * y1ps + rys * x1ps);\n            var pq = (rxs * rys - dq) / dq;\n            var q = Math.sqrt(Math.max(0, pq));\n            if (large_arc_flag === sweep_flag) q = - q;\n            var cxp = q * rx * y1p / ry;\n            var cyp = - q * ry * x1p / rx;\n\n            // Step 3: Compute (cx, cy) from (cx′, cy′)\n            var cx = Math.cos(x_axis_rotation) * cxp - Math.sin(x_axis_rotation) * cyp + (start.x + end.x) / 2;\n            var cy = Math.sin(x_axis_rotation) * cxp + Math.cos(x_axis_rotation) * cyp + (start.y + end.y) / 2;\n\n            // Step 4: Compute θ1 and Δθ\n            var theta = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry);\n            var delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry, (- x1p - cxp) / rx, (- y1p - cyp) / ry) % (Math.PI * 2);\n\n            path.currentPath.absellipse(cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation);\n\n        }\n\n        function svgAngle(ux, uy, vx, vy) {\n\n            var dot = ux * vx + uy * vy;\n            var len = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n            var ang = Math.acos(Math.max(- 1, Math.min(1, dot / len))); // floating point precision, slightly over values appear\n            if ((ux * vy - uy * vx) < 0) ang = - ang;\n            return ang;\n\n        }\n\n\t\t/*\n\t\t* According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n\t\t* rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n\t\t*/\n        function parseRectNode(node) {\n\n            var x = parseFloat(node.getAttribute('x') || 0);\n            var y = parseFloat(node.getAttribute('y') || 0);\n            var rx = parseFloat(node.getAttribute('rx') || 0);\n            var ry = parseFloat(node.getAttribute('ry') || 0);\n            var w = parseFloat(node.getAttribute('width'));\n            var h = parseFloat(node.getAttribute('height'));\n\n            var path = new ShapePath();\n            path.moveTo(x + 2 * rx, y);\n            path.lineTo(x + w - 2 * rx, y);\n            if (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y, x + w, y, x + w, y + 2 * ry);\n            path.lineTo(x + w, y + h - 2 * ry);\n            if (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h);\n            path.lineTo(x + 2 * rx, y + h);\n\n            if (rx !== 0 || ry !== 0) {\n\n                path.bezierCurveTo(x, y + h, x, y + h, x, y + h - 2 * ry);\n\n            }\n\n            path.lineTo(x, y + 2 * ry);\n\n            if (rx !== 0 || ry !== 0) {\n\n                path.bezierCurveTo(x, y, x, y, x + 2 * rx, y);\n\n            }\n\n            return path;\n\n        }\n\n        function parsePolygonNode(node) {\n\n            function iterator(match, a, b) {\n\n                var x = parseFloat(a);\n                var y = parseFloat(b);\n\n                if (index === 0) {\n\n                    path.moveTo(x, y);\n\n                } else {\n\n                    path.lineTo(x, y);\n\n                }\n\n                index++;\n\n            }\n\n            var regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n            var path = new ShapePath();\n\n            var index = 0;\n\n            node.getAttribute('points').replace(regex, iterator);\n\n            path.currentPath.autoClose = true;\n\n            return path;\n\n        }\n\n        function parsePolylineNode(node) {\n\n            function iterator(match, a, b) {\n\n                var x = parseFloat(a);\n                var y = parseFloat(b);\n\n                if (index === 0) {\n\n                    path.moveTo(x, y);\n\n                } else {\n\n                    path.lineTo(x, y);\n\n                }\n\n                index++;\n\n            }\n\n            var regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n            var path = new ShapePath();\n\n            var index = 0;\n\n            node.getAttribute('points').replace(regex, iterator);\n\n            path.currentPath.autoClose = false;\n\n            return path;\n\n        }\n\n        function parseCircleNode(node) {\n\n            var x = parseFloat(node.getAttribute('cx'));\n            var y = parseFloat(node.getAttribute('cy'));\n            var r = parseFloat(node.getAttribute('r'));\n\n            var subpath = new Path();\n            subpath.absarc(x, y, r, 0, Math.PI * 2);\n\n            var path = new ShapePath();\n            path.subPaths.push(subpath);\n\n            return path;\n\n        }\n\n        function parseEllipseNode(node) {\n\n            var x = parseFloat(node.getAttribute('cx'));\n            var y = parseFloat(node.getAttribute('cy'));\n            var rx = parseFloat(node.getAttribute('rx'));\n            var ry = parseFloat(node.getAttribute('ry'));\n\n            var subpath = new Path();\n            subpath.absellipse(x, y, rx, ry, 0, Math.PI * 2);\n\n            var path = new ShapePath();\n            path.subPaths.push(subpath);\n\n            return path;\n\n        }\n\n        function parseLineNode(node) {\n\n            var x1 = parseFloat(node.getAttribute('x1'));\n            var y1 = parseFloat(node.getAttribute('y1'));\n            var x2 = parseFloat(node.getAttribute('x2'));\n            var y2 = parseFloat(node.getAttribute('y2'));\n\n            var path = new ShapePath();\n            path.moveTo(x1, y1);\n            path.lineTo(x2, y2);\n            path.currentPath.autoClose = false;\n\n            return path;\n\n        }\n\n        //\n\n        function parseStyle(node, style) {\n\n            style = Object.assign({}, style); // clone style\n\n            function addStyle(svgName, jsName, adjustFunction) {\n\n                if (adjustFunction === undefined) adjustFunction = function copy(v) {\n\n                    return v;\n\n                };\n\n                if (node.hasAttribute(svgName)) style[jsName] = adjustFunction(node.getAttribute(svgName));\n                if (node.style && node.style[svgName] !== '') style[jsName] = adjustFunction(node.style[svgName]);\n\n            }\n\n            function clamp(v) {\n\n                return Math.max(0, Math.min(1, parseFloat(v)));\n\n            }\n\n            function positive(v) {\n\n                return Math.max(0, parseFloat(v));\n\n            }\n\n            addStyle('fill', 'fill');\n            addStyle('fill-opacity', 'fillOpacity', clamp);\n            addStyle('stroke', 'stroke');\n            addStyle('stroke-opacity', 'strokeOpacity', clamp);\n            addStyle('stroke-width', 'strokeWidth', positive);\n            addStyle('stroke-linejoin', 'strokeLineJoin');\n            addStyle('stroke-linecap', 'strokeLineCap');\n            addStyle('stroke-miterlimit', 'strokeMiterLimit', positive);\n\n            return style;\n\n        }\n\n        // http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n        function getReflection(a, b) {\n\n            return a - (b - a);\n\n        }\n\n        function parseFloats(string) {\n\n            var array = string.split(/[\\s,]+|(?=\\s?[+\\-])/);\n\n            for (var i = 0; i < array.length; i++) {\n\n                var number = array[i];\n\n                // Handle values like 48.6037.7.8\n                // TODO Find a regex for this\n\n                if (number.indexOf('.') !== number.lastIndexOf('.')) {\n\n                    var split = number.split('.');\n\n                    for (var s = 2; s < split.length; s++) {\n\n                        array.splice(i + s - 1, 0, '0.' + split[s]);\n\n                    }\n\n                }\n\n                array[i] = parseFloat(number);\n\n            }\n\n            return array;\n\n\n        }\n\n        function getNodeTransform(node) {\n\n            if (!node.hasAttribute('transform')) {\n\n                return null;\n\n            }\n\n            var transform = parseNodeTransform(node);\n\n            if (transformStack.length > 0) {\n\n                transform.premultiply(transformStack[transformStack.length - 1]);\n\n            }\n\n            currentTransform.copy(transform);\n            transformStack.push(transform);\n\n            return transform;\n\n        }\n\n        function parseNodeTransform(node) {\n\n            var transform = new Matrix3();\n            var currentTransform = tempTransform0;\n            var transformsTexts = node.getAttribute('transform').split(')');\n\n            for (var tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex--) {\n\n                var transformText = transformsTexts[tIndex].trim();\n\n                if (transformText === '') continue;\n\n                var openParPos = transformText.indexOf('(');\n                var closeParPos = transformText.length;\n\n                if (openParPos > 0 && openParPos < closeParPos) {\n\n                    var transformType = transformText.substr(0, openParPos);\n\n                    var array = parseFloats(transformText.substr(openParPos + 1, closeParPos - openParPos - 1));\n\n                    currentTransform.identity();\n\n                    switch (transformType) {\n\n                        case \"translate\":\n\n                            if (array.length >= 1) {\n\n                                var tx = array[0];\n                                var ty = tx;\n\n                                if (array.length >= 2) {\n\n                                    ty = array[1];\n\n                                }\n\n                                currentTransform.translate(tx, ty);\n\n                            }\n\n                            break;\n\n                        case \"rotate\":\n\n                            if (array.length >= 1) {\n\n                                var angle = 0;\n                                var cx = 0;\n                                var cy = 0;\n\n                                // Angle\n                                angle = - array[0] * Math.PI / 180;\n\n                                if (array.length >= 3) {\n\n                                    // Center x, y\n                                    cx = array[1];\n                                    cy = array[2];\n\n                                }\n\n                                // Rotate around center (cx, cy)\n                                tempTransform1.identity().translate(- cx, - cy);\n                                tempTransform2.identity().rotate(angle);\n                                tempTransform3.multiplyMatrices(tempTransform2, tempTransform1);\n                                tempTransform1.identity().translate(cx, cy);\n                                currentTransform.multiplyMatrices(tempTransform1, tempTransform3);\n\n                            }\n\n                            break;\n\n                        case \"scale\":\n\n                            if (array.length >= 1) {\n\n                                var scaleX = array[0];\n                                var scaleY = scaleX;\n\n                                if (array.length >= 2) {\n\n                                    scaleY = array[1];\n\n                                }\n\n                                currentTransform.scale(scaleX, scaleY);\n\n                            }\n\n                            break;\n\n                        case \"skewX\":\n\n                            if (array.length === 1) {\n\n                                currentTransform.set(\n                                    1, Math.tan(array[0] * Math.PI / 180), 0,\n                                    0, 1, 0,\n                                    0, 0, 1\n                                );\n\n                            }\n\n                            break;\n\n                        case \"skewY\":\n\n                            if (array.length === 1) {\n\n                                currentTransform.set(\n                                    1, 0, 0,\n                                    Math.tan(array[0] * Math.PI / 180), 1, 0,\n                                    0, 0, 1\n                                );\n\n                            }\n\n                            break;\n\n                        case \"matrix\":\n\n                            if (array.length === 6) {\n\n                                currentTransform.set(\n                                    array[0], array[2], array[4],\n                                    array[1], array[3], array[5],\n                                    0, 0, 1\n                                );\n\n                            }\n\n                            break;\n\n                    }\n\n                }\n\n                transform.premultiply(currentTransform);\n\n            }\n\n            return transform;\n\n        }\n\n        function transformPath(path, m) {\n\n            function transfVec2(v2) {\n\n                tempV3.set(v2.x, v2.y, 1).applyMatrix3(m);\n\n                v2.set(tempV3.x, tempV3.y);\n\n            }\n\n            var isRotated = isTransformRotated(m);\n\n            var subPaths = path.subPaths;\n\n            for (var i = 0, n = subPaths.length; i < n; i++) {\n\n                var subPath = subPaths[i];\n                var curves = subPath.curves;\n\n                for (var j = 0; j < curves.length; j++) {\n\n                    var curve = curves[j];\n\n                    if (curve.isLineCurve) {\n\n                        transfVec2(curve.v1);\n                        transfVec2(curve.v2);\n\n                    } else if (curve.isCubicBezierCurve) {\n\n                        transfVec2(curve.v0);\n                        transfVec2(curve.v1);\n                        transfVec2(curve.v2);\n                        transfVec2(curve.v3);\n\n                    } else if (curve.isQuadraticBezierCurve) {\n\n                        transfVec2(curve.v0);\n                        transfVec2(curve.v1);\n                        transfVec2(curve.v2);\n\n                    } else if (curve.isEllipseCurve) {\n\n                        if (isRotated) {\n\n                            console.warn(\"SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented.\");\n\n                        }\n\n                        tempV2.set(curve.aX, curve.aY);\n                        transfVec2(tempV2);\n                        curve.aX = tempV2.x;\n                        curve.aY = tempV2.y;\n\n                        curve.xRadius *= getTransformScaleX(m);\n                        curve.yRadius *= getTransformScaleY(m);\n\n                    }\n\n                }\n\n            }\n\n        }\n\n        function isTransformRotated(m) {\n\n            return m.elements[1] !== 0 || m.elements[3] !== 0;\n\n        }\n\n        function getTransformScaleX(m) {\n\n            var te = m.elements;\n            return Math.sqrt(te[0] * te[0] + te[1] * te[1]);\n\n        }\n\n        function getTransformScaleY(m) {\n\n            var te = m.elements;\n            return Math.sqrt(te[3] * te[3] + te[4] * te[4]);\n\n        }\n\n        //\n\n        console.log('THREE.SVGLoader');\n\n        var paths = [];\n\n        var transformStack = [];\n\n        var tempTransform0 = new Matrix3();\n        var tempTransform1 = new Matrix3();\n        var tempTransform2 = new Matrix3();\n        var tempTransform3 = new Matrix3();\n        var tempV2 = new Vector2();\n        var tempV3 = new Vector3();\n\n        var currentTransform = new Matrix3();\n\n        console.time('THREE.SVGLoader: DOMParser');\n\n        var xml = new DOMParser().parseFromString(text, 'image/svg+xml'); // application/xml\n\n        console.timeEnd('THREE.SVGLoader: DOMParser');\n\n        console.time('THREE.SVGLoader: Parse');\n\n        parseNode(xml.documentElement, {\n            fill: '#000',\n            fillOpacity: 1,\n            strokeOpacity: 1,\n            strokeWidth: 1,\n            strokeLineJoin: 'miter',\n            strokeLineCap: 'butt',\n            strokeMiterLimit: 4\n        });\n\n        var data = { paths: paths, xml: xml.documentElement };\n\n        // console.log( paths );\n\n\n        console.timeEnd('THREE.SVGLoader: Parse');\n\n        return data;\n\n    }\n\n});\n\nSVGLoader.getStrokeStyle = function (width, color, lineJoin, lineCap, miterLimit) {\n\n    // Param width: Stroke width\n    // Param color: As returned by Color.getStyle()\n    // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n    // Param lineCap: One of \"round\", \"square\" or \"butt\"\n    // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n    // Returns style object\n\n    width = width !== undefined ? width : 1;\n    color = color !== undefined ? color : '#000';\n    lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n    lineCap = lineCap !== undefined ? lineCap : 'butt';\n    miterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n    return {\n        strokeColor: color,\n        strokeWidth: width,\n        strokeLineJoin: lineJoin,\n        strokeLineCap: lineCap,\n        strokeMiterLimit: miterLimit\n    };\n\n};\n\nSVGLoader.pointsToStroke = function (points, style, arcDivisions, minDistance) {\n\n    // Generates a stroke with some witdh around the given path.\n    // The path can be open or closed (last point equals to first point)\n    // Param points: Array of Vector2D (the path). Minimum 2 points.\n    // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n    // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n    // Param minDistance: Points closer to this distance will be merged. (Optional)\n    // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n\n    if (SVGLoader.pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs) === 0) {\n\n        return null;\n\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return geometry;\n\n};\n\nSVGLoader.pointsToStrokeWithBuffers = function () {\n\n    var tempV2_1 = new Vector2();\n    var tempV2_2 = new Vector2();\n    var tempV2_3 = new Vector2();\n    var tempV2_4 = new Vector2();\n    var tempV2_5 = new Vector2();\n    var tempV2_6 = new Vector2();\n    var tempV2_7 = new Vector2();\n    var lastPointL = new Vector2();\n    var lastPointR = new Vector2();\n    var point0L = new Vector2();\n    var point0R = new Vector2();\n    var currentPointL = new Vector2();\n    var currentPointR = new Vector2();\n    var nextPointL = new Vector2();\n    var nextPointR = new Vector2();\n    var innerPoint = new Vector2();\n    var outerPoint = new Vector2();\n\n    return function (points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset) {\n\n        // This function can be called to update existing arrays or buffers.\n        // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n        // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n        // Returns number of written vertices / normals / uvs pairs\n        // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n        // 'normals' and 'uvs' buffers are optional\n\n        arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n        minDistance = minDistance !== undefined ? minDistance : 0.001;\n        vertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n        // First ensure there are no duplicated points\n        points = removeDuplicatedPoints(points);\n\n        var numPoints = points.length;\n\n        if (numPoints < 2) return 0;\n\n        var isClosed = points[0].equals(points[numPoints - 1]);\n\n        var currentPoint;\n        var previousPoint = points[0];\n        var nextPoint;\n\n        var strokeWidth2 = style.strokeWidth / 2;\n\n        var deltaU = 1 / (numPoints - 1);\n        var u0 = 0;\n\n        var innerSideModified;\n        var joinIsOnLeftSide;\n        var isMiter;\n        var initialJoinIsOnLeftSide = false;\n\n        var numVertices = 0;\n        var currentCoordinate = vertexOffset * 3;\n        var currentCoordinateUV = vertexOffset * 2;\n\n        // Get initial left and right stroke points\n        getNormal(points[0], points[1], tempV2_1).multiplyScalar(strokeWidth2);\n        lastPointL.copy(points[0]).sub(tempV2_1);\n        lastPointR.copy(points[0]).add(tempV2_1);\n        point0L.copy(lastPointL);\n        point0R.copy(lastPointR);\n\n        for (var iPoint = 1; iPoint < numPoints; iPoint++) {\n\n            currentPoint = points[iPoint];\n\n            // Get next point\n            if (iPoint === numPoints - 1) {\n\n                if (isClosed) {\n\n                    // Skip duplicated initial point\n                    nextPoint = points[1];\n\n                } else nextPoint = undefined;\n\n            } else {\n\n                nextPoint = points[iPoint + 1];\n\n            }\n\n            // Normal of previous segment in tempV2_1\n            var normal1 = tempV2_1;\n            getNormal(previousPoint, currentPoint, normal1);\n\n            tempV2_3.copy(normal1).multiplyScalar(strokeWidth2);\n            currentPointL.copy(currentPoint).sub(tempV2_3);\n            currentPointR.copy(currentPoint).add(tempV2_3);\n\n            var u1 = u0 + deltaU;\n\n            innerSideModified = false;\n\n            if (nextPoint !== undefined) {\n\n                // Normal of next segment in tempV2_2\n                getNormal(currentPoint, nextPoint, tempV2_2);\n\n                tempV2_3.copy(tempV2_2).multiplyScalar(strokeWidth2);\n                nextPointL.copy(currentPoint).sub(tempV2_3);\n                nextPointR.copy(currentPoint).add(tempV2_3);\n\n                joinIsOnLeftSide = true;\n                tempV2_3.subVectors(nextPoint, previousPoint);\n                if (normal1.dot(tempV2_3) < 0) {\n\n                    joinIsOnLeftSide = false;\n\n                }\n                if (iPoint === 1) initialJoinIsOnLeftSide = joinIsOnLeftSide;\n\n                tempV2_3.subVectors(nextPoint, currentPoint);\n                tempV2_3.normalize();\n                var dot = Math.abs(normal1.dot(tempV2_3));\n\n                // If path is straight, don't create join\n                if (dot !== 0) {\n\n                    // Compute inner and outer segment intersections\n                    var miterSide = strokeWidth2 / dot;\n                    tempV2_3.multiplyScalar(- miterSide);\n                    tempV2_4.subVectors(currentPoint, previousPoint);\n                    tempV2_5.copy(tempV2_4).setLength(miterSide).add(tempV2_3);\n                    innerPoint.copy(tempV2_5).negate();\n                    var miterLength2 = tempV2_5.length();\n                    var segmentLengthPrev = tempV2_4.length();\n                    tempV2_4.divideScalar(segmentLengthPrev);\n                    tempV2_6.subVectors(nextPoint, currentPoint);\n                    var segmentLengthNext = tempV2_6.length();\n                    tempV2_6.divideScalar(segmentLengthNext);\n                    // Check that previous and next segments doesn't overlap with the innerPoint of intersection\n                    if (tempV2_4.dot(innerPoint) < segmentLengthPrev && tempV2_6.dot(innerPoint) < segmentLengthNext) {\n\n                        innerSideModified = true;\n\n                    }\n                    outerPoint.copy(tempV2_5).add(currentPoint);\n                    innerPoint.add(currentPoint);\n\n                    isMiter = false;\n\n                    if (innerSideModified) {\n\n                        if (joinIsOnLeftSide) {\n\n                            nextPointR.copy(innerPoint);\n                            currentPointR.copy(innerPoint);\n\n                        } else {\n\n                            nextPointL.copy(innerPoint);\n                            currentPointL.copy(innerPoint);\n\n                        }\n\n                    } else {\n\n                        // The segment triangles are generated here if there was overlapping\n\n                        makeSegmentTriangles();\n\n                    }\n\n                    switch (style.strokeLineJoin) {\n\n                        case 'bevel':\n\n                            makeSegmentWithBevelJoin(joinIsOnLeftSide, innerSideModified, u1);\n\n                            break;\n\n                        case 'round':\n\n                            // Segment triangles\n\n                            createSegmentTrianglesWithMiddleSection(joinIsOnLeftSide, innerSideModified);\n\n                            // Join triangles\n\n                            if (joinIsOnLeftSide) {\n\n                                makeCircularSector(currentPoint, currentPointL, nextPointL, u1, 0);\n\n                            } else {\n\n                                makeCircularSector(currentPoint, nextPointR, currentPointR, u1, 1);\n\n                            }\n\n                            break;\n\n                        case 'miter':\n                        case 'miter-clip':\n                        default:\n\n                            var miterFraction = (strokeWidth2 * style.strokeMiterLimit) / miterLength2;\n\n                            if (miterFraction < 1) {\n\n                                // The join miter length exceeds the miter limit\n\n                                if (style.strokeLineJoin !== 'miter-clip') {\n\n                                    makeSegmentWithBevelJoin(joinIsOnLeftSide, innerSideModified, u1);\n                                    break;\n\n                                } else {\n\n                                    // Segment triangles\n\n                                    createSegmentTrianglesWithMiddleSection(joinIsOnLeftSide, innerSideModified);\n\n                                    // Miter-clip join triangles\n\n                                    if (joinIsOnLeftSide) {\n\n                                        tempV2_6.subVectors(outerPoint, currentPointL).multiplyScalar(miterFraction).add(currentPointL);\n                                        tempV2_7.subVectors(outerPoint, nextPointL).multiplyScalar(miterFraction).add(nextPointL);\n\n                                        addVertex(currentPointL, u1, 0);\n                                        addVertex(tempV2_6, u1, 0);\n                                        addVertex(currentPoint, u1, 0.5);\n\n                                        addVertex(currentPoint, u1, 0.5);\n                                        addVertex(tempV2_6, u1, 0);\n                                        addVertex(tempV2_7, u1, 0);\n\n                                        addVertex(currentPoint, u1, 0.5);\n                                        addVertex(tempV2_7, u1, 0);\n                                        addVertex(nextPointL, u1, 0);\n\n                                    } else {\n\n                                        tempV2_6.subVectors(outerPoint, currentPointR).multiplyScalar(miterFraction).add(currentPointR);\n                                        tempV2_7.subVectors(outerPoint, nextPointR).multiplyScalar(miterFraction).add(nextPointR);\n\n                                        addVertex(currentPointR, u1, 1);\n                                        addVertex(tempV2_6, u1, 1);\n                                        addVertex(currentPoint, u1, 0.5);\n\n                                        addVertex(currentPoint, u1, 0.5);\n                                        addVertex(tempV2_6, u1, 1);\n                                        addVertex(tempV2_7, u1, 1);\n\n                                        addVertex(currentPoint, u1, 0.5);\n                                        addVertex(tempV2_7, u1, 1);\n                                        addVertex(nextPointR, u1, 1);\n\n                                    }\n\n                                }\n\n                            } else {\n\n                                // Miter join segment triangles\n\n                                if (innerSideModified) {\n\n                                    // Optimized segment + join triangles\n\n                                    if (joinIsOnLeftSide) {\n\n                                        addVertex(lastPointR, u0, 1);\n                                        addVertex(lastPointL, u0, 0);\n                                        addVertex(outerPoint, u1, 0);\n\n                                        addVertex(lastPointR, u0, 1);\n                                        addVertex(outerPoint, u1, 0);\n                                        addVertex(innerPoint, u1, 1);\n\n                                    } else {\n\n                                        addVertex(lastPointR, u0, 1);\n                                        addVertex(lastPointL, u0, 0);\n                                        addVertex(outerPoint, u1, 1);\n\n                                        addVertex(lastPointL, u0, 0);\n                                        addVertex(innerPoint, u1, 0);\n                                        addVertex(outerPoint, u1, 1);\n\n                                    }\n\n\n                                    if (joinIsOnLeftSide) {\n\n                                        nextPointL.copy(outerPoint);\n\n                                    } else {\n\n                                        nextPointR.copy(outerPoint);\n\n                                    }\n\n\n                                } else {\n\n                                    // Add extra miter join triangles\n\n                                    if (joinIsOnLeftSide) {\n\n                                        addVertex(currentPointL, u1, 0);\n                                        addVertex(outerPoint, u1, 0);\n                                        addVertex(currentPoint, u1, 0.5);\n\n                                        addVertex(currentPoint, u1, 0.5);\n                                        addVertex(outerPoint, u1, 0);\n                                        addVertex(nextPointL, u1, 0);\n\n                                    } else {\n\n                                        addVertex(currentPointR, u1, 1);\n                                        addVertex(outerPoint, u1, 1);\n                                        addVertex(currentPoint, u1, 0.5);\n\n                                        addVertex(currentPoint, u1, 0.5);\n                                        addVertex(outerPoint, u1, 1);\n                                        addVertex(nextPointR, u1, 1);\n\n                                    }\n\n                                }\n\n                                isMiter = true;\n\n                            }\n\n                            break;\n\n                    }\n\n                } else {\n\n                    // The segment triangles are generated here when two consecutive points are collinear\n\n                    makeSegmentTriangles();\n\n                }\n\n            } else {\n\n                // The segment triangles are generated here if it is the ending segment\n\n                makeSegmentTriangles();\n\n            }\n\n            if (!isClosed && iPoint === numPoints - 1) {\n\n                // Start line endcap\n                addCapGeometry(points[0], point0L, point0R, joinIsOnLeftSide, true, u0);\n\n            }\n\n            // Increment loop variables\n\n            u0 = u1;\n\n            previousPoint = currentPoint;\n\n            lastPointL.copy(nextPointL);\n            lastPointR.copy(nextPointR);\n\n        }\n\n        if (!isClosed) {\n\n            // Ending line endcap\n            addCapGeometry(currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1);\n\n        } else if (innerSideModified && vertices) {\n\n            // Modify path first segment vertices to adjust to the segments inner and outer intersections\n\n            var lastOuter = outerPoint;\n            var lastInner = innerPoint;\n\n            if (initialJoinIsOnLeftSide !== joinIsOnLeftSide) {\n\n                lastOuter = innerPoint;\n                lastInner = outerPoint;\n\n            }\n\n            if (joinIsOnLeftSide) {\n\n                if (isMiter || initialJoinIsOnLeftSide) {\n\n                    lastInner.toArray(vertices, 0 * 3);\n                    lastInner.toArray(vertices, 3 * 3);\n\n                    if (isMiter) {\n\n                        lastOuter.toArray(vertices, 1 * 3);\n\n                    }\n\n                }\n\n            } else {\n\n                if (isMiter || !initialJoinIsOnLeftSide) {\n\n                    lastInner.toArray(vertices, 1 * 3);\n                    lastInner.toArray(vertices, 3 * 3);\n\n                    if (isMiter) {\n\n                        lastOuter.toArray(vertices, 0 * 3);\n\n                    }\n\n                }\n\n            }\n\n        }\n\n        return numVertices;\n\n        // -- End of algorithm\n\n        // -- Functions\n\n        function getNormal(p1, p2, result) {\n\n            result.subVectors(p2, p1);\n            return result.set(- result.y, result.x).normalize();\n\n        }\n\n        function addVertex(position, u, v) {\n\n            if (vertices) {\n\n                vertices[currentCoordinate] = position.x;\n                vertices[currentCoordinate + 1] = position.y;\n                vertices[currentCoordinate + 2] = 0;\n\n                if (normals) {\n\n                    normals[currentCoordinate] = 0;\n                    normals[currentCoordinate + 1] = 0;\n                    normals[currentCoordinate + 2] = 1;\n\n                }\n\n                currentCoordinate += 3;\n\n                if (uvs) {\n\n                    uvs[currentCoordinateUV] = u;\n                    uvs[currentCoordinateUV + 1] = v;\n\n                    currentCoordinateUV += 2;\n\n                }\n\n            }\n\n            numVertices += 3;\n\n        }\n\n        function makeCircularSector(center, p1, p2, u, v) {\n\n            // param p1, p2: Points in the circle arc.\n            // p1 and p2 are in clockwise direction.\n\n            tempV2_1.copy(p1).sub(center).normalize();\n            tempV2_2.copy(p2).sub(center).normalize();\n\n            var angle = Math.PI;\n            var dot = tempV2_1.dot(tempV2_2);\n            if (Math.abs(dot) < 1) angle = Math.abs(Math.acos(dot));\n\n            angle /= arcDivisions;\n\n            tempV2_3.copy(p1);\n\n            for (var i = 0, il = arcDivisions - 1; i < il; i++) {\n\n                tempV2_4.copy(tempV2_3).rotateAround(center, angle);\n\n                addVertex(tempV2_3, u, v);\n                addVertex(tempV2_4, u, v);\n                addVertex(center, u, 0.5);\n\n                tempV2_3.copy(tempV2_4);\n\n            }\n\n            addVertex(tempV2_4, u, v);\n            addVertex(p2, u, v);\n            addVertex(center, u, 0.5);\n\n        }\n\n        function makeSegmentTriangles() {\n\n            addVertex(lastPointR, u0, 1);\n            addVertex(lastPointL, u0, 0);\n            addVertex(currentPointL, u1, 0);\n\n            addVertex(lastPointR, u0, 1);\n            addVertex(currentPointL, u1, 1);\n            addVertex(currentPointR, u1, 0);\n\n        }\n\n        function makeSegmentWithBevelJoin(joinIsOnLeftSide, innerSideModified, u) {\n\n            if (innerSideModified) {\n\n                // Optimized segment + bevel triangles\n\n                if (joinIsOnLeftSide) {\n\n                    // Path segments triangles\n\n                    addVertex(lastPointR, u0, 1);\n                    addVertex(lastPointL, u0, 0);\n                    addVertex(currentPointL, u1, 0);\n\n                    addVertex(lastPointR, u0, 1);\n                    addVertex(currentPointL, u1, 0);\n                    addVertex(innerPoint, u1, 1);\n\n                    // Bevel join triangle\n\n                    addVertex(currentPointL, u, 0);\n                    addVertex(nextPointL, u, 0);\n                    addVertex(innerPoint, u, 0.5);\n\n                } else {\n\n                    // Path segments triangles\n\n                    addVertex(lastPointR, u0, 1);\n                    addVertex(lastPointL, u0, 0);\n                    addVertex(currentPointR, u1, 1);\n\n                    addVertex(lastPointL, u0, 0);\n                    addVertex(innerPoint, u1, 0);\n                    addVertex(currentPointR, u1, 1);\n\n                    // Bevel join triangle\n\n                    addVertex(currentPointR, u, 1);\n                    addVertex(nextPointR, u, 0);\n                    addVertex(innerPoint, u, 0.5);\n\n                }\n\n            } else {\n\n                // Bevel join triangle. The segment triangles are done in the main loop\n\n                if (joinIsOnLeftSide) {\n\n                    addVertex(currentPointL, u, 0);\n                    addVertex(nextPointL, u, 0);\n                    addVertex(currentPoint, u, 0.5);\n\n                } else {\n\n                    addVertex(currentPointR, u, 1);\n                    addVertex(nextPointR, u, 0);\n                    addVertex(currentPoint, u, 0.5);\n\n                }\n\n            }\n\n        }\n\n        function createSegmentTrianglesWithMiddleSection(joinIsOnLeftSide, innerSideModified) {\n\n            if (innerSideModified) {\n\n                if (joinIsOnLeftSide) {\n\n                    addVertex(lastPointR, u0, 1);\n                    addVertex(lastPointL, u0, 0);\n                    addVertex(currentPointL, u1, 0);\n\n                    addVertex(lastPointR, u0, 1);\n                    addVertex(currentPointL, u1, 0);\n                    addVertex(innerPoint, u1, 1);\n\n                    addVertex(currentPointL, u0, 0);\n                    addVertex(currentPoint, u1, 0.5);\n                    addVertex(innerPoint, u1, 1);\n\n                    addVertex(currentPoint, u1, 0.5);\n                    addVertex(nextPointL, u0, 0);\n                    addVertex(innerPoint, u1, 1);\n\n                } else {\n\n                    addVertex(lastPointR, u0, 1);\n                    addVertex(lastPointL, u0, 0);\n                    addVertex(currentPointR, u1, 1);\n\n                    addVertex(lastPointL, u0, 0);\n                    addVertex(innerPoint, u1, 0);\n                    addVertex(currentPointR, u1, 1);\n\n                    addVertex(currentPointR, u0, 1);\n                    addVertex(innerPoint, u1, 0);\n                    addVertex(currentPoint, u1, 0.5);\n\n                    addVertex(currentPoint, u1, 0.5);\n                    addVertex(innerPoint, u1, 0);\n                    addVertex(nextPointR, u0, 1);\n\n                }\n\n            }\n\n        }\n\n        function addCapGeometry(center, p1, p2, joinIsOnLeftSide, start, u) {\n\n            // param center: End point of the path\n            // param p1, p2: Left and right cap points\n\n            switch (style.strokeLineCap) {\n\n                case 'round':\n\n                    if (start) {\n\n                        makeCircularSector(center, p2, p1, u, 0.5);\n\n                    } else {\n\n                        makeCircularSector(center, p1, p2, u, 0.5);\n\n                    }\n\n                    break;\n\n                case 'square':\n\n                    if (start) {\n\n                        tempV2_1.subVectors(p1, center);\n                        tempV2_2.set(tempV2_1.y, - tempV2_1.x);\n\n                        tempV2_3.addVectors(tempV2_1, tempV2_2).add(center);\n                        tempV2_4.subVectors(tempV2_2, tempV2_1).add(center);\n\n                        // Modify already existing vertices\n                        if (joinIsOnLeftSide) {\n\n                            tempV2_3.toArray(vertices, 1 * 3);\n                            tempV2_4.toArray(vertices, 0 * 3);\n                            tempV2_4.toArray(vertices, 3 * 3);\n\n                        } else {\n\n                            tempV2_3.toArray(vertices, 1 * 3);\n                            tempV2_3.toArray(vertices, 3 * 3);\n                            tempV2_4.toArray(vertices, 0 * 3);\n\n                        }\n\n                    } else {\n\n                        tempV2_1.subVectors(p2, center);\n                        tempV2_2.set(tempV2_1.y, - tempV2_1.x);\n\n                        tempV2_3.addVectors(tempV2_1, tempV2_2).add(center);\n                        tempV2_4.subVectors(tempV2_2, tempV2_1).add(center);\n\n                        var vl = vertices.length;\n\n                        // Modify already existing vertices\n                        if (joinIsOnLeftSide) {\n\n                            tempV2_3.toArray(vertices, vl - 1 * 3);\n                            tempV2_4.toArray(vertices, vl - 2 * 3);\n                            tempV2_4.toArray(vertices, vl - 4 * 3);\n\n                        } else {\n\n                            tempV2_3.toArray(vertices, vl - 2 * 3);\n                            tempV2_4.toArray(vertices, vl - 1 * 3);\n                            tempV2_4.toArray(vertices, vl - 4 * 3);\n\n                        }\n\n                    }\n\n                    break;\n\n                case 'butt':\n                default:\n\n                    // Nothing to do here\n                    break;\n\n            }\n\n        }\n\n        function removeDuplicatedPoints(points) {\n\n            // Creates a new array if necessary with duplicated points removed.\n            // This does not remove duplicated initial and ending points of a closed path.\n\n            var dupPoints = false;\n            for (var i = 1, n = points.length - 1; i < n; i++) {\n\n                if (points[i].distanceTo(points[i + 1]) < minDistance) {\n\n                    dupPoints = true;\n                    break;\n\n                }\n\n            }\n\n            if (!dupPoints) return points;\n\n            var newPoints = [];\n            newPoints.push(points[0]);\n\n            for (var i = 1, n = points.length - 1; i < n; i++) {\n\n                if (points[i].distanceTo(points[i + 1]) >= minDistance) {\n\n                    newPoints.push(points[i]);\n\n                }\n\n            }\n\n            newPoints.push(points[points.length - 1]);\n\n            return newPoints;\n\n        }\n\n    };\n\n}();\n\nexport { SVGLoader };\n"]}]}