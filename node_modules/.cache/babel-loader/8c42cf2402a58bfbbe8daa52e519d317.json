{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\GLTFLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\GLTFLoader.js","mtime":1581174888775},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/GLTFLoader.js"],"names":["AnimationClip","Bone","Box3","BufferAttribute","BufferGeometry","ClampToEdgeWrapping","Color","DirectionalLight","DoubleSide","FileLoader","FrontSide","Group","InterleavedBuffer","InterleavedBufferAttribute","Interpolant","InterpolateDiscrete","InterpolateLinear","Line","LineBasicMaterial","LineLoop","LineSegments","LinearFilter","LinearMipmapLinearFilter","LinearMipmapNearestFilter","Loader","LoaderUtils","Material","MathUtils","Matrix4","Mesh","MeshBasicMaterial","MeshStandardMaterial","MirroredRepeatWrapping","NearestFilter","NearestMipmapLinearFilter","NearestMipmapNearestFilter","NumberKeyframeTrack","Object3D","OrthographicCamera","PerspectiveCamera","PointLight","Points","PointsMaterial","PropertyBinding","QuaternionKeyframeTrack","RGBAFormat","RGBFormat","RepeatWrapping","Scene","ShaderLib","ShaderMaterial","Skeleton","SkinnedMesh","Sphere","SpotLight","TangentSpaceNormalMap","TextureLoader","TriangleFanDrawMode","TriangleStripDrawMode","UniformsUtils","Vector2","Vector3","VectorKeyframeTrack","VertexColors","sRGBEncoding","GLTFLoader","manager","call","dracoLoader","ddsLoader","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","resourcePath","path","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","undefined","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","parser","GLTFParser","GLTFRegistry","objects","get","key","add","object","remove","removeAll","name","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","scale","repeat","texCoord","needsUpdate","specularGlossinessParams","pbrSpecularGlossiness","shader","uniforms","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","value","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","params","material","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","isColor","refreshUniforms","renderer","scene","camera","diffuse","copy","multiplyScalar","uvScaleMap","isWebGLRenderTarget","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","WEBGL_WRAPPINGS","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","resolveURL","test","createDefaultMaterial","cache","depthTest","side","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","dracoExtension","geometryKey","indices","createAttributesKey","mode","attributesKey","keys","sort","options","primitiveCache","textureLoader","setCrossOrigin","fileLoader","markDefs","getDependencies","dependencies","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibSlice","floor","ibCacheKey","count","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setX","setY","setZ","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","setAttribute","onBeforeRender","y","materialIndex","materials","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","computeBounds","box","accessor","min","max","vector","abs","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","addPrimitiveAttributes","assignAttributeAccessor","gltfAttributeName","setIndex","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","getX","newGeometry","loadGeometries","primitives","createDracoPrimitive","cached","promise","geometryPromise","meshIndex","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","children","o","light","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","child","sceneIndex","sceneDef","nodeIds"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAQA,SACCA,aADD,EAECC,IAFD,EAGCC,IAHD,EAICC,eAJD,EAKCC,cALD,EAMCC,mBAND,EAOCC,KAPD,EAQCC,gBARD,EASCC,UATD,EAUCC,UAVD,EAWCC,SAXD,EAYCC,KAZD,EAaCC,iBAbD,EAcCC,0BAdD,EAeCC,WAfD,EAgBCC,mBAhBD,EAiBCC,iBAjBD,EAkBCC,IAlBD,EAmBCC,iBAnBD,EAoBCC,QApBD,EAqBCC,YArBD,EAsBCC,YAtBD,EAuBCC,wBAvBD,EAwBCC,yBAxBD,EAyBCC,MAzBD,EA0BCC,WA1BD,EA2BCC,QA3BD,EA4BCC,SA5BD,EA6BCC,OA7BD,EA8BCC,IA9BD,EA+BCC,iBA/BD,EAgCCC,oBAhCD,EAiCCC,sBAjCD,EAkCCC,aAlCD,EAmCCC,yBAnCD,EAoCCC,0BApCD,EAqCCC,mBArCD,EAsCCC,QAtCD,EAuCCC,kBAvCD,EAwCCC,iBAxCD,EAyCCC,UAzCD,EA0CCC,MA1CD,EA2CCC,cA3CD,EA4CCC,eA5CD,EA6CCC,uBA7CD,EA8CCC,UA9CD,EA+CCC,SA/CD,EAgDCC,cAhDD,EAiDCC,KAjDD,EAkDCC,SAlDD,EAmDCC,cAnDD,EAoDCC,QApDD,EAqDCC,WArDD,EAsDCC,MAtDD,EAuDCC,SAvDD,EAwDCC,qBAxDD,EAyDCC,aAzDD,EA0DCC,mBA1DD,EA2DCC,qBA3DD,EA4DCC,aA5DD,EA6DCC,OA7DD,EA8DCC,OA9DD,EA+DCC,mBA/DD,EAgECC,YAhED,EAiECC,YAjED,QAkEO,0BAlEP;;AAoEA,IAAIC,UAAU,GAAK,YAAY;AAE9B,WAASA,UAAT,CAAqBC,OAArB,EAA+B;AAE9B1C,IAAAA,MAAM,CAAC2C,IAAP,CAAa,IAAb,EAAmBD,OAAnB;AAEA,SAAKE,WAAL,GAAmB,IAAnB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AAEA;;AAEDJ,EAAAA,UAAU,CAACK,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAejD,MAAM,CAAC8C,SAAtB,CAAf,EAAkD;AAExEI,IAAAA,WAAW,EAAET,UAF2D;AAIxEU,IAAAA,IAAI,EAAE,cAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,UAAIC,KAAK,GAAG,IAAZ;AAEA,UAAIC,YAAJ;;AAEA,UAAK,KAAKA,YAAL,KAAsB,EAA3B,EAAgC;AAE/BA,QAAAA,YAAY,GAAG,KAAKA,YAApB;AAEA,OAJD,MAIO,IAAK,KAAKC,IAAL,KAAc,EAAnB,EAAwB;AAE9BD,QAAAA,YAAY,GAAG,KAAKC,IAApB;AAEA,OAJM,MAIA;AAEND,QAAAA,YAAY,GAAGxD,WAAW,CAAC0D,cAAZ,CAA4BP,GAA5B,CAAf;AAEA,OAlBkD,CAoBnD;AACA;AACA;;;AACAI,MAAAA,KAAK,CAACd,OAAN,CAAckB,SAAd,CAAyBR,GAAzB;;AAEA,UAAIS,QAAQ,GAAG,SAAXA,QAAW,CAAWC,CAAX,EAAe;AAE7B,YAAKP,OAAL,EAAe;AAEdA,UAAAA,OAAO,CAAEO,CAAF,CAAP;AAEA,SAJD,MAIO;AAENC,UAAAA,OAAO,CAACC,KAAR,CAAeF,CAAf;AAEA;;AAEDN,QAAAA,KAAK,CAACd,OAAN,CAAcuB,SAAd,CAAyBb,GAAzB;AACAI,QAAAA,KAAK,CAACd,OAAN,CAAcwB,OAAd,CAAuBd,GAAvB;AAEA,OAfD;;AAiBA,UAAIe,MAAM,GAAG,IAAIlF,UAAJ,CAAgBuE,KAAK,CAACd,OAAtB,CAAb;AAEAyB,MAAAA,MAAM,CAACC,OAAP,CAAgB,KAAKV,IAArB;AACAS,MAAAA,MAAM,CAACE,eAAP,CAAwB,aAAxB;;AAEA,UAAKb,KAAK,CAACc,WAAN,KAAsB,iBAA3B,EAA+C;AAE9CH,QAAAA,MAAM,CAACI,kBAAP,CAA2B,IAA3B;AAEA;;AAEDJ,MAAAA,MAAM,CAAChB,IAAP,CAAaC,GAAb,EAAkB,UAAWoB,IAAX,EAAkB;AAEnC,YAAI;AAEHhB,UAAAA,KAAK,CAACiB,KAAN,CAAaD,IAAb,EAAmBf,YAAnB,EAAiC,UAAWiB,IAAX,EAAkB;AAElDrB,YAAAA,MAAM,CAAEqB,IAAF,CAAN;AAEAlB,YAAAA,KAAK,CAACd,OAAN,CAAcwB,OAAd,CAAuBd,GAAvB;AAEA,WAND,EAMGS,QANH;AAQA,SAVD,CAUE,OAAQC,CAAR,EAAY;AAEbD,UAAAA,QAAQ,CAAEC,CAAF,CAAR;AAEA;AAED,OAlBD,EAkBGR,UAlBH,EAkBeO,QAlBf;AAoBA,KA7EuE;AA+ExEc,IAAAA,cAAc,EAAE,wBAAW/B,WAAX,EAAyB;AAExC,WAAKA,WAAL,GAAmBA,WAAnB;AACA,aAAO,IAAP;AAEA,KApFuE;AAsFxEgC,IAAAA,YAAY,EAAE,sBAAW/B,SAAX,EAAuB;AAEpC,WAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAO,IAAP;AAEA,KA3FuE;AA6FxE4B,IAAAA,KAAK,EAAE,eAAWD,IAAX,EAAiBd,IAAjB,EAAuBL,MAAvB,EAA+BE,OAA/B,EAAyC;AAE/C,UAAIsB,OAAJ;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAK,OAAON,IAAP,KAAgB,QAArB,EAAgC;AAE/BK,QAAAA,OAAO,GAAGL,IAAV;AAEA,OAJD,MAIO;AAEN,YAAIO,KAAK,GAAG9E,WAAW,CAAC+E,UAAZ,CAAwB,IAAIC,UAAJ,CAAgBT,IAAhB,EAAsB,CAAtB,EAAyB,CAAzB,CAAxB,CAAZ;;AAEA,YAAKO,KAAK,KAAKG,6BAAf,EAA+C;AAE9C,cAAI;AAEHJ,YAAAA,UAAU,CAAEK,UAAU,CAACC,eAAb,CAAV,GAA2C,IAAIC,mBAAJ,CAAyBb,IAAzB,CAA3C;AAEA,WAJD,CAIE,OAAQR,KAAR,EAAgB;AAEjB,gBAAKT,OAAL,EAAeA,OAAO,CAAES,KAAF,CAAP;AACf;AAEA;;AAEDa,UAAAA,OAAO,GAAGC,UAAU,CAAEK,UAAU,CAACC,eAAb,CAAV,CAAyCP,OAAnD;AAEA,SAfD,MAeO;AAENA,UAAAA,OAAO,GAAG5E,WAAW,CAAC+E,UAAZ,CAAwB,IAAIC,UAAJ,CAAgBT,IAAhB,CAAxB,CAAV;AAEA;AAED;;AAED,UAAIc,IAAI,GAAGC,IAAI,CAACd,KAAL,CAAYI,OAAZ,CAAX;;AAEA,UAAKS,IAAI,CAACE,KAAL,KAAeC,SAAf,IAA4BH,IAAI,CAACE,KAAL,CAAWE,OAAX,CAAoB,CAApB,IAA0B,CAA3D,EAA+D;AAE9D,YAAKnC,OAAL,EAAeA,OAAO,CAAE,IAAIoC,KAAJ,CAAW,yEAAX,CAAF,CAAP;AACf;AAEA;;AAED,UAAKL,IAAI,CAACM,cAAV,EAA2B;AAE1B,aAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGP,IAAI,CAACM,cAAL,CAAoBE,MAAzC,EAAiD,EAAGD,CAApD,EAAwD;AAEvD,cAAIE,aAAa,GAAGT,IAAI,CAACM,cAAL,CAAqBC,CAArB,CAApB;AACA,cAAIG,kBAAkB,GAAGV,IAAI,CAACU,kBAAL,IAA2B,EAApD;;AAEA,kBAASD,aAAT;AAEC,iBAAKZ,UAAU,CAACc,mBAAhB;AACCnB,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIG,mBAAJ,CAAyBZ,IAAzB,CAA9B;AACA;;AAED,iBAAKH,UAAU,CAACgB,mBAAhB;AACCrB,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIK,2BAAJ,EAA9B;AACA;;AAED,iBAAKjB,UAAU,CAACkB,qCAAhB;AACCvB,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIO,2CAAJ,EAA9B;AACA;;AAED,iBAAKnB,UAAU,CAACoB,0BAAhB;AACCzB,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIS,iCAAJ,CAAuClB,IAAvC,EAA6C,KAAK1C,WAAlD,CAA9B;AACA;;AAED,iBAAKuC,UAAU,CAACsB,gBAAhB;AACC3B,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIW,uBAAJ,CAA6B,KAAK7D,SAAlC,CAA9B;AACA;;AAED,iBAAKsC,UAAU,CAACwB,qBAAhB;AACC7B,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIa,6BAAJ,EAA9B;AACA;;AAED,iBAAKzB,UAAU,CAAC0B,qBAAhB;AACC/B,cAAAA,UAAU,CAAEiB,aAAF,CAAV,GAA8B,IAAIe,6BAAJ,EAA9B;AACA;;AAED;AAEC,kBAAKd,kBAAkB,CAACe,OAAnB,CAA4BhB,aAA5B,KAA+C,CAApD,EAAwD;AAEvDhC,gBAAAA,OAAO,CAACiD,IAAR,CAAc,0CAA0CjB,aAA1C,GAA0D,IAAxE;AAEA;;AApCH;AAwCA;AAED;;AAED,UAAIkB,MAAM,GAAG,IAAIC,UAAJ,CAAgB5B,IAAhB,EAAsBR,UAAtB,EAAkC;AAE9CpB,QAAAA,IAAI,EAAEA,IAAI,IAAI,KAAKD,YAAb,IAA6B,EAFW;AAG9Ca,QAAAA,WAAW,EAAE,KAAKA,WAH4B;AAI9C5B,QAAAA,OAAO,EAAE,KAAKA;AAJgC,OAAlC,CAAb;AAQAuE,MAAAA,MAAM,CAACxC,KAAP,CAAcpB,MAAd,EAAsBE,OAAtB;AAEA;AAvMuE,GAAlD,CAAvB;AA2MA;;AAEA,WAAS4D,YAAT,GAAwB;AAEvB,QAAIC,OAAO,GAAG,EAAd;AAEA,WAAO;AAENC,MAAAA,GAAG,EAAE,aAAWC,GAAX,EAAiB;AAErB,eAAOF,OAAO,CAAEE,GAAF,CAAd;AAEA,OANK;AAQNC,MAAAA,GAAG,EAAE,aAAWD,GAAX,EAAgBE,MAAhB,EAAyB;AAE7BJ,QAAAA,OAAO,CAAEE,GAAF,CAAP,GAAiBE,MAAjB;AAEA,OAZK;AAcNC,MAAAA,MAAM,EAAE,gBAAWH,GAAX,EAAiB;AAExB,eAAOF,OAAO,CAAEE,GAAF,CAAd;AAEA,OAlBK;AAoBNI,MAAAA,SAAS,EAAE,qBAAY;AAEtBN,QAAAA,OAAO,GAAG,EAAV;AAEA;AAxBK,KAAP;AA4BA;AAED;;AACA;;AACA;;;AAEA,MAAIjC,UAAU,GAAG;AAChBC,IAAAA,eAAe,EAAE,iBADD;AAEhBmB,IAAAA,0BAA0B,EAAE,4BAFZ;AAGhBN,IAAAA,mBAAmB,EAAE,qBAHL;AAIhBI,IAAAA,qCAAqC,EAAE,qCAJvB;AAKhBF,IAAAA,mBAAmB,EAAE,qBALL;AAMhBQ,IAAAA,qBAAqB,EAAE,uBANP;AAOhBE,IAAAA,qBAAqB,EAAE,uBAPP;AAQhBJ,IAAAA,gBAAgB,EAAE;AARF,GAAjB;AAWA;;;;;;;AAMA,WAASC,uBAAT,CAAkC7D,SAAlC,EAA8C;AAE7C,QAAK,CAAEA,SAAP,EAAmB;AAElB,YAAM,IAAI8C,KAAJ,CAAW,+EAAX,CAAN;AAEA;;AAED,SAAKgC,IAAL,GAAYxC,UAAU,CAACsB,gBAAvB;AACA,SAAK5D,SAAL,GAAiBA,SAAjB;AAEA;AAED;;;;;;;AAKA,WAASqD,mBAAT,CAA8BZ,IAA9B,EAAqC;AAEpC,SAAKqC,IAAL,GAAYxC,UAAU,CAACc,mBAAvB;AAEA,QAAI2B,SAAS,GAAKtC,IAAI,CAACR,UAAL,IAAmBQ,IAAI,CAACR,UAAL,CAAiBK,UAAU,CAACc,mBAA5B,CAArB,IAA4E,EAA5F;AACA,SAAK4B,SAAL,GAAiBD,SAAS,CAACE,MAAV,IAAoB,EAArC;AAEA;;AAED5B,EAAAA,mBAAmB,CAACpD,SAApB,CAA8BiF,SAA9B,GAA0C,UAAWC,UAAX,EAAwB;AAEjE,QAAIC,QAAQ,GAAG,KAAKJ,SAAL,CAAgBG,UAAhB,CAAf;AACA,QAAIE,SAAJ;AAEA,QAAIC,KAAK,GAAG,IAAIrJ,KAAJ,CAAW,QAAX,CAAZ;AACA,QAAKmJ,QAAQ,CAACE,KAAT,KAAmB1C,SAAxB,EAAoC0C,KAAK,CAACC,SAAN,CAAiBH,QAAQ,CAACE,KAA1B;AAEpC,QAAIE,KAAK,GAAGJ,QAAQ,CAACI,KAAT,KAAmB5C,SAAnB,GAA+BwC,QAAQ,CAACI,KAAxC,GAAgD,CAA5D;;AAEA,YAASJ,QAAQ,CAACK,IAAlB;AAEC,WAAK,aAAL;AACCJ,QAAAA,SAAS,GAAG,IAAInJ,gBAAJ,CAAsBoJ,KAAtB,CAAZ;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAAE,CAAvC;AACAP,QAAAA,SAAS,CAACX,GAAV,CAAeW,SAAS,CAACK,MAAzB;AACA;;AAED,WAAK,OAAL;AACCL,QAAAA,SAAS,GAAG,IAAIlH,UAAJ,CAAgBmH,KAAhB,CAAZ;AACAD,QAAAA,SAAS,CAACQ,QAAV,GAAqBL,KAArB;AACA;;AAED,WAAK,MAAL;AACCH,QAAAA,SAAS,GAAG,IAAIpG,SAAJ,CAAeqG,KAAf,CAAZ;AACAD,QAAAA,SAAS,CAACQ,QAAV,GAAqBL,KAArB,CAFD,CAGC;;AACAJ,QAAAA,QAAQ,CAACU,IAAT,GAAgBV,QAAQ,CAACU,IAAT,IAAiB,EAAjC;AACAV,QAAAA,QAAQ,CAACU,IAAT,CAAcC,cAAd,GAA+BX,QAAQ,CAACU,IAAT,CAAcC,cAAd,KAAiCnD,SAAjC,GAA6CwC,QAAQ,CAACU,IAAT,CAAcC,cAA3D,GAA4E,CAA3G;AACAX,QAAAA,QAAQ,CAACU,IAAT,CAAcE,cAAd,GAA+BZ,QAAQ,CAACU,IAAT,CAAcE,cAAd,KAAiCpD,SAAjC,GAA6CwC,QAAQ,CAACU,IAAT,CAAcE,cAA3D,GAA4EC,IAAI,CAACC,EAAL,GAAU,GAArH;AACAb,QAAAA,SAAS,CAACc,KAAV,GAAkBf,QAAQ,CAACU,IAAT,CAAcE,cAAhC;AACAX,QAAAA,SAAS,CAACe,QAAV,GAAqB,MAAMhB,QAAQ,CAACU,IAAT,CAAcC,cAAd,GAA+BX,QAAQ,CAACU,IAAT,CAAcE,cAAxE;AACAX,QAAAA,SAAS,CAACK,MAAV,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAAE,CAAvC;AACAP,QAAAA,SAAS,CAACX,GAAV,CAAeW,SAAS,CAACK,MAAzB;AACA;;AAED;AACC,cAAM,IAAI5C,KAAJ,CAAW,+CAA+CsC,QAAQ,CAACK,IAAxD,GAA+D,IAA1E,CAAN;AA3BF,KAViE,CAyCjE;AACA;;;AACAJ,IAAAA,SAAS,CAACM,QAAV,CAAmBC,GAAnB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AAEAP,IAAAA,SAAS,CAACgB,KAAV,GAAkB,CAAlB;AAEA,QAAKjB,QAAQ,CAACkB,SAAT,KAAuB1D,SAA5B,EAAwCyC,SAAS,CAACiB,SAAV,GAAsBlB,QAAQ,CAACkB,SAA/B;AAExCjB,IAAAA,SAAS,CAACP,IAAV,GAAiBM,QAAQ,CAACN,IAAT,IAAmB,WAAWK,UAA/C;AAEA,WAAOoB,OAAO,CAACC,OAAR,CAAiBnB,SAAjB,CAAP;AAEA,GArDD;AAuDA;;;;;;;AAKA,WAAS9B,2BAAT,GAAuC;AAEtC,SAAKuB,IAAL,GAAYxC,UAAU,CAACgB,mBAAvB;AAEA;;AAEDC,EAAAA,2BAA2B,CAACtD,SAA5B,CAAsCwG,eAAtC,GAAwD,YAAY;AAEnE,WAAOhJ,iBAAP;AAEA,GAJD;;AAMA8F,EAAAA,2BAA2B,CAACtD,SAA5B,CAAsCyG,YAAtC,GAAqD,UAAWC,cAAX,EAA2BC,WAA3B,EAAwCxC,MAAxC,EAAiD;AAErG,QAAIyC,OAAO,GAAG,EAAd;AAEAF,IAAAA,cAAc,CAACrB,KAAf,GAAuB,IAAIrJ,KAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAvB;AACA0K,IAAAA,cAAc,CAACG,OAAf,GAAyB,GAAzB;AAEA,QAAIC,iBAAiB,GAAGH,WAAW,CAACI,oBAApC;;AAEA,QAAKD,iBAAL,EAAyB;AAExB,UAAKE,KAAK,CAACC,OAAN,CAAeH,iBAAiB,CAACI,eAAjC,CAAL,EAA0D;AAEzD,YAAIC,KAAK,GAAGL,iBAAiB,CAACI,eAA9B;AAEAR,QAAAA,cAAc,CAACrB,KAAf,CAAqBC,SAArB,CAAgC6B,KAAhC;AACAT,QAAAA,cAAc,CAACG,OAAf,GAAyBM,KAAK,CAAE,CAAF,CAA9B;AAEA;;AAED,UAAKL,iBAAiB,CAACM,gBAAlB,KAAuCzE,SAA5C,EAAwD;AAEvDiE,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,KAAtC,EAA6CI,iBAAiB,CAACM,gBAA/D,CAAd;AAEA;AAED;;AAED,WAAOd,OAAO,CAACiB,GAAR,CAAaX,OAAb,CAAP;AAEA,GA9BD;AAgCA;;;AACA,MAAIxE,6BAA6B,GAAG,MAApC;AACA,MAAIoF,8BAA8B,GAAG,EAArC;AACA,MAAIC,4BAA4B,GAAG;AAAEhF,IAAAA,IAAI,EAAE,UAAR;AAAoBiF,IAAAA,GAAG,EAAE;AAAzB,GAAnC;;AAEA,WAASnF,mBAAT,CAA8Bb,IAA9B,EAAqC;AAEpC,SAAKmD,IAAL,GAAYxC,UAAU,CAACC,eAAvB;AACA,SAAKP,OAAL,GAAe,IAAf;AACA,SAAK4F,IAAL,GAAY,IAAZ;AAEA,QAAIC,UAAU,GAAG,IAAIC,QAAJ,CAAcnG,IAAd,EAAoB,CAApB,EAAuB8F,8BAAvB,CAAjB;AAEA,SAAKM,MAAL,GAAc;AACb7F,MAAAA,KAAK,EAAE9E,WAAW,CAAC+E,UAAZ,CAAwB,IAAIC,UAAJ,CAAgBT,IAAI,CAACqG,KAAL,CAAY,CAAZ,EAAe,CAAf,CAAhB,CAAxB,CADM;AAEbnF,MAAAA,OAAO,EAAEgF,UAAU,CAACI,SAAX,CAAsB,CAAtB,EAAyB,IAAzB,CAFI;AAGbhF,MAAAA,MAAM,EAAE4E,UAAU,CAACI,SAAX,CAAsB,CAAtB,EAAyB,IAAzB;AAHK,KAAd;;AAMA,QAAK,KAAKF,MAAL,CAAY7F,KAAZ,KAAsBG,6BAA3B,EAA2D;AAE1D,YAAM,IAAIS,KAAJ,CAAW,mDAAX,CAAN;AAEA,KAJD,MAIO,IAAK,KAAKiF,MAAL,CAAYlF,OAAZ,GAAsB,GAA3B,EAAiC;AAEvC,YAAM,IAAIC,KAAJ,CAAW,gDAAX,CAAN;AAEA;;AAED,QAAIoF,SAAS,GAAG,IAAIJ,QAAJ,CAAcnG,IAAd,EAAoB8F,8BAApB,CAAhB;AACA,QAAIU,UAAU,GAAG,CAAjB;;AAEA,WAAQA,UAAU,GAAGD,SAAS,CAACE,UAA/B,EAA4C;AAE3C,UAAIC,WAAW,GAAGH,SAAS,CAACD,SAAV,CAAqBE,UAArB,EAAiC,IAAjC,CAAlB;AACAA,MAAAA,UAAU,IAAI,CAAd;AAEA,UAAIG,SAAS,GAAGJ,SAAS,CAACD,SAAV,CAAqBE,UAArB,EAAiC,IAAjC,CAAhB;AACAA,MAAAA,UAAU,IAAI,CAAd;;AAEA,UAAKG,SAAS,KAAKZ,4BAA4B,CAAChF,IAAhD,EAAuD;AAEtD,YAAI6F,YAAY,GAAG,IAAInG,UAAJ,CAAgBT,IAAhB,EAAsB8F,8BAA8B,GAAGU,UAAvD,EAAmEE,WAAnE,CAAnB;AACA,aAAKrG,OAAL,GAAe5E,WAAW,CAAC+E,UAAZ,CAAwBoG,YAAxB,CAAf;AAEA,OALD,MAKO,IAAKD,SAAS,KAAKZ,4BAA4B,CAACC,GAAhD,EAAsD;AAE5D,YAAIa,UAAU,GAAGf,8BAA8B,GAAGU,UAAlD;AACA,aAAKP,IAAL,GAAYjG,IAAI,CAACqG,KAAL,CAAYQ,UAAZ,EAAwBA,UAAU,GAAGH,WAArC,CAAZ;AAEA,OAlB0C,CAoB3C;;;AAEAF,MAAAA,UAAU,IAAIE,WAAd;AAEA;;AAED,QAAK,KAAKrG,OAAL,KAAiB,IAAtB,EAA6B;AAE5B,YAAM,IAAIc,KAAJ,CAAW,2CAAX,CAAN;AAEA;AAED;AAED;;;;;;;AAKA,WAASa,iCAAT,CAA4ClB,IAA5C,EAAkD1C,WAAlD,EAAgE;AAE/D,QAAK,CAAEA,WAAP,EAAqB;AAEpB,YAAM,IAAI+C,KAAJ,CAAW,qDAAX,CAAN;AAEA;;AAED,SAAKgC,IAAL,GAAYxC,UAAU,CAACoB,0BAAvB;AACA,SAAKjB,IAAL,GAAYA,IAAZ;AACA,SAAK1C,WAAL,GAAmBA,WAAnB;AACA,SAAKA,WAAL,CAAiB0I,OAAjB;AAEA;;AAED9E,EAAAA,iCAAiC,CAAC1D,SAAlC,CAA4CyI,eAA5C,GAA8D,UAAWC,SAAX,EAAsBvE,MAAtB,EAA+B;AAE5F,QAAI3B,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAI1C,WAAW,GAAG,KAAKA,WAAvB;AACA,QAAI6I,eAAe,GAAGD,SAAS,CAAC1G,UAAV,CAAsB,KAAK6C,IAA3B,EAAkC+D,UAAxD;AACA,QAAIC,gBAAgB,GAAGH,SAAS,CAAC1G,UAAV,CAAsB,KAAK6C,IAA3B,EAAkCiE,UAAzD;AACA,QAAIC,iBAAiB,GAAG,EAAxB;AACA,QAAIC,sBAAsB,GAAG,EAA7B;AACA,QAAIC,gBAAgB,GAAG,EAAvB;;AAEA,SAAM,IAAIC,aAAV,IAA2BL,gBAA3B,EAA8C;AAE7C,UAAIM,kBAAkB,GAAGC,UAAU,CAAEF,aAAF,CAAV,IAA+BA,aAAa,CAACG,WAAd,EAAxD;AAEAN,MAAAA,iBAAiB,CAAEI,kBAAF,CAAjB,GAA0CN,gBAAgB,CAAEK,aAAF,CAA1D;AAEA;;AAED,SAAMA,aAAN,IAAuBR,SAAS,CAACI,UAAjC,EAA8C;AAE7C,UAAIK,kBAAkB,GAAGC,UAAU,CAAEF,aAAF,CAAV,IAA+BA,aAAa,CAACG,WAAd,EAAxD;;AAEA,UAAKR,gBAAgB,CAAEK,aAAF,CAAhB,KAAsCvG,SAA3C,EAAuD;AAEtD,YAAI2G,WAAW,GAAG9G,IAAI,CAAC+G,SAAL,CAAgBb,SAAS,CAACI,UAAV,CAAsBI,aAAtB,CAAhB,CAAlB;AACA,YAAIM,aAAa,GAAGC,qBAAqB,CAAEH,WAAW,CAACE,aAAd,CAAzC;AAEAP,QAAAA,gBAAgB,CAAEE,kBAAF,CAAhB,GAAyCK,aAAzC;AACAR,QAAAA,sBAAsB,CAAEG,kBAAF,CAAtB,GAA+CG,WAAW,CAACI,UAAZ,KAA2B,IAA1E;AAEA;AAED;;AAED,WAAOvF,MAAM,CAACwF,aAAP,CAAsB,YAAtB,EAAoChB,eAApC,EAAsDiB,IAAtD,CAA4D,UAAWhB,UAAX,EAAwB;AAE1F,aAAO,IAAItC,OAAJ,CAAa,UAAWC,OAAX,EAAqB;AAExCzG,QAAAA,WAAW,CAAC+J,eAAZ,CAA6BjB,UAA7B,EAAyC,UAAWkB,QAAX,EAAsB;AAE9D,eAAM,IAAIZ,aAAV,IAA2BY,QAAQ,CAAChB,UAApC,EAAiD;AAEhD,gBAAIiB,SAAS,GAAGD,QAAQ,CAAChB,UAAT,CAAqBI,aAArB,CAAhB;AACA,gBAAIQ,UAAU,GAAGV,sBAAsB,CAAEE,aAAF,CAAvC;AAEA,gBAAKQ,UAAU,KAAK/G,SAApB,EAAgCoH,SAAS,CAACL,UAAV,GAAuBA,UAAvB;AAEhC;;AAEDnD,UAAAA,OAAO,CAAEuD,QAAF,CAAP;AAEA,SAbD,EAaGf,iBAbH,EAasBE,gBAbtB;AAeA,OAjBM,CAAP;AAmBA,KArBM,CAAP;AAuBA,GAzDD;AA2DA;;;;;;;AAKA,WAASnF,6BAAT,GAAyC;AAExC,SAAKe,IAAL,GAAYxC,UAAU,CAACwB,qBAAvB;AAEA;;AAEDC,EAAAA,6BAA6B,CAAC9D,SAA9B,CAAwCgK,aAAxC,GAAwD,UAAWC,OAAX,EAAoBC,SAApB,EAAgC;AAEvFD,IAAAA,OAAO,GAAGA,OAAO,CAACE,KAAR,EAAV;;AAEA,QAAKD,SAAS,CAACE,MAAV,KAAqBzH,SAA1B,EAAsC;AAErCsH,MAAAA,OAAO,CAACG,MAAR,CAAe9E,SAAf,CAA0B4E,SAAS,CAACE,MAApC;AAEA;;AAED,QAAKF,SAAS,CAACG,QAAV,KAAuB1H,SAA5B,EAAwC;AAEvCsH,MAAAA,OAAO,CAACI,QAAR,GAAmBH,SAAS,CAACG,QAA7B;AAEA;;AAED,QAAKH,SAAS,CAACI,KAAV,KAAoB3H,SAAzB,EAAqC;AAEpCsH,MAAAA,OAAO,CAACM,MAAR,CAAejF,SAAf,CAA0B4E,SAAS,CAACI,KAApC;AAEA;;AAED,QAAKJ,SAAS,CAACM,QAAV,KAAuB7H,SAA5B,EAAwC;AAEvC1B,MAAAA,OAAO,CAACiD,IAAR,CAAc,0CAA0C,KAAKW,IAA/C,GAAsD,gCAApE;AAEA;;AAEDoF,IAAAA,OAAO,CAACQ,WAAR,GAAsB,IAAtB;AAEA,WAAOR,OAAP;AAEA,GAhCD;AAkCA;;;;;;;AAKA,WAASzG,2CAAT,GAAuD;AAEtD,WAAO;AAENqB,MAAAA,IAAI,EAAExC,UAAU,CAACkB,qCAFX;AAINmH,MAAAA,wBAAwB,EAAE,CACzB,OADyB,EAEzB,KAFyB,EAGzB,UAHyB,EAIzB,mBAJyB,EAKzB,OALyB,EAMzB,gBANyB,EAOzB,UAPyB,EAQzB,mBARyB,EASzB,aATyB,EAUzB,SAVyB,EAWzB,WAXyB,EAYzB,WAZyB,EAazB,eAbyB,EAczB,iBAdyB,EAezB,mBAfyB,EAgBzB,kBAhByB,EAiBzB,aAjByB,EAkBzB,UAlByB,EAmBzB,eAnByB,EAoBzB,YApByB,EAqBzB,UArByB,EAsBzB,QAtByB,EAuBzB,iBAvByB,EAwBzB,iBAxByB,CAJpB;AA+BNlE,MAAAA,eAAe,EAAE,2BAAY;AAE5B,eAAO5H,cAAP;AAEA,OAnCK;AAqCN6H,MAAAA,YAAY,EAAE,sBAAWC,cAAX,EAA2BC,WAA3B,EAAwCxC,MAAxC,EAAiD;AAE9D,YAAIwG,qBAAqB,GAAGhE,WAAW,CAAC3E,UAAZ,CAAwB,KAAK6C,IAA7B,CAA5B;AAEA,YAAI+F,MAAM,GAAGjM,SAAS,CAAE,UAAF,CAAtB;AAEA,YAAIkM,QAAQ,GAAGxL,aAAa,CAAC8K,KAAd,CAAqBS,MAAM,CAACC,QAA5B,CAAf;AAEA,YAAIC,4BAA4B,GAAG,CAClC,wBADkC,EAElC,iCAFkC,EAGlC,QAHkC,EAIjCC,IAJiC,CAI3B,IAJ2B,CAAnC;AAMA,YAAIC,8BAA8B,GAAG,CACpC,0BADoC,EAEpC,mCAFoC,EAGpC,QAHoC,EAInCD,IAJmC,CAI7B,IAJ6B,CAArC;AAMA,YAAIE,wBAAwB,GAAG,CAC9B,iCAD8B,EAE9B,wBAF8B,EAG9B,sDAH8B,EAI9B,iDAJ8B,EAK9B,kFAL8B,EAM9B,uCAN8B,EAO9B,QAP8B,EAQ7BF,IAR6B,CAQvB,IARuB,CAA/B;AAUA,YAAIG,0BAA0B,GAAG,CAChC,sCADgC,EAEhC,0BAFgC,EAGhC,0DAHgC,EAIhC,gFAJgC,EAKhC,yCALgC,EAMhC,QANgC,EAO/BH,IAP+B,CAOzB,IAPyB,CAAjC;AASA,YAAII,0BAA0B,GAAG,CAChC,4BADgC,EAEhC,2CAFgC,EAGhC,iFAHgC,EAIhC,8DAJgC,EAKhC,4HALgC,EAMhC,kDANgC,EAOhC,sEAPgC,EAQhC,8CARgC,EAS/BJ,IAT+B,CASzB,IATyB,CAAjC;AAWA,YAAIK,cAAc,GAAGR,MAAM,CAACQ,cAAP,CACnBC,OADmB,CACV,0BADU,EACkB,wBADlB,EAEnBA,OAFmB,CAEV,0BAFU,EAEkB,2BAFlB,EAGnBA,OAHmB,CAGV,uCAHU,EAG+BP,4BAH/B,EAInBO,OAJmB,CAIV,uCAJU,EAI+BL,8BAJ/B,EAKnBK,OALmB,CAKV,kCALU,EAK0BJ,wBAL1B,EAMnBI,OANmB,CAMV,kCANU,EAM0BH,0BAN1B,EAOnBG,OAPmB,CAOV,qCAPU,EAO6BF,0BAP7B,CAArB;AASA,eAAON,QAAQ,CAACS,SAAhB;AACA,eAAOT,QAAQ,CAACU,SAAhB;AACA,eAAOV,QAAQ,CAACW,YAAhB;AACA,eAAOX,QAAQ,CAACY,YAAhB;AAEAZ,QAAAA,QAAQ,CAACa,QAAT,GAAoB;AAAEC,UAAAA,KAAK,EAAE,IAAI3P,KAAJ,GAAY4P,MAAZ,CAAoB,QAApB;AAAT,SAApB;AACAf,QAAAA,QAAQ,CAACgB,UAAT,GAAsB;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAtB;AACAd,QAAAA,QAAQ,CAACiB,WAAT,GAAuB;AAAEH,UAAAA,KAAK,EAAE;AAAT,SAAvB;AACAd,QAAAA,QAAQ,CAACkB,aAAT,GAAyB;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAEAjF,QAAAA,cAAc,CAACsF,YAAf,GAA8BpB,MAAM,CAACoB,YAArC;AACAtF,QAAAA,cAAc,CAAC0E,cAAf,GAAgCA,cAAhC;AACA1E,QAAAA,cAAc,CAACmE,QAAf,GAA0BA,QAA1B;AACAnE,QAAAA,cAAc,CAACuF,OAAf,GAAyB;AAAE,sBAAY;AAAd,SAAzB;AAEAvF,QAAAA,cAAc,CAACrB,KAAf,GAAuB,IAAIrJ,KAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAvB;AACA0K,QAAAA,cAAc,CAACG,OAAf,GAAyB,GAAzB;AAEA,YAAID,OAAO,GAAG,EAAd;;AAEA,YAAKI,KAAK,CAACC,OAAN,CAAe0D,qBAAqB,CAACuB,aAArC,CAAL,EAA4D;AAE3D,cAAI/E,KAAK,GAAGwD,qBAAqB,CAACuB,aAAlC;AAEAxF,UAAAA,cAAc,CAACrB,KAAf,CAAqBC,SAArB,CAAgC6B,KAAhC;AACAT,UAAAA,cAAc,CAACG,OAAf,GAAyBM,KAAK,CAAE,CAAF,CAA9B;AAEA;;AAED,YAAKwD,qBAAqB,CAACwB,cAAtB,KAAyCxJ,SAA9C,EAA0D;AAEzDiE,UAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,KAAtC,EAA6CiE,qBAAqB,CAACwB,cAAnE,CAAd;AAEA;;AAEDzF,QAAAA,cAAc,CAAC0F,QAAf,GAA0B,IAAIpQ,KAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAA1B;AACA0K,QAAAA,cAAc,CAACmF,UAAf,GAA4BlB,qBAAqB,CAAC0B,gBAAtB,KAA2C1J,SAA3C,GAAuDgI,qBAAqB,CAAC0B,gBAA7E,GAAgG,GAA5H;AACA3F,QAAAA,cAAc,CAACgF,QAAf,GAA0B,IAAI1P,KAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAA1B;;AAEA,YAAKgL,KAAK,CAACC,OAAN,CAAe0D,qBAAqB,CAAC2B,cAArC,CAAL,EAA6D;AAE5D5F,UAAAA,cAAc,CAACgF,QAAf,CAAwBpG,SAAxB,CAAmCqF,qBAAqB,CAAC2B,cAAzD;AAEA;;AAED,YAAK3B,qBAAqB,CAAC4B,yBAAtB,KAAoD5J,SAAzD,EAAqE;AAEpE,cAAI6J,eAAe,GAAG7B,qBAAqB,CAAC4B,yBAA5C;AACA3F,UAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,eAAtC,EAAuD8F,eAAvD,CAAd;AACA5F,UAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,aAAtC,EAAqD8F,eAArD,CAAd;AAEA;;AAED,eAAOlG,OAAO,CAACiB,GAAR,CAAaX,OAAb,CAAP;AAEA,OAvJK;AAyJN6F,MAAAA,cAAc,EAAE,wBAAWC,MAAX,EAAoB;AAEnC;AAEA,YAAIC,QAAQ,GAAG,IAAI/N,cAAJ,CAAoB;AAClCqN,UAAAA,OAAO,EAAES,MAAM,CAACT,OADkB;AAElCD,UAAAA,YAAY,EAAEU,MAAM,CAACV,YAFa;AAGlCZ,UAAAA,cAAc,EAAEsB,MAAM,CAACtB,cAHW;AAIlCP,UAAAA,QAAQ,EAAE6B,MAAM,CAAC7B,QAJiB;AAKlC+B,UAAAA,GAAG,EAAE,IAL6B;AAMlC5H,UAAAA,MAAM,EAAE,IAN0B;AAOlC6B,UAAAA,OAAO,EAAE6F,MAAM,CAAC7F,OAPkB;AAQlCgG,UAAAA,WAAW,EAAEH,MAAM,CAACG;AARc,SAApB,CAAf;AAWAF,QAAAA,QAAQ,CAACG,gCAAT,GAA4C,IAA5C;AAEAH,QAAAA,QAAQ,CAACtH,KAAT,GAAiBqH,MAAM,CAACrH,KAAxB;AAEAsH,QAAAA,QAAQ,CAACI,GAAT,GAAeL,MAAM,CAACK,GAAP,KAAepK,SAAf,GAA2B,IAA3B,GAAkC+J,MAAM,CAACK,GAAxD;AAEAJ,QAAAA,QAAQ,CAACK,QAAT,GAAoB,IAApB;AACAL,QAAAA,QAAQ,CAACM,iBAAT,GAA6B,GAA7B;AAEAN,QAAAA,QAAQ,CAACO,KAAT,GAAiBR,MAAM,CAACQ,KAAP,KAAiBvK,SAAjB,GAA6B,IAA7B,GAAoC+J,MAAM,CAACQ,KAA5D;AACAP,QAAAA,QAAQ,CAACQ,cAAT,GAA0B,GAA1B;AAEAR,QAAAA,QAAQ,CAACP,QAAT,GAAoBM,MAAM,CAACN,QAA3B;AACAO,QAAAA,QAAQ,CAACS,iBAAT,GAA6B,GAA7B;AACAT,QAAAA,QAAQ,CAACU,WAAT,GAAuBX,MAAM,CAACW,WAAP,KAAuB1K,SAAvB,GAAmC,IAAnC,GAA0C+J,MAAM,CAACW,WAAxE;AAEAV,QAAAA,QAAQ,CAACW,OAAT,GAAmBZ,MAAM,CAACY,OAAP,KAAmB3K,SAAnB,GAA+B,IAA/B,GAAsC+J,MAAM,CAACY,OAAhE;AACAX,QAAAA,QAAQ,CAACY,SAAT,GAAqB,CAArB;AAEAZ,QAAAA,QAAQ,CAACa,SAAT,GAAqBd,MAAM,CAACc,SAAP,KAAqB7K,SAArB,GAAiC,IAAjC,GAAwC+J,MAAM,CAACc,SAApE;AACAb,QAAAA,QAAQ,CAACc,aAAT,GAAyBxO,qBAAzB;AAEA,YAAKyN,MAAM,CAACgB,WAAZ,EAA0Bf,QAAQ,CAACe,WAAT,GAAuBhB,MAAM,CAACgB,WAA9B;AAE1Bf,QAAAA,QAAQ,CAACgB,eAAT,GAA2B,IAA3B;AACAhB,QAAAA,QAAQ,CAACiB,iBAAT,GAA6B,CAA7B;AACAjB,QAAAA,QAAQ,CAACkB,gBAAT,GAA4B,CAA5B;AAEAlB,QAAAA,QAAQ,CAACb,WAAT,GAAuBY,MAAM,CAACZ,WAAP,KAAuBnJ,SAAvB,GAAmC,IAAnC,GAA0C+J,MAAM,CAACZ,WAAxE;AACAa,QAAAA,QAAQ,CAACjB,QAAT,GAAoBgB,MAAM,CAAChB,QAA3B;AAEAiB,QAAAA,QAAQ,CAACZ,aAAT,GAAyBW,MAAM,CAACX,aAAP,KAAyBpJ,SAAzB,GAAqC,IAArC,GAA4C+J,MAAM,CAACX,aAA5E;AACAY,QAAAA,QAAQ,CAACd,UAAT,GAAsBa,MAAM,CAACb,UAA7B;AAEAc,QAAAA,QAAQ,CAACmB,QAAT,GAAoB,IAApB;AAEAnB,QAAAA,QAAQ,CAACoB,MAAT,GAAkBrB,MAAM,CAACqB,MAAP,KAAkBpL,SAAlB,GAA8B,IAA9B,GAAqC+J,MAAM,CAACqB,MAA9D;AACApB,QAAAA,QAAQ,CAACqB,eAAT,GAA2B,GAA3B;AAEArB,QAAAA,QAAQ,CAACsB,eAAT,GAA2B,IAA3B;AAEAtB,QAAAA,QAAQ,CAAC3K,UAAT,CAAoBkM,WAApB,GAAkC,IAAlC;AAEA,eAAOvB,QAAP;AAEA,OArNK;;AAuNN;;;;;;;;;;;;AAYAwB,MAAAA,aAAa,EAAE,uBAAWC,MAAX,EAAoB;AAElC,YAAI3I,MAAM,GAAG2I,MAAM,CAACjE,KAAP,EAAb;AAEA1E,QAAAA,MAAM,CAACqH,gCAAP,GAA0C,IAA1C;AAEA,YAAIJ,MAAM,GAAG,KAAKhC,wBAAlB;;AAEA,aAAM,IAAI3H,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG3B,MAAM,CAAC1J,MAA7B,EAAqCD,CAAC,GAAGsL,EAAzC,EAA6CtL,CAAC,EAA9C,EAAoD;AAEnD,cAAI4I,KAAK,GAAGyC,MAAM,CAAE1B,MAAM,CAAE3J,CAAF,CAAR,CAAlB;AACA0C,UAAAA,MAAM,CAAEiH,MAAM,CAAE3J,CAAF,CAAR,CAAN,GAA0B4I,KAAK,IAAIA,KAAK,CAAC2C,OAAjB,GAA6B3C,KAAK,CAACxB,KAAN,EAA7B,GAA6CwB,KAArE;AAEA;;AAED,eAAOlG,MAAP;AAEA,OApPK;AAsPN;AACA8I,MAAAA,eAAe,EAAE,yBAAWC,QAAX,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoC5E,QAApC,EAA8C6C,QAA9C,EAAyD;AAEzE,YAAKA,QAAQ,CAACG,gCAAT,KAA8C,IAAnD,EAA0D;AAEzD;AAEA;;AAED,YAAIjC,QAAQ,GAAG8B,QAAQ,CAAC9B,QAAxB;AACA,YAAIoB,OAAO,GAAGU,QAAQ,CAACV,OAAvB;AAEApB,QAAAA,QAAQ,CAAChE,OAAT,CAAiB8E,KAAjB,GAAyBgB,QAAQ,CAAC9F,OAAlC;AAEAgE,QAAAA,QAAQ,CAAC8D,OAAT,CAAiBhD,KAAjB,CAAuBiD,IAAvB,CAA6BjC,QAAQ,CAACtH,KAAtC;AACAwF,QAAAA,QAAQ,CAACuB,QAAT,CAAkBT,KAAlB,CAAwBiD,IAAxB,CAA8BjC,QAAQ,CAACP,QAAvC,EAAkDyC,cAAlD,CAAkElC,QAAQ,CAACS,iBAA3E;AAEAvC,QAAAA,QAAQ,CAACkC,GAAT,CAAapB,KAAb,GAAqBgB,QAAQ,CAACI,GAA9B;AACAlC,QAAAA,QAAQ,CAACiB,WAAT,CAAqBH,KAArB,GAA6BgB,QAAQ,CAACb,WAAtC;AACAjB,QAAAA,QAAQ,CAACiD,QAAT,CAAkBnC,KAAlB,GAA0BgB,QAAQ,CAACmB,QAAnC;AAEAjD,QAAAA,QAAQ,CAACmC,QAAT,CAAkBrB,KAAlB,GAA0BgB,QAAQ,CAACK,QAAnC;AACAnC,QAAAA,QAAQ,CAACoC,iBAAT,CAA2BtB,KAA3B,GAAmCgB,QAAQ,CAACM,iBAA5C;AAEApC,QAAAA,QAAQ,CAACqC,KAAT,CAAevB,KAAf,GAAuBgB,QAAQ,CAACO,KAAhC;AACArC,QAAAA,QAAQ,CAACsC,cAAT,CAAwBxB,KAAxB,GAAgCgB,QAAQ,CAACQ,cAAzC,CAxByE,CA0BzE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAI2B,UAAJ;;AAEA,YAAKnC,QAAQ,CAACI,GAAd,EAAoB;AAEnB+B,UAAAA,UAAU,GAAGnC,QAAQ,CAACI,GAAtB;AAEA,SAJD,MAIO,IAAKJ,QAAQ,CAACb,WAAd,EAA4B;AAElCgD,UAAAA,UAAU,GAAGnC,QAAQ,CAACb,WAAtB;AAEA,SAJM,MAIA,IAAKa,QAAQ,CAACgB,eAAd,EAAgC;AAEtCmB,UAAAA,UAAU,GAAGnC,QAAQ,CAACgB,eAAtB;AAEA,SAJM,MAIA,IAAKhB,QAAQ,CAACa,SAAd,EAA0B;AAEhCsB,UAAAA,UAAU,GAAGnC,QAAQ,CAACa,SAAtB;AAEA,SAJM,MAIA,IAAKb,QAAQ,CAACW,OAAd,EAAwB;AAE9BwB,UAAAA,UAAU,GAAGnC,QAAQ,CAACW,OAAtB;AAEA,SAJM,MAIA,IAAKX,QAAQ,CAACZ,aAAd,EAA8B;AAEpC+C,UAAAA,UAAU,GAAGnC,QAAQ,CAACZ,aAAtB;AAEA,SAJM,MAIA,IAAKY,QAAQ,CAACmB,QAAd,EAAyB;AAE/BgB,UAAAA,UAAU,GAAGnC,QAAQ,CAACmB,QAAtB;AAEA,SAJM,MAIA,IAAKnB,QAAQ,CAACU,WAAd,EAA4B;AAElCyB,UAAAA,UAAU,GAAGnC,QAAQ,CAACU,WAAtB;AAEA;;AAED,YAAKyB,UAAU,KAAKnM,SAApB,EAAgC;AAE/B;AACA,cAAKmM,UAAU,CAACC,mBAAhB,EAAsC;AAErCD,YAAAA,UAAU,GAAGA,UAAU,CAAC7E,OAAxB;AAEA;;AAED,cAAK6E,UAAU,CAACE,gBAAX,KAAgC,IAArC,EAA4C;AAE3CF,YAAAA,UAAU,CAACG,YAAX;AAEA;;AAEDpE,UAAAA,QAAQ,CAACqE,WAAT,CAAqBvD,KAArB,CAA2BiD,IAA3B,CAAiCE,UAAU,CAACK,MAA5C;AAEA;;AAED,YAAKxC,QAAQ,CAACoB,MAAd,EAAuB;AAEtBlD,UAAAA,QAAQ,CAACkD,MAAT,CAAgBpC,KAAhB,GAAwBgB,QAAQ,CAACoB,MAAjC;AACAlD,UAAAA,QAAQ,CAACmD,eAAT,CAAyBrC,KAAzB,GAAiCgB,QAAQ,CAACqB,eAA1C,CAHsB,CAKtB;AACA;AACA;AACA;;AACAnD,UAAAA,QAAQ,CAACuE,UAAT,CAAoBzD,KAApB,GAA4BgB,QAAQ,CAACoB,MAAT,CAAgBsB,aAAhB,GAAgC,CAAE,CAAlC,GAAsC,CAAlE;AAEAxE,UAAAA,QAAQ,CAACyE,YAAT,CAAsB3D,KAAtB,GAA8BgB,QAAQ,CAAC2C,YAAvC;AACAzE,UAAAA,QAAQ,CAACoD,eAAT,CAAyBtC,KAAzB,GAAiCgB,QAAQ,CAACsB,eAA1C;AAEApD,UAAAA,QAAQ,CAAC0E,WAAT,CAAqB5D,KAArB,GAA6B6C,QAAQ,CAACgB,UAAT,CAAoBjL,GAApB,CAAyBoI,QAAQ,CAACoB,MAAlC,EAA2C0B,aAAxE;AAEA;;AAED5E,QAAAA,QAAQ,CAACa,QAAT,CAAkBC,KAAlB,CAAwBiD,IAAxB,CAA8BjC,QAAQ,CAACjB,QAAvC;AACAb,QAAAA,QAAQ,CAACgB,UAAT,CAAoBF,KAApB,GAA4BgB,QAAQ,CAACd,UAArC;AAEAhB,QAAAA,QAAQ,CAACkB,aAAT,CAAuBJ,KAAvB,GAA+BgB,QAAQ,CAACZ,aAAxC;AAEAlB,QAAAA,QAAQ,CAACwC,WAAT,CAAqB1B,KAArB,GAA6BgB,QAAQ,CAACU,WAAtC;AACAxC,QAAAA,QAAQ,CAACyC,OAAT,CAAiB3B,KAAjB,GAAyBgB,QAAQ,CAACW,OAAlC;AACAzC,QAAAA,QAAQ,CAAC2C,SAAT,CAAmB7B,KAAnB,GAA2BgB,QAAQ,CAACa,SAApC;AAEA3C,QAAAA,QAAQ,CAAC8C,eAAT,CAAyBhC,KAAzB,GAAiCgB,QAAQ,CAACgB,eAA1C;AACA9C,QAAAA,QAAQ,CAAC+C,iBAAT,CAA2BjC,KAA3B,GAAmCgB,QAAQ,CAACiB,iBAA5C;AACA/C,QAAAA,QAAQ,CAACgD,gBAAT,CAA0BlC,KAA1B,GAAkCgB,QAAQ,CAACkB,gBAA3C;;AAEA,YAAKhD,QAAQ,CAACkB,aAAT,CAAuBJ,KAAvB,KAAiC,IAAjC,IAAyCM,OAAO,CAACyD,iBAAR,KAA8B/M,SAA5E,EAAwF;AAEvFsJ,UAAAA,OAAO,CAACyD,iBAAR,GAA4B,EAA5B,CAFuF,CAGvF;;AACAzD,UAAAA,OAAO,CAAC0D,gBAAR,GAA2B,EAA3B;AAEA;;AAED,YAAK9E,QAAQ,CAACkB,aAAT,CAAuBJ,KAAvB,KAAiC,IAAjC,IAAyCM,OAAO,CAACyD,iBAAR,KAA8B/M,SAA5E,EAAwF;AAEvF,iBAAOsJ,OAAO,CAACyD,iBAAf;AACA,iBAAOzD,OAAO,CAAC0D,gBAAf;AAEA;AAED;AA9XK,KAAP;AAkYA;AAED;;;;;;;AAKA,WAAS3L,6BAAT,GAAyC;AAExC,SAAKa,IAAL,GAAYxC,UAAU,CAAC0B,qBAAvB;AAEA;AAED;;AACA;;AACA;AAEA;AACA;;;AACA,WAAS6L,0BAAT,CAAqCC,kBAArC,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,YAAnF,EAAkG;AAEjGxT,IAAAA,WAAW,CAACqD,IAAZ,CAAkB,IAAlB,EAAwBgQ,kBAAxB,EAA4CC,YAA5C,EAA0DC,UAA1D,EAAsEC,YAAtE;AAEA;;AAEDJ,EAAAA,0BAA0B,CAAC5P,SAA3B,GAAuCC,MAAM,CAACE,MAAP,CAAe3D,WAAW,CAACwD,SAA3B,CAAvC;AACA4P,EAAAA,0BAA0B,CAAC5P,SAA3B,CAAqCI,WAArC,GAAmDwP,0BAAnD;;AAEAA,EAAAA,0BAA0B,CAAC5P,SAA3B,CAAqCiQ,gBAArC,GAAwD,UAAWC,KAAX,EAAmB;AAE1E;AACA;AAEA,QAAIC,MAAM,GAAG,KAAKH,YAAlB;AAAA,QACCI,MAAM,GAAG,KAAKN,YADf;AAAA,QAECO,SAAS,GAAG,KAAKA,SAFlB;AAAA,QAGCjG,MAAM,GAAG8F,KAAK,GAAGG,SAAR,GAAoB,CAApB,GAAwBA,SAHlC;;AAKA,SAAM,IAAItN,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKsN,SAAvB,EAAkCtN,CAAC,EAAnC,EAAyC;AAExCoN,MAAAA,MAAM,CAAEpN,CAAF,CAAN,GAAcqN,MAAM,CAAEhG,MAAM,GAAGrH,CAAX,CAApB;AAEA;;AAED,WAAOoN,MAAP;AAEA,GAlBD;;AAoBAP,EAAAA,0BAA0B,CAAC5P,SAA3B,CAAqCsQ,YAArC,GAAoDV,0BAA0B,CAAC5P,SAA3B,CAAqCiQ,gBAAzF;AAEAL,EAAAA,0BAA0B,CAAC5P,SAA3B,CAAqCuQ,SAArC,GAAiDX,0BAA0B,CAAC5P,SAA3B,CAAqCiQ,gBAAtF;;AAEAL,EAAAA,0BAA0B,CAAC5P,SAA3B,CAAqCwQ,YAArC,GAAoD,UAAWC,EAAX,EAAeC,EAAf,EAAmBC,CAAnB,EAAsBC,EAAtB,EAA2B;AAE9E,QAAIT,MAAM,GAAG,KAAKH,YAAlB;AACA,QAAII,MAAM,GAAG,KAAKN,YAAlB;AACA,QAAIe,MAAM,GAAG,KAAKR,SAAlB;AAEA,QAAIS,OAAO,GAAGD,MAAM,GAAG,CAAvB;AACA,QAAIE,OAAO,GAAGF,MAAM,GAAG,CAAvB;AAEA,QAAIG,EAAE,GAAGJ,EAAE,GAAGF,EAAd;AAEA,QAAIO,CAAC,GAAG,CAAEN,CAAC,GAAGD,EAAN,IAAaM,EAArB;AACA,QAAIE,EAAE,GAAGD,CAAC,GAAGA,CAAb;AACA,QAAIE,GAAG,GAAGD,EAAE,GAAGD,CAAf;AAEA,QAAIG,OAAO,GAAGX,EAAE,GAAGM,OAAnB;AACA,QAAIM,OAAO,GAAGD,OAAO,GAAGL,OAAxB;AAEA,QAAIO,EAAE,GAAG,CAAE,CAAF,GAAMH,GAAN,GAAY,IAAID,EAAzB;AACA,QAAIK,EAAE,GAAGJ,GAAG,GAAGD,EAAf;AACA,QAAIM,EAAE,GAAG,IAAIF,EAAb;AACA,QAAIG,EAAE,GAAGF,EAAE,GAAGL,EAAL,GAAUD,CAAnB,CArB8E,CAuB9E;AACA;;AACA,SAAM,IAAIlO,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAK8N,MAAvB,EAA+B9N,CAAC,EAAhC,EAAsC;AAErC,UAAI2O,EAAE,GAAGtB,MAAM,CAAEiB,OAAO,GAAGtO,CAAV,GAAc8N,MAAhB,CAAf,CAFqC,CAEI;;AACzC,UAAIc,EAAE,GAAGvB,MAAM,CAAEiB,OAAO,GAAGtO,CAAV,GAAc+N,OAAhB,CAAN,GAAkCE,EAA3C,CAHqC,CAGU;;AAC/C,UAAIY,EAAE,GAAGxB,MAAM,CAAEgB,OAAO,GAAGrO,CAAV,GAAc8N,MAAhB,CAAf,CAJqC,CAII;;AACzC,UAAIgB,EAAE,GAAGzB,MAAM,CAAEgB,OAAO,GAAGrO,CAAZ,CAAN,GAAwBiO,EAAjC,CALqC,CAKA;;AAErCb,MAAAA,MAAM,CAAEpN,CAAF,CAAN,GAAcyO,EAAE,GAAGE,EAAL,GAAUD,EAAE,GAAGE,EAAf,GAAoBL,EAAE,GAAGM,EAAzB,GAA8BL,EAAE,GAAGM,EAAjD;AAEA;;AAED,WAAO1B,MAAP;AAEA,GAtCD;AAwCA;;AACA;;AACA;;AAEA;;;AAEA,MAAI2B,eAAe,GAAG;AACrBC,IAAAA,KAAK,EAAE,IADc;AAErB;AACAC,IAAAA,UAAU,EAAE,KAHS;AAIrBC,IAAAA,UAAU,EAAE,KAJS;AAKrBC,IAAAA,UAAU,EAAE,KALS;AAMrBC,IAAAA,UAAU,EAAE,KANS;AAOrBC,IAAAA,UAAU,EAAE,KAPS;AAQrBC,IAAAA,MAAM,EAAE,IARa;AASrBC,IAAAA,MAAM,EAAE,KATa;AAUrBC,IAAAA,UAAU,EAAE,KAVS;AAWrBC,IAAAA,MAAM,EAAE,CAXa;AAYrBC,IAAAA,KAAK,EAAE,CAZc;AAarBC,IAAAA,SAAS,EAAE,CAbU;AAcrBC,IAAAA,UAAU,EAAE,CAdS;AAerBC,IAAAA,SAAS,EAAE,CAfU;AAgBrBC,IAAAA,cAAc,EAAE,CAhBK;AAiBrBC,IAAAA,YAAY,EAAE,CAjBO;AAkBrBC,IAAAA,aAAa,EAAE,IAlBM;AAmBrBC,IAAAA,cAAc,EAAE;AAnBK,GAAtB;AAsBA,MAAIvJ,qBAAqB,GAAG;AAC3B,UAAMwJ,SADqB;AAE3B,UAAM9Q,UAFqB;AAG3B,UAAM+Q,UAHqB;AAI3B,UAAMC,WAJqB;AAK3B,UAAMC,WALqB;AAM3B,UAAMC;AANqB,GAA5B;AASA,MAAIC,aAAa,GAAG;AACnB,UAAM3V,aADa;AAEnB,UAAMZ,YAFa;AAGnB,UAAMc,0BAHa;AAInB,UAAMZ,yBAJa;AAKnB,UAAMW,yBALa;AAMnB,UAAMZ;AANa,GAApB;AASA,MAAIuW,eAAe,GAAG;AACrB,WAAOxX,mBADc;AAErB,WAAO2B,sBAFc;AAGrB,WAAOe;AAHc,GAAtB;AAMA,MAAI+U,gBAAgB,GAAG;AACtB,cAAU,CADY;AAEtB,YAAQ,CAFc;AAGtB,YAAQ,CAHc;AAItB,YAAQ,CAJc;AAKtB,YAAQ,CALc;AAMtB,YAAQ,CANc;AAOtB,YAAQ;AAPc,GAAvB;AAUA,MAAIpK,UAAU,GAAG;AAChBqK,IAAAA,QAAQ,EAAE,UADM;AAEhBC,IAAAA,MAAM,EAAE,QAFQ;AAGhBC,IAAAA,OAAO,EAAE,SAHO;AAIhBC,IAAAA,UAAU,EAAE,IAJI;AAKhBC,IAAAA,UAAU,EAAE,KALI;AAMhBC,IAAAA,OAAO,EAAE,OANO;AAOhBC,IAAAA,SAAS,EAAE,YAPK;AAQhBC,IAAAA,QAAQ,EAAE;AARM,GAAjB;AAWA,MAAIC,eAAe,GAAG;AACrB3J,IAAAA,KAAK,EAAE,OADc;AAErB4J,IAAAA,WAAW,EAAE,UAFQ;AAGrB7J,IAAAA,QAAQ,EAAE,YAHW;AAIrB8J,IAAAA,OAAO,EAAE;AAJY,GAAtB;AAOA,MAAIC,aAAa,GAAG;AACnBC,IAAAA,WAAW,EAAE1R,SADM;AACK;AACA;AACxB0P,IAAAA,MAAM,EAAE3V,iBAHW;AAInB4X,IAAAA,IAAI,EAAE7X;AAJa,GAApB;AAOA,MAAI8X,WAAW,GAAG;AACjBC,IAAAA,MAAM,EAAE,QADS;AAEjBC,IAAAA,IAAI,EAAE,MAFW;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GAAlB;AAMA,MAAIC,iBAAiB,GAAG;AACvB,iBAAapW,UADU;AAEvB,kBAAcC;AAFS,GAAxB;AAKA;;AAEA,WAASoW,UAAT,CAAqBtU,GAArB,EAA0BM,IAA1B,EAAiC;AAEhC;AACA,QAAK,OAAON,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAxC,EAA6C,OAAO,EAAP,CAHb,CAKhC;;AACA,QAAK,gBAAgBuU,IAAhB,CAAsBjU,IAAtB,KAAgC,MAAMiU,IAAN,CAAYvU,GAAZ,CAArC,EAAyD;AAExDM,MAAAA,IAAI,GAAGA,IAAI,CAACyK,OAAL,CAAc,yBAAd,EAAyC,IAAzC,CAAP;AAEA,KAV+B,CAYhC;;;AACA,QAAK,mBAAmBwJ,IAAnB,CAAyBvU,GAAzB,CAAL,EAAsC,OAAOA,GAAP,CAbN,CAehC;;AACA,QAAK,gBAAgBuU,IAAhB,CAAsBvU,GAAtB,CAAL,EAAmC,OAAOA,GAAP,CAhBH,CAkBhC;;AACA,QAAK,aAAauU,IAAb,CAAmBvU,GAAnB,CAAL,EAAgC,OAAOA,GAAP,CAnBA,CAqBhC;;AACA,WAAOM,IAAI,GAAGN,GAAd;AAEA;AAED;;;;;AAGA,WAASwU,qBAAT,CAAgCC,KAAhC,EAAwC;AAEvC,QAAKA,KAAK,CAAE,iBAAF,CAAL,KAA+BpS,SAApC,EAAgD;AAE/CoS,MAAAA,KAAK,CAAE,iBAAF,CAAL,GAA6B,IAAItX,oBAAJ,CAA0B;AACtD4H,QAAAA,KAAK,EAAE,QAD+C;AAEtD+G,QAAAA,QAAQ,EAAE,QAF4C;AAGtDb,QAAAA,SAAS,EAAE,CAH2C;AAItDD,QAAAA,SAAS,EAAE,CAJ2C;AAKtDuB,QAAAA,WAAW,EAAE,KALyC;AAMtDmI,QAAAA,SAAS,EAAE,IAN2C;AAOtDC,QAAAA,IAAI,EAAE7Y;AAPgD,OAA1B,CAA7B;AAUA;;AAED,WAAO2Y,KAAK,CAAE,iBAAF,CAAZ;AAEA;;AAED,WAASG,8BAAT,CAAyCC,eAAzC,EAA0DzQ,MAA1D,EAAkE0Q,SAAlE,EAA8E;AAE7E;AAEA,SAAM,IAAIvQ,IAAV,IAAkBuQ,SAAS,CAACpT,UAA5B,EAAyC;AAExC,UAAKmT,eAAe,CAAEtQ,IAAF,CAAf,KAA4BlC,SAAjC,EAA6C;AAE5C+B,QAAAA,MAAM,CAAC2Q,QAAP,CAAgBC,cAAhB,GAAiC5Q,MAAM,CAAC2Q,QAAP,CAAgBC,cAAhB,IAAkC,EAAnE;AACA5Q,QAAAA,MAAM,CAAC2Q,QAAP,CAAgBC,cAAhB,CAAgCzQ,IAAhC,IAAyCuQ,SAAS,CAACpT,UAAV,CAAsB6C,IAAtB,CAAzC;AAEA;AAED;AAED;AAED;;;;;;AAIA,WAAS0Q,sBAAT,CAAiC7Q,MAAjC,EAAyC8Q,OAAzC,EAAmD;AAElD,QAAKA,OAAO,CAACC,MAAR,KAAmB9S,SAAxB,EAAoC;AAEnC,UAAK,QAAO6S,OAAO,CAACC,MAAf,MAA0B,QAA/B,EAA0C;AAEzCxV,QAAAA,MAAM,CAACC,MAAP,CAAewE,MAAM,CAAC2Q,QAAtB,EAAgCG,OAAO,CAACC,MAAxC;AAEA,OAJD,MAIO;AAENxU,QAAAA,OAAO,CAACiD,IAAR,CAAc,wDAAwDsR,OAAO,CAACC,MAA9E;AAEA;AAED;AAED;AAED;;;;;;;;;;AAQA,WAASC,eAAT,CAA0B5L,QAA1B,EAAoC6L,OAApC,EAA6CxR,MAA7C,EAAsD;AAErD,QAAIyR,gBAAgB,GAAG,KAAvB;AACA,QAAIC,cAAc,GAAG,KAArB;;AAEA,SAAM,IAAI9S,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGsH,OAAO,CAAC3S,MAA9B,EAAsCD,CAAC,GAAGsL,EAA1C,EAA8CtL,CAAC,EAA/C,EAAqD;AAEpD,UAAI0C,MAAM,GAAGkQ,OAAO,CAAE5S,CAAF,CAApB;AAEA,UAAK0C,MAAM,CAACgO,QAAP,KAAoB9Q,SAAzB,EAAqCiT,gBAAgB,GAAG,IAAnB;AACrC,UAAKnQ,MAAM,CAACiO,MAAP,KAAkB/Q,SAAvB,EAAmCkT,cAAc,GAAG,IAAjB;AAEnC,UAAKD,gBAAgB,IAAIC,cAAzB,EAA0C;AAE1C;;AAED,QAAK,CAAED,gBAAF,IAAsB,CAAEC,cAA7B,EAA8C,OAAOvP,OAAO,CAACC,OAAR,CAAiBuD,QAAjB,CAAP;AAE9C,QAAIgM,wBAAwB,GAAG,EAA/B;AACA,QAAIC,sBAAsB,GAAG,EAA7B;;AAEA,SAAM,IAAIhT,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGsH,OAAO,CAAC3S,MAA9B,EAAsCD,CAAC,GAAGsL,EAA1C,EAA8CtL,CAAC,EAA/C,EAAqD;AAEpD,UAAI0C,MAAM,GAAGkQ,OAAO,CAAE5S,CAAF,CAApB;;AAEA,UAAK6S,gBAAL,EAAwB;AAEvB,YAAII,eAAe,GAAGvQ,MAAM,CAACgO,QAAP,KAAoB9Q,SAApB,GACnBwB,MAAM,CAACwF,aAAP,CAAsB,UAAtB,EAAkClE,MAAM,CAACgO,QAAzC,CADmB,GAEnB3J,QAAQ,CAAChB,UAAT,CAAoBpD,QAFvB;AAIAoQ,QAAAA,wBAAwB,CAACzO,IAAzB,CAA+B2O,eAA/B;AAEA;;AAED,UAAKH,cAAL,EAAsB;AAErB,YAAIG,eAAe,GAAGvQ,MAAM,CAACiO,MAAP,KAAkB/Q,SAAlB,GACnBwB,MAAM,CAACwF,aAAP,CAAsB,UAAtB,EAAkClE,MAAM,CAACiO,MAAzC,CADmB,GAEnB5J,QAAQ,CAAChB,UAAT,CAAoBmN,MAFvB;AAIAF,QAAAA,sBAAsB,CAAC1O,IAAvB,CAA6B2O,eAA7B;AAEA;AAED;;AAED,WAAO1P,OAAO,CAACiB,GAAR,CAAa,CACnBjB,OAAO,CAACiB,GAAR,CAAauO,wBAAb,CADmB,EAEnBxP,OAAO,CAACiB,GAAR,CAAawO,sBAAb,CAFmB,CAAb,EAGHnM,IAHG,CAGG,UAAWL,SAAX,EAAuB;AAEhC,UAAI2M,cAAc,GAAG3M,SAAS,CAAE,CAAF,CAA9B;AACA,UAAI4M,YAAY,GAAG5M,SAAS,CAAE,CAAF,CAA5B;AAEA,UAAKqM,gBAAL,EAAwB9L,QAAQ,CAACsM,eAAT,CAAyB1Q,QAAzB,GAAoCwQ,cAApC;AACxB,UAAKL,cAAL,EAAsB/L,QAAQ,CAACsM,eAAT,CAAyBH,MAAzB,GAAkCE,YAAlC;AACtBrM,MAAAA,QAAQ,CAACuM,oBAAT,GAAgC,IAAhC;AAEA,aAAOvM,QAAP;AAEA,KAdM,CAAP;AAgBA;AAED;;;;;;AAIA,WAASwM,kBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA6C;AAE5CD,IAAAA,IAAI,CAACD,kBAAL;;AAEA,QAAKE,OAAO,CAACrC,OAAR,KAAoBxR,SAAzB,EAAqC;AAEpC,WAAM,IAAII,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGmI,OAAO,CAACrC,OAAR,CAAgBnR,MAAtC,EAA8CD,CAAC,GAAGsL,EAAlD,EAAsDtL,CAAC,EAAvD,EAA6D;AAE5DwT,QAAAA,IAAI,CAACE,qBAAL,CAA4B1T,CAA5B,IAAkCyT,OAAO,CAACrC,OAAR,CAAiBpR,CAAjB,CAAlC;AAEA;AAED,KAZ2C,CAc5C;;;AACA,QAAKyT,OAAO,CAACf,MAAR,IAAkBzO,KAAK,CAACC,OAAN,CAAeuP,OAAO,CAACf,MAAR,CAAeiB,WAA9B,CAAvB,EAAqE;AAEpE,UAAIA,WAAW,GAAGF,OAAO,CAACf,MAAR,CAAeiB,WAAjC;;AAEA,UAAKH,IAAI,CAACE,qBAAL,CAA2BzT,MAA3B,KAAsC0T,WAAW,CAAC1T,MAAvD,EAAgE;AAE/DuT,QAAAA,IAAI,CAACI,qBAAL,GAA6B,EAA7B;;AAEA,aAAM,IAAI5T,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGqI,WAAW,CAAC1T,MAAlC,EAA0CD,CAAC,GAAGsL,EAA9C,EAAkDtL,CAAC,EAAnD,EAAyD;AAExDwT,UAAAA,IAAI,CAACI,qBAAL,CAA4BD,WAAW,CAAE3T,CAAF,CAAvC,IAAiDA,CAAjD;AAEA;AAED,OAVD,MAUO;AAEN9B,QAAAA,OAAO,CAACiD,IAAR,CAAc,sEAAd;AAEA;AAED;AAED;;AAED,WAAS0S,kBAAT,CAA6BC,YAA7B,EAA4C;AAE3C,QAAIC,cAAc,GAAGD,YAAY,CAAC7U,UAAb,IAA2B6U,YAAY,CAAC7U,UAAb,CAAyBK,UAAU,CAACoB,0BAApC,CAAhD;AACA,QAAIsT,WAAJ;;AAEA,QAAKD,cAAL,EAAsB;AAErBC,MAAAA,WAAW,GAAG,WAAWD,cAAc,CAAClO,UAA1B,GACX,GADW,GACLkO,cAAc,CAACE,OADV,GAEX,GAFW,GAELC,mBAAmB,CAAEH,cAAc,CAAChO,UAAjB,CAF5B;AAIA,KAND,MAMO;AAENiO,MAAAA,WAAW,GAAGF,YAAY,CAACG,OAAb,GAAuB,GAAvB,GAA6BC,mBAAmB,CAAEJ,YAAY,CAAC/N,UAAf,CAAhD,GAA8E,GAA9E,GAAoF+N,YAAY,CAACK,IAA/G;AAEA;;AAED,WAAOH,WAAP;AAEA;;AAED,WAASE,mBAAT,CAA8BnO,UAA9B,EAA2C;AAE1C,QAAIqO,aAAa,GAAG,EAApB;AAEA,QAAIC,IAAI,GAAGnX,MAAM,CAACmX,IAAP,CAAatO,UAAb,EAA0BuO,IAA1B,EAAX;;AAEA,SAAM,IAAItU,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG+I,IAAI,CAACpU,MAA3B,EAAmCD,CAAC,GAAGsL,EAAvC,EAA2CtL,CAAC,EAA5C,EAAkD;AAEjDoU,MAAAA,aAAa,IAAIC,IAAI,CAAErU,CAAF,CAAJ,GAAY,GAAZ,GAAkB+F,UAAU,CAAEsO,IAAI,CAAErU,CAAF,CAAN,CAA5B,GAA4C,GAA7D;AAEA;;AAED,WAAOoU,aAAP;AAEA;AAED;;;AAEA,WAAS/S,UAAT,CAAqB5B,IAArB,EAA2BR,UAA3B,EAAuCsV,OAAvC,EAAiD;AAEhD,SAAK9U,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,SAAKR,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACA,SAAKsV,OAAL,GAAeA,OAAO,IAAI,EAA1B,CAJgD,CAMhD;;AACA,SAAKvC,KAAL,GAAa,IAAI1Q,YAAJ,EAAb,CAPgD,CAShD;;AACA,SAAKkT,cAAL,GAAsB,EAAtB;AAEA,SAAKC,aAAL,GAAqB,IAAItY,aAAJ,CAAmB,KAAKoY,OAAL,CAAa1X,OAAhC,CAArB;AACA,SAAK4X,aAAL,CAAmBC,cAAnB,CAAmC,KAAKH,OAAL,CAAa9V,WAAhD;AAEA,SAAKkW,UAAL,GAAkB,IAAIvb,UAAJ,CAAgB,KAAKmb,OAAL,CAAa1X,OAA7B,CAAlB;AACA,SAAK8X,UAAL,CAAgBnW,eAAhB,CAAiC,aAAjC;;AAEA,QAAK,KAAK+V,OAAL,CAAa9V,WAAb,KAA6B,iBAAlC,EAAsD;AAErD,WAAKkW,UAAL,CAAgBjW,kBAAhB,CAAoC,IAApC;AAEA;AAED;;AAED2C,EAAAA,UAAU,CAACpE,SAAX,CAAqB2B,KAArB,GAA6B,UAAWpB,MAAX,EAAmBE,OAAnB,EAA6B;AAEzD,QAAI0D,MAAM,GAAG,IAAb;AACA,QAAI3B,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIR,UAAU,GAAG,KAAKA,UAAtB,CAJyD,CAMzD;;AACA,SAAK+S,KAAL,CAAWnQ,SAAX,GAPyD,CASzD;;AACA,SAAK+S,QAAL;AAEArR,IAAAA,OAAO,CAACiB,GAAR,CAAa,CAEZ,KAAKqQ,eAAL,CAAsB,OAAtB,CAFY,EAGZ,KAAKA,eAAL,CAAsB,WAAtB,CAHY,EAIZ,KAAKA,eAAL,CAAsB,QAAtB,CAJY,CAAb,EAMIhO,IANJ,CAMU,UAAWiO,YAAX,EAA0B;AAEnC,UAAI1H,MAAM,GAAG;AACZ1B,QAAAA,KAAK,EAAEoJ,YAAY,CAAE,CAAF,CAAZ,CAAmBrV,IAAI,CAACiM,KAAL,IAAc,CAAjC,CADK;AAEZqJ,QAAAA,MAAM,EAAED,YAAY,CAAE,CAAF,CAFR;AAGZE,QAAAA,UAAU,EAAEF,YAAY,CAAE,CAAF,CAHZ;AAIZG,QAAAA,OAAO,EAAEH,YAAY,CAAE,CAAF,CAJT;AAKZnV,QAAAA,KAAK,EAAEF,IAAI,CAACE,KALA;AAMZyB,QAAAA,MAAM,EAAEA,MANI;AAOZkR,QAAAA,QAAQ,EAAE;AAPE,OAAb;AAUAH,MAAAA,8BAA8B,CAAElT,UAAF,EAAcmO,MAAd,EAAsB3N,IAAtB,CAA9B;AAEA+S,MAAAA,sBAAsB,CAAEpF,MAAF,EAAU3N,IAAV,CAAtB;AAEAjC,MAAAA,MAAM,CAAE4P,MAAF,CAAN;AAEA,KAxBD,EAwBI8H,KAxBJ,CAwBWxX,OAxBX;AA0BA,GAtCD;AAwCA;;;;;AAGA2D,EAAAA,UAAU,CAACpE,SAAX,CAAqB2X,QAArB,GAAgC,YAAY;AAE3C,QAAIO,QAAQ,GAAG,KAAK1V,IAAL,CAAU2V,KAAV,IAAmB,EAAlC;AACA,QAAIC,QAAQ,GAAG,KAAK5V,IAAL,CAAU6V,KAAV,IAAmB,EAAlC;AACA,QAAIC,QAAQ,GAAG,KAAK9V,IAAL,CAAU+V,MAAV,IAAoB,EAAnC;AAEA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,QAAQ,GAAG,EAAf,CAP2C,CAS3C;AACA;;AACA,SAAM,IAAIC,SAAS,GAAG,CAAhB,EAAmBC,UAAU,GAAGP,QAAQ,CAACpV,MAA/C,EAAuD0V,SAAS,GAAGC,UAAnE,EAA+ED,SAAS,EAAxF,EAA8F;AAE7F,UAAIE,MAAM,GAAGR,QAAQ,CAAEM,SAAF,CAAR,CAAsBE,MAAnC;;AAEA,WAAM,IAAI7V,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGuK,MAAM,CAAC5V,MAA7B,EAAqCD,CAAC,GAAGsL,EAAzC,EAA6CtL,CAAC,EAA9C,EAAoD;AAEnDmV,QAAAA,QAAQ,CAAEU,MAAM,CAAE7V,CAAF,CAAR,CAAR,CAAwB8V,MAAxB,GAAiC,IAAjC;AAEA;AAED,KArB0C,CAuB3C;AACA;AACA;AACA;AACA;;;AACA,SAAM,IAAIC,SAAS,GAAG,CAAhB,EAAmBC,UAAU,GAAGb,QAAQ,CAAClV,MAA/C,EAAuD8V,SAAS,GAAGC,UAAnE,EAA+ED,SAAS,EAAxF,EAA8F;AAE7F,UAAIE,OAAO,GAAGd,QAAQ,CAAEY,SAAF,CAAtB;;AAEA,UAAKE,OAAO,CAACzC,IAAR,KAAiB5T,SAAtB,EAAkC;AAEjC,YAAK6V,cAAc,CAAEQ,OAAO,CAACzC,IAAV,CAAd,KAAmC5T,SAAxC,EAAoD;AAEnD6V,UAAAA,cAAc,CAAEQ,OAAO,CAACzC,IAAV,CAAd,GAAiCkC,QAAQ,CAAEO,OAAO,CAACzC,IAAV,CAAR,GAA2B,CAA5D;AAEA;;AAEDiC,QAAAA,cAAc,CAAEQ,OAAO,CAACzC,IAAV,CAAd,GARiC,CAUjC;AACA;AACA;;AACA,YAAKyC,OAAO,CAACC,IAAR,KAAiBtW,SAAtB,EAAkC;AAEjC2V,UAAAA,QAAQ,CAAEU,OAAO,CAACzC,IAAV,CAAR,CAAyB2C,aAAzB,GAAyC,IAAzC;AAEA;AAED;AAED;;AAED,SAAK1W,IAAL,CAAUgW,cAAV,GAA2BA,cAA3B;AACA,SAAKhW,IAAL,CAAUiW,QAAV,GAAqBA,QAArB;AAEA,GA1DD;AA4DA;;;;;;;;AAMArU,EAAAA,UAAU,CAACpE,SAAX,CAAqB2J,aAArB,GAAqC,UAAWnE,IAAX,EAAiB0K,KAAjB,EAAyB;AAE7D,QAAIiJ,QAAQ,GAAG3T,IAAI,GAAG,GAAP,GAAa0K,KAA5B;AACA,QAAIkJ,UAAU,GAAG,KAAKrE,KAAL,CAAWxQ,GAAX,CAAgB4U,QAAhB,CAAjB;;AAEA,QAAK,CAAEC,UAAP,EAAoB;AAEnB,cAAS5T,IAAT;AAEC,aAAK,OAAL;AACC4T,UAAAA,UAAU,GAAG,KAAKC,SAAL,CAAgBnJ,KAAhB,CAAb;AACA;;AAED,aAAK,MAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKE,QAAL,CAAepJ,KAAf,CAAb;AACA;;AAED,aAAK,MAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKG,QAAL,CAAerJ,KAAf,CAAb;AACA;;AAED,aAAK,UAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKI,YAAL,CAAmBtJ,KAAnB,CAAb;AACA;;AAED,aAAK,YAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKK,cAAL,CAAqBvJ,KAArB,CAAb;AACA;;AAED,aAAK,QAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKM,UAAL,CAAiBxJ,KAAjB,CAAb;AACA;;AAED,aAAK,UAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKO,YAAL,CAAmBzJ,KAAnB,CAAb;AACA;;AAED,aAAK,SAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKQ,WAAL,CAAkB1J,KAAlB,CAAb;AACA;;AAED,aAAK,MAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKS,QAAL,CAAe3J,KAAf,CAAb;AACA;;AAED,aAAK,WAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKU,aAAL,CAAoB5J,KAApB,CAAb;AACA;;AAED,aAAK,QAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKW,UAAL,CAAiB7J,KAAjB,CAAb;AACA;;AAED,aAAK,OAAL;AACCkJ,UAAAA,UAAU,GAAG,KAAKpX,UAAL,CAAiBK,UAAU,CAACc,mBAA5B,EAAkD8B,SAAlD,CAA6DiL,KAA7D,CAAb;AACA;;AAED;AACC,gBAAM,IAAIrN,KAAJ,CAAW,mBAAmB2C,IAA9B,CAAN;AAnDF;;AAuDA,WAAKuP,KAAL,CAAWtQ,GAAX,CAAgB0U,QAAhB,EAA0BC,UAA1B;AAEA;;AAED,WAAOA,UAAP;AAEA,GApED;AAsEA;;;;;;;AAKAhV,EAAAA,UAAU,CAACpE,SAAX,CAAqB4X,eAArB,GAAuC,UAAWpS,IAAX,EAAkB;AAExD,QAAIqS,YAAY,GAAG,KAAK9C,KAAL,CAAWxQ,GAAX,CAAgBiB,IAAhB,CAAnB;;AAEA,QAAK,CAAEqS,YAAP,EAAsB;AAErB,UAAI1T,MAAM,GAAG,IAAb;AACA,UAAI6V,IAAI,GAAG,KAAKxX,IAAL,CAAWgD,IAAI,IAAKA,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,GAA9B,CAAf,KAAwD,EAAnE;AAEAqS,MAAAA,YAAY,GAAGvR,OAAO,CAACiB,GAAR,CAAayS,IAAI,CAACjN,GAAL,CAAU,UAAWkN,GAAX,EAAgB/J,KAAhB,EAAwB;AAE7D,eAAO/L,MAAM,CAACwF,aAAP,CAAsBnE,IAAtB,EAA4B0K,KAA5B,CAAP;AAEA,OAJ2B,CAAb,CAAf;AAMA,WAAK6E,KAAL,CAAWtQ,GAAX,CAAgBe,IAAhB,EAAsBqS,YAAtB;AAEA;;AAED,WAAOA,YAAP;AAEA,GArBD;AAuBA;;;;;;;AAKAzT,EAAAA,UAAU,CAACpE,SAAX,CAAqB0Z,UAArB,GAAkC,UAAWQ,WAAX,EAAyB;AAE1D,QAAIC,SAAS,GAAG,KAAK3X,IAAL,CAAU4X,OAAV,CAAmBF,WAAnB,CAAhB;AACA,QAAI7Y,MAAM,GAAG,KAAKqW,UAAlB;;AAEA,QAAKyC,SAAS,CAAC3U,IAAV,IAAkB2U,SAAS,CAAC3U,IAAV,KAAmB,aAA1C,EAA0D;AAEzD,YAAM,IAAI3C,KAAJ,CAAW,uBAAuBsX,SAAS,CAAC3U,IAAjC,GAAwC,gCAAnD,CAAN;AAEA,KATyD,CAW1D;;;AACA,QAAK2U,SAAS,CAACE,GAAV,KAAkB1X,SAAlB,IAA+BuX,WAAW,KAAK,CAApD,EAAwD;AAEvD,aAAO5T,OAAO,CAACC,OAAR,CAAiB,KAAKvE,UAAL,CAAiBK,UAAU,CAACC,eAA5B,EAA8CqF,IAA/D,CAAP;AAEA;;AAED,QAAI2P,OAAO,GAAG,KAAKA,OAAnB;AAEA,WAAO,IAAIhR,OAAJ,CAAa,UAAWC,OAAX,EAAoB+T,MAApB,EAA6B;AAEhDjZ,MAAAA,MAAM,CAAChB,IAAP,CAAauU,UAAU,CAAEuF,SAAS,CAACE,GAAZ,EAAiB/C,OAAO,CAAC1W,IAAzB,CAAvB,EAAwD2F,OAAxD,EAAiE5D,SAAjE,EAA4E,YAAY;AAEvF2X,QAAAA,MAAM,CAAE,IAAIzX,KAAJ,CAAW,8CAA8CsX,SAAS,CAACE,GAAxD,GAA8D,IAAzE,CAAF,CAAN;AAEA,OAJD;AAMA,KARM,CAAP;AAUA,GA9BD;AAgCA;;;;;;;AAKAjW,EAAAA,UAAU,CAACpE,SAAX,CAAqByZ,cAArB,GAAsC,UAAW9Q,eAAX,EAA6B;AAElE,QAAI4R,aAAa,GAAG,KAAK/X,IAAL,CAAUgY,WAAV,CAAuB7R,eAAvB,CAApB;AAEA,WAAO,KAAKgB,aAAL,CAAoB,QAApB,EAA8B4Q,aAAa,CAACE,MAA5C,EAAqD7Q,IAArD,CAA2D,UAAW6Q,MAAX,EAAoB;AAErF,UAAItS,UAAU,GAAGoS,aAAa,CAACpS,UAAd,IAA4B,CAA7C;AACA,UAAII,UAAU,GAAGgS,aAAa,CAAChS,UAAd,IAA4B,CAA7C;AACA,aAAOkS,MAAM,CAAC1S,KAAP,CAAcQ,UAAd,EAA0BA,UAAU,GAAGJ,UAAvC,CAAP;AAEA,KANM,CAAP;AAQA,GAZD;AAcA;;;;;;;AAKA/D,EAAAA,UAAU,CAACpE,SAAX,CAAqBwZ,YAArB,GAAoC,UAAWkB,aAAX,EAA2B;AAE9D,QAAIvW,MAAM,GAAG,IAAb;AACA,QAAI3B,IAAI,GAAG,KAAKA,IAAhB;AAEA,QAAI8G,WAAW,GAAG,KAAK9G,IAAL,CAAU+G,SAAV,CAAqBmR,aAArB,CAAlB;;AAEA,QAAKpR,WAAW,CAACV,UAAZ,KAA2BjG,SAA3B,IAAwC2G,WAAW,CAACqR,MAAZ,KAAuBhY,SAApE,EAAgF;AAE/E;AACA;AACA;AACA,aAAO2D,OAAO,CAACC,OAAR,CAAiB,IAAjB,CAAP;AAEA;;AAED,QAAIqU,kBAAkB,GAAG,EAAzB;;AAEA,QAAKtR,WAAW,CAACV,UAAZ,KAA2BjG,SAAhC,EAA4C;AAE3CiY,MAAAA,kBAAkB,CAACvT,IAAnB,CAAyB,KAAKsC,aAAL,CAAoB,YAApB,EAAkCL,WAAW,CAACV,UAA9C,CAAzB;AAEA,KAJD,MAIO;AAENgS,MAAAA,kBAAkB,CAACvT,IAAnB,CAAyB,IAAzB;AAEA;;AAED,QAAKiC,WAAW,CAACqR,MAAZ,KAAuBhY,SAA5B,EAAwC;AAEvCiY,MAAAA,kBAAkB,CAACvT,IAAnB,CAAyB,KAAKsC,aAAL,CAAoB,YAApB,EAAkCL,WAAW,CAACqR,MAAZ,CAAmB3D,OAAnB,CAA2BpO,UAA7D,CAAzB;AACAgS,MAAAA,kBAAkB,CAACvT,IAAnB,CAAyB,KAAKsC,aAAL,CAAoB,YAApB,EAAkCL,WAAW,CAACqR,MAAZ,CAAmBvK,MAAnB,CAA0BxH,UAA5D,CAAzB;AAEA;;AAED,WAAOtC,OAAO,CAACiB,GAAR,CAAaqT,kBAAb,EAAkChR,IAAlC,CAAwC,UAAW4Q,WAAX,EAAyB;AAEvE,UAAI5R,UAAU,GAAG4R,WAAW,CAAE,CAAF,CAA5B;AAEA,UAAIK,QAAQ,GAAGrH,gBAAgB,CAAElK,WAAW,CAAC9D,IAAd,CAA/B;AACA,UAAIsV,UAAU,GAAGrR,qBAAqB,CAAEH,WAAW,CAACE,aAAd,CAAtC,CALuE,CAOvE;;AACA,UAAIuR,YAAY,GAAGD,UAAU,CAACE,iBAA9B;AACA,UAAIC,SAAS,GAAGF,YAAY,GAAGF,QAA/B;AACA,UAAItS,UAAU,GAAGe,WAAW,CAACf,UAAZ,IAA0B,CAA3C;AACA,UAAI2S,UAAU,GAAG5R,WAAW,CAACV,UAAZ,KAA2BjG,SAA3B,GAAuCH,IAAI,CAACgY,WAAL,CAAkBlR,WAAW,CAACV,UAA9B,EAA2CsS,UAAlF,GAA+FvY,SAAhH;AACA,UAAI+G,UAAU,GAAGJ,WAAW,CAACI,UAAZ,KAA2B,IAA5C;AACA,UAAIvC,KAAJ,EAAWgU,eAAX,CAbuE,CAevE;;AACA,UAAKD,UAAU,IAAIA,UAAU,KAAKD,SAAlC,EAA8C;AAE7C;AACA;AACA,YAAIG,OAAO,GAAGpV,IAAI,CAACqV,KAAL,CAAY9S,UAAU,GAAG2S,UAAzB,CAAd;AACA,YAAII,UAAU,GAAG,uBAAuBhS,WAAW,CAACV,UAAnC,GAAgD,GAAhD,GAAsDU,WAAW,CAACE,aAAlE,GAAkF,GAAlF,GAAwF4R,OAAxF,GAAkG,GAAlG,GAAwG9R,WAAW,CAACiS,KAArI;AACA,YAAIC,EAAE,GAAGrX,MAAM,CAAC4Q,KAAP,CAAaxQ,GAAb,CAAkB+W,UAAlB,CAAT;;AAEA,YAAK,CAAEE,EAAP,EAAY;AAEXrU,UAAAA,KAAK,GAAG,IAAI2T,UAAJ,CAAgBlS,UAAhB,EAA4BwS,OAAO,GAAGF,UAAtC,EAAkD5R,WAAW,CAACiS,KAAZ,GAAoBL,UAApB,GAAiCH,YAAnF,CAAR,CAFW,CAIX;;AACAS,UAAAA,EAAE,GAAG,IAAIlf,iBAAJ,CAAuB6K,KAAvB,EAA8B+T,UAAU,GAAGH,YAA3C,CAAL;AAEA5W,UAAAA,MAAM,CAAC4Q,KAAP,CAAatQ,GAAb,CAAkB6W,UAAlB,EAA8BE,EAA9B;AAEA;;AAEDL,QAAAA,eAAe,GAAG,IAAI5e,0BAAJ,CAAgCif,EAAhC,EAAoCX,QAApC,EAAgDtS,UAAU,GAAG2S,UAAf,GAA8BH,YAA5E,EAA0FrR,UAA1F,CAAlB;AAEA,OArBD,MAqBO;AAEN,YAAKd,UAAU,KAAK,IAApB,EAA2B;AAE1BzB,UAAAA,KAAK,GAAG,IAAI2T,UAAJ,CAAgBxR,WAAW,CAACiS,KAAZ,GAAoBV,QAApC,CAAR;AAEA,SAJD,MAIO;AAEN1T,UAAAA,KAAK,GAAG,IAAI2T,UAAJ,CAAgBlS,UAAhB,EAA4BL,UAA5B,EAAwCe,WAAW,CAACiS,KAAZ,GAAoBV,QAA5D,CAAR;AAEA;;AAEDM,QAAAA,eAAe,GAAG,IAAItf,eAAJ,CAAqBsL,KAArB,EAA4B0T,QAA5B,EAAsCnR,UAAtC,CAAlB;AAEA,OAnDsE,CAqDvE;;;AACA,UAAKJ,WAAW,CAACqR,MAAZ,KAAuBhY,SAA5B,EAAwC;AAEvC,YAAI8Y,eAAe,GAAGjI,gBAAgB,CAACkI,MAAvC;AACA,YAAIC,iBAAiB,GAAGlS,qBAAqB,CAAEH,WAAW,CAACqR,MAAZ,CAAmB3D,OAAnB,CAA2BxN,aAA7B,CAA7C;AAEA,YAAIoS,iBAAiB,GAAGtS,WAAW,CAACqR,MAAZ,CAAmB3D,OAAnB,CAA2BzO,UAA3B,IAAyC,CAAjE;AACA,YAAIsT,gBAAgB,GAAGvS,WAAW,CAACqR,MAAZ,CAAmBvK,MAAnB,CAA0B7H,UAA1B,IAAwC,CAA/D;AAEA,YAAIuT,aAAa,GAAG,IAAIH,iBAAJ,CAAuBnB,WAAW,CAAE,CAAF,CAAlC,EAAyCoB,iBAAzC,EAA4DtS,WAAW,CAACqR,MAAZ,CAAmBY,KAAnB,GAA2BE,eAAvF,CAApB;AACA,YAAIM,YAAY,GAAG,IAAIjB,UAAJ,CAAgBN,WAAW,CAAE,CAAF,CAA3B,EAAkCqB,gBAAlC,EAAoDvS,WAAW,CAACqR,MAAZ,CAAmBY,KAAnB,GAA2BV,QAA/E,CAAnB;;AAEA,YAAKjS,UAAU,KAAK,IAApB,EAA2B;AAE1B;AACAuS,UAAAA,eAAe,GAAG,IAAItf,eAAJ,CAAqBsf,eAAe,CAAChU,KAAhB,CAAsBY,KAAtB,EAArB,EAAoDoT,eAAe,CAACN,QAApE,EAA8EM,eAAe,CAACzR,UAA9F,CAAlB;AAEA;;AAED,aAAM,IAAI3G,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGyN,aAAa,CAAC9Y,MAApC,EAA4CD,CAAC,GAAGsL,EAAhD,EAAoDtL,CAAC,EAArD,EAA2D;AAE1D,cAAImN,KAAK,GAAG4L,aAAa,CAAE/Y,CAAF,CAAzB;AAEAoY,UAAAA,eAAe,CAACa,IAAhB,CAAsB9L,KAAtB,EAA6B6L,YAAY,CAAEhZ,CAAC,GAAG8X,QAAN,CAAzC;AACA,cAAKA,QAAQ,IAAI,CAAjB,EAAqBM,eAAe,CAACc,IAAhB,CAAsB/L,KAAtB,EAA6B6L,YAAY,CAAEhZ,CAAC,GAAG8X,QAAJ,GAAe,CAAjB,CAAzC;AACrB,cAAKA,QAAQ,IAAI,CAAjB,EAAqBM,eAAe,CAACe,IAAhB,CAAsBhM,KAAtB,EAA6B6L,YAAY,CAAEhZ,CAAC,GAAG8X,QAAJ,GAAe,CAAjB,CAAzC;AACrB,cAAKA,QAAQ,IAAI,CAAjB,EAAqBM,eAAe,CAACgB,IAAhB,CAAsBjM,KAAtB,EAA6B6L,YAAY,CAAEhZ,CAAC,GAAG8X,QAAJ,GAAe,CAAjB,CAAzC;AACrB,cAAKA,QAAQ,IAAI,CAAjB,EAAqB,MAAM,IAAIhY,KAAJ,CAAW,mEAAX,CAAN;AAErB;AAED;;AAED,aAAOsY,eAAP;AAEA,KAxFM,CAAP;AA0FA,GA7HD;AA+HA;;;;;;;AAKA/W,EAAAA,UAAU,CAACpE,SAAX,CAAqB4Z,WAArB,GAAmC,UAAWwC,YAAX,EAA0B;AAE5D,QAAIjY,MAAM,GAAG,IAAb;AACA,QAAI3B,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAI8U,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIE,aAAa,GAAG,KAAKA,aAAzB;AAEA,QAAI6E,GAAG,GAAGC,MAAM,CAACD,GAAP,IAAcC,MAAM,CAACC,SAA/B;AAEA,QAAIC,UAAU,GAAGha,IAAI,CAACia,QAAL,CAAeL,YAAf,CAAjB;AAEA,QAAIM,iBAAiB,GAAGF,UAAU,CAACxa,UAAX,IAAyB,EAAjD;AAEA,QAAIoM,MAAJ;;AAEA,QAAKsO,iBAAiB,CAAEra,UAAU,CAACsB,gBAAb,CAAtB,EAAwD;AAEvDyK,MAAAA,MAAM,GAAG5L,IAAI,CAACma,MAAL,CAAaD,iBAAiB,CAAEra,UAAU,CAACsB,gBAAb,CAAjB,CAAiDyK,MAA9D,CAAT;AAEA,KAJD,MAIO;AAENA,MAAAA,MAAM,GAAG5L,IAAI,CAACma,MAAL,CAAaH,UAAU,CAACpO,MAAxB,CAAT;AAEA;;AAED,QAAIwO,SAAS,GAAGxO,MAAM,CAACiM,GAAvB;AACA,QAAIwC,WAAW,GAAG,KAAlB;;AAEA,QAAKzO,MAAM,CAACxF,UAAP,KAAsBjG,SAA3B,EAAuC;AAEtC;AAEAia,MAAAA,SAAS,GAAGzY,MAAM,CAACwF,aAAP,CAAsB,YAAtB,EAAoCyE,MAAM,CAACxF,UAA3C,EAAwDgB,IAAxD,CAA8D,UAAWhB,UAAX,EAAwB;AAEjGiU,QAAAA,WAAW,GAAG,IAAd;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAU,CAAEnU,UAAF,CAAV,EAA0B;AAAEpD,UAAAA,IAAI,EAAE4I,MAAM,CAAC4O;AAAf,SAA1B,CAAX;AACAJ,QAAAA,SAAS,GAAGP,GAAG,CAACY,eAAJ,CAAqBH,IAArB,CAAZ;AACA,eAAOF,SAAP;AAEA,OAPW,CAAZ;AASA;;AAED,WAAOtW,OAAO,CAACC,OAAR,CAAiBqW,SAAjB,EAA6BhT,IAA7B,CAAmC,UAAWgT,SAAX,EAAuB;AAEhE;AAEA,UAAIvb,MAAM,GAAGiW,OAAO,CAAC1X,OAAR,CAAgBsd,UAAhB,CAA4BN,SAA5B,CAAb;;AAEA,UAAK,CAAEvb,MAAP,EAAgB;AAEfA,QAAAA,MAAM,GAAGqb,iBAAiB,CAAEra,UAAU,CAACsB,gBAAb,CAAjB,GACNQ,MAAM,CAACnC,UAAP,CAAmBK,UAAU,CAACsB,gBAA9B,EAAiD5D,SAD3C,GAENyX,aAFH;AAIA;;AAED,aAAO,IAAIlR,OAAJ,CAAa,UAAWC,OAAX,EAAoB+T,MAApB,EAA6B;AAEhDjZ,QAAAA,MAAM,CAAChB,IAAP,CAAauU,UAAU,CAAEgI,SAAF,EAAatF,OAAO,CAAC1W,IAArB,CAAvB,EAAoD2F,OAApD,EAA6D5D,SAA7D,EAAwE2X,MAAxE;AAEA,OAJM,CAAP;AAMA,KApBM,EAoBH1Q,IApBG,CAoBG,UAAWK,OAAX,EAAqB;AAE9B;AAEA,UAAK4S,WAAW,KAAK,IAArB,EAA4B;AAE3BR,QAAAA,GAAG,CAACc,eAAJ,CAAqBP,SAArB;AAEA;;AAED3S,MAAAA,OAAO,CAACmT,KAAR,GAAgB,KAAhB;AAEA,UAAKZ,UAAU,CAAC3X,IAAX,KAAoBlC,SAAzB,EAAqCsH,OAAO,CAACpF,IAAR,GAAe2X,UAAU,CAAC3X,IAA1B,CAZP,CAc9B;;AACA,UAAKuJ,MAAM,CAAC4O,QAAP,IAAmBrI,iBAAxB,EAA4C;AAE3C1K,QAAAA,OAAO,CAACoT,MAAR,GAAiB1I,iBAAiB,CAAEvG,MAAM,CAAC4O,QAAT,CAAlC;AAEA;;AAED,UAAIM,QAAQ,GAAG9a,IAAI,CAAC8a,QAAL,IAAiB,EAAhC;AACA,UAAIC,OAAO,GAAGD,QAAQ,CAAEd,UAAU,CAACe,OAAb,CAAR,IAAkC,EAAhD;AAEAtT,MAAAA,OAAO,CAACuT,SAAR,GAAoBlK,aAAa,CAAEiK,OAAO,CAACC,SAAV,CAAb,IAAsCzgB,YAA1D;AACAkN,MAAAA,OAAO,CAACwT,SAAR,GAAoBnK,aAAa,CAAEiK,OAAO,CAACE,SAAV,CAAb,IAAsCzgB,wBAA1D;AACAiN,MAAAA,OAAO,CAACyT,KAAR,GAAgBnK,eAAe,CAAEgK,OAAO,CAACG,KAAV,CAAf,IAAoCjf,cAApD;AACAwL,MAAAA,OAAO,CAAC0T,KAAR,GAAgBpK,eAAe,CAAEgK,OAAO,CAACI,KAAV,CAAf,IAAoClf,cAApD;AAEA,aAAOwL,OAAP;AAEA,KAnDM,CAAP;AAqDA,GAhGD;AAkGA;;;;;;;;;AAOA7F,EAAAA,UAAU,CAACpE,SAAX,CAAqBsH,aAArB,GAAqC,UAAWZ,cAAX,EAA2BkX,OAA3B,EAAoCC,MAApC,EAA6C;AAEjF,QAAI1Z,MAAM,GAAG,IAAb;AAEA,WAAO,KAAKwF,aAAL,CAAoB,SAApB,EAA+BkU,MAAM,CAAC3N,KAAtC,EAA8CtG,IAA9C,CAAoD,UAAWK,OAAX,EAAqB;AAE/E,UAAK,CAAEA,OAAO,CAAC6T,mBAAf,EAAqC;AAEpC,gBAASF,OAAT;AAEC,eAAK,OAAL;AACA,eAAK,aAAL;AACA,eAAK,cAAL;AACA,eAAK,WAAL;AACA,eAAK,cAAL;AACC3T,YAAAA,OAAO,CAACoT,MAAR,GAAiB7e,SAAjB;AACA;AARF;AAYA,OAhB8E,CAkB/E;AACA;;;AACA,UAAKqf,MAAM,CAACrT,QAAP,KAAoB7H,SAApB,IAAiCkb,MAAM,CAACrT,QAAP,IAAmB,CAApD,IAAyD,EAAIoT,OAAO,KAAK,OAAZ,IAAuBC,MAAM,CAACrT,QAAP,IAAmB,CAA9C,CAA9D,EAAkH;AAEjHvJ,QAAAA,OAAO,CAACiD,IAAR,CAAc,qCAAqC2Z,MAAM,CAACrT,QAA5C,GAAuD,eAAvD,GAAyEoT,OAAzE,GAAmF,qBAAjG;AAEA;;AAED,UAAKzZ,MAAM,CAACnC,UAAP,CAAmBK,UAAU,CAACwB,qBAA9B,CAAL,EAA6D;AAE5D,YAAIqG,SAAS,GAAG2T,MAAM,CAAC7b,UAAP,KAAsBW,SAAtB,GAAkCkb,MAAM,CAAC7b,UAAP,CAAmBK,UAAU,CAACwB,qBAA9B,CAAlC,GAA0FlB,SAA1G;;AAEA,YAAKuH,SAAL,EAAiB;AAEhBD,UAAAA,OAAO,GAAG9F,MAAM,CAACnC,UAAP,CAAmBK,UAAU,CAACwB,qBAA9B,EAAsDmG,aAAtD,CAAqEC,OAArE,EAA8EC,SAA9E,CAAV;AAEA;AAED;;AAEDxD,MAAAA,cAAc,CAAEkX,OAAF,CAAd,GAA4B3T,OAA5B;AAEA,KAxCM,CAAP;AA0CA,GA9CD;AAgDA;;;;;;;;;;AAQA7F,EAAAA,UAAU,CAACpE,SAAX,CAAqB+d,mBAArB,GAA2C,UAAWxH,IAAX,EAAkB;AAE5D,QAAIzM,QAAQ,GAAGyM,IAAI,CAACzM,QAApB;AACA,QAAI6C,QAAQ,GAAG4J,IAAI,CAAC5J,QAApB;AACA,QAAI3K,UAAU,GAAG,KAAKA,UAAtB;AAEA,QAAIgc,iBAAiB,GAAGlU,QAAQ,CAAChB,UAAT,CAAoBmV,OAApB,KAAgCtb,SAAxD;AACA,QAAIub,eAAe,GAAGpU,QAAQ,CAAChB,UAAT,CAAoBzD,KAApB,KAA8B1C,SAApD;AACA,QAAIwb,cAAc,GAAGrU,QAAQ,CAAChB,UAAT,CAAoBmN,MAApB,KAA+BtT,SAApD;AACA,QAAIyb,WAAW,GAAG7H,IAAI,CAAC2C,aAAL,KAAuB,IAAzC;AACA,QAAImF,eAAe,GAAGpe,MAAM,CAACmX,IAAP,CAAatN,QAAQ,CAACsM,eAAtB,EAAwCpT,MAAxC,GAAiD,CAAvE;AACA,QAAIsb,eAAe,GAAGD,eAAe,IAAIvU,QAAQ,CAACsM,eAAT,CAAyBH,MAAzB,KAAoCtT,SAA7E;;AAEA,QAAK4T,IAAI,CAACgI,QAAV,EAAqB;AAEpB,UAAIpF,QAAQ,GAAG,oBAAoBxM,QAAQ,CAAC6R,IAA5C;AAEA,UAAIC,cAAc,GAAG,KAAK1J,KAAL,CAAWxQ,GAAX,CAAgB4U,QAAhB,CAArB;;AAEA,UAAK,CAAEsF,cAAP,EAAwB;AAEvBA,QAAAA,cAAc,GAAG,IAAIrgB,cAAJ,EAAjB;AACAhB,QAAAA,QAAQ,CAAC4C,SAAT,CAAmB4O,IAAnB,CAAwB/O,IAAxB,CAA8B4e,cAA9B,EAA8C9R,QAA9C;AACA8R,QAAAA,cAAc,CAACpZ,KAAf,CAAqBuJ,IAArB,CAA2BjC,QAAQ,CAACtH,KAApC;AACAoZ,QAAAA,cAAc,CAAC1R,GAAf,GAAqBJ,QAAQ,CAACI,GAA9B;AACA0R,QAAAA,cAAc,CAACC,eAAf,GAAiC,KAAjC,CANuB,CAMiB;;AAExC,aAAK3J,KAAL,CAAWtQ,GAAX,CAAgB0U,QAAhB,EAA0BsF,cAA1B;AAEA;;AAED9R,MAAAA,QAAQ,GAAG8R,cAAX;AAEA,KApBD,MAoBO,IAAKlI,IAAI,CAACoI,MAAV,EAAmB;AAEzB,UAAIxF,QAAQ,GAAG,uBAAuBxM,QAAQ,CAAC6R,IAA/C;AAEA,UAAII,YAAY,GAAG,KAAK7J,KAAL,CAAWxQ,GAAX,CAAgB4U,QAAhB,CAAnB;;AAEA,UAAK,CAAEyF,YAAP,EAAsB;AAErBA,QAAAA,YAAY,GAAG,IAAIhiB,iBAAJ,EAAf;AACAQ,QAAAA,QAAQ,CAAC4C,SAAT,CAAmB4O,IAAnB,CAAwB/O,IAAxB,CAA8B+e,YAA9B,EAA4CjS,QAA5C;AACAiS,QAAAA,YAAY,CAACvZ,KAAb,CAAmBuJ,IAAnB,CAAyBjC,QAAQ,CAACtH,KAAlC;AAEA,aAAK0P,KAAL,CAAWtQ,GAAX,CAAgB0U,QAAhB,EAA0ByF,YAA1B;AAEA;;AAEDjS,MAAAA,QAAQ,GAAGiS,YAAX;AAEA,KAnD2D,CAqD5D;;;AACA,QAAKZ,iBAAiB,IAAIE,eAArB,IAAwCC,cAAxC,IAA0DC,WAA1D,IAAyEC,eAA9E,EAAgG;AAE/F,UAAIlF,QAAQ,GAAG,oBAAoBxM,QAAQ,CAAC6R,IAA7B,GAAoC,GAAnD;AAEA,UAAK7R,QAAQ,CAACG,gCAAd,EAAiDqM,QAAQ,IAAI,sBAAZ;AACjD,UAAKiF,WAAL,EAAmBjF,QAAQ,IAAI,WAAZ;AACnB,UAAK6E,iBAAL,EAAyB7E,QAAQ,IAAI,kBAAZ;AACzB,UAAK+E,eAAL,EAAuB/E,QAAQ,IAAI,gBAAZ;AACvB,UAAKgF,cAAL,EAAsBhF,QAAQ,IAAI,eAAZ;AACtB,UAAKkF,eAAL,EAAuBlF,QAAQ,IAAI,gBAAZ;AACvB,UAAKmF,eAAL,EAAuBnF,QAAQ,IAAI,gBAAZ;AAEvB,UAAI0F,cAAc,GAAG,KAAK9J,KAAL,CAAWxQ,GAAX,CAAgB4U,QAAhB,CAArB;;AAEA,UAAK,CAAE0F,cAAP,EAAwB;AAEvBA,QAAAA,cAAc,GAAGlS,QAAQ,CAACG,gCAAT,GACd9K,UAAU,CAAEK,UAAU,CAACkB,qCAAb,CAAV,CAA+D4K,aAA/D,CAA8ExB,QAA9E,CADc,GAEdA,QAAQ,CAACxC,KAAT,EAFH;AAIA,YAAKiU,WAAL,EAAmBS,cAAc,CAACC,QAAf,GAA0B,IAA1B;AACnB,YAAKd,iBAAL,EAAyBa,cAAc,CAACE,cAAf,GAAgC,IAAhC;AACzB,YAAKb,eAAL,EAAuBW,cAAc,CAACG,YAAf,GAA8Bvf,YAA9B;AACvB,YAAK0e,cAAL,EAAsBU,cAAc,CAACI,WAAf,GAA6B,IAA7B;AACtB,YAAKZ,eAAL,EAAuBQ,cAAc,CAACK,YAAf,GAA8B,IAA9B;AACvB,YAAKZ,eAAL,EAAuBO,cAAc,CAAC1I,YAAf,GAA8B,IAA9B;AAEvB,aAAKpB,KAAL,CAAWtQ,GAAX,CAAgB0U,QAAhB,EAA0B0F,cAA1B;AAEA;;AAEDlS,MAAAA,QAAQ,GAAGkS,cAAX;AAEA,KAvF2D,CAyF5D;;;AAEA,QAAKlS,QAAQ,CAACO,KAAT,IAAkBpD,QAAQ,CAAChB,UAAT,CAAoBqW,GAApB,KAA4Bxc,SAA9C,IAA2DmH,QAAQ,CAAChB,UAAT,CAAoBsW,EAApB,KAA2Bzc,SAA3F,EAAuG;AAEtGmH,MAAAA,QAAQ,CAACuV,YAAT,CAAuB,KAAvB,EAA8B,IAAIxjB,eAAJ,CAAqBiO,QAAQ,CAAChB,UAAT,CAAoBsW,EAApB,CAAuBjY,KAA5C,EAAmD,CAAnD,CAA9B;AAEA;;AAED,QAAKwF,QAAQ,CAACG,gCAAd,EAAiD;AAEhD;AACAyJ,MAAAA,IAAI,CAAC+I,cAAL,GAAsBtd,UAAU,CAAEK,UAAU,CAACkB,qCAAb,CAAV,CAA+DgL,eAArF;AAEA,KAtG2D,CAwG5D;;;AACA,QAAK5B,QAAQ,CAACe,WAAT,IAAwB,CAAEsQ,iBAA/B,EAAmD;AAElDrR,MAAAA,QAAQ,CAACe,WAAT,CAAqB6R,CAArB,GAAyB,CAAE5S,QAAQ,CAACe,WAAT,CAAqB6R,CAAhD;AAEA;;AAEDhJ,IAAAA,IAAI,CAAC5J,QAAL,GAAgBA,QAAhB;AAEA,GAjHD;AAmHA;;;;;;;AAKAvI,EAAAA,UAAU,CAACpE,SAAX,CAAqB2Z,YAArB,GAAoC,UAAW6F,aAAX,EAA2B;AAE9D,QAAIrb,MAAM,GAAG,IAAb;AACA,QAAI3B,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIR,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAI2E,WAAW,GAAGnE,IAAI,CAACid,SAAL,CAAgBD,aAAhB,CAAlB;AAEA,QAAIE,YAAJ;AACA,QAAIhZ,cAAc,GAAG,EAArB;AACA,QAAIiZ,kBAAkB,GAAGhZ,WAAW,CAAC3E,UAAZ,IAA0B,EAAnD;AAEA,QAAI4E,OAAO,GAAG,EAAd;;AAEA,QAAK+Y,kBAAkB,CAAEtd,UAAU,CAACkB,qCAAb,CAAvB,EAA8E;AAE7E,UAAIqc,WAAW,GAAG5d,UAAU,CAAEK,UAAU,CAACkB,qCAAb,CAA5B;AACAmc,MAAAA,YAAY,GAAGE,WAAW,CAACpZ,eAAZ,EAAf;AACAI,MAAAA,OAAO,CAACS,IAAR,CAAcuY,WAAW,CAACnZ,YAAZ,CAA0BC,cAA1B,EAA0CC,WAA1C,EAAuDxC,MAAvD,CAAd;AAEA,KAND,MAMO,IAAKwb,kBAAkB,CAAEtd,UAAU,CAACgB,mBAAb,CAAvB,EAA4D;AAElE,UAAIwc,YAAY,GAAG7d,UAAU,CAAEK,UAAU,CAACgB,mBAAb,CAA7B;AACAqc,MAAAA,YAAY,GAAGG,YAAY,CAACrZ,eAAb,EAAf;AACAI,MAAAA,OAAO,CAACS,IAAR,CAAcwY,YAAY,CAACpZ,YAAb,CAA2BC,cAA3B,EAA2CC,WAA3C,EAAwDxC,MAAxD,CAAd;AAEA,KANM,MAMA;AAEN;AACA;AAEAub,MAAAA,YAAY,GAAGjiB,oBAAf;AAEA,UAAIqJ,iBAAiB,GAAGH,WAAW,CAACI,oBAAZ,IAAoC,EAA5D;AAEAL,MAAAA,cAAc,CAACrB,KAAf,GAAuB,IAAIrJ,KAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAvB;AACA0K,MAAAA,cAAc,CAACG,OAAf,GAAyB,GAAzB;;AAEA,UAAKG,KAAK,CAACC,OAAN,CAAeH,iBAAiB,CAACI,eAAjC,CAAL,EAA0D;AAEzD,YAAIC,KAAK,GAAGL,iBAAiB,CAACI,eAA9B;AAEAR,QAAAA,cAAc,CAACrB,KAAf,CAAqBC,SAArB,CAAgC6B,KAAhC;AACAT,QAAAA,cAAc,CAACG,OAAf,GAAyBM,KAAK,CAAE,CAAF,CAA9B;AAEA;;AAED,UAAKL,iBAAiB,CAACM,gBAAlB,KAAuCzE,SAA5C,EAAwD;AAEvDiE,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,KAAtC,EAA6CI,iBAAiB,CAACM,gBAA/D,CAAd;AAEA;;AAEDV,MAAAA,cAAc,CAAC6E,SAAf,GAA2BzE,iBAAiB,CAACgZ,cAAlB,KAAqCnd,SAArC,GAAiDmE,iBAAiB,CAACgZ,cAAnE,GAAoF,GAA/G;AACApZ,MAAAA,cAAc,CAAC4E,SAAf,GAA2BxE,iBAAiB,CAACiZ,eAAlB,KAAsCpd,SAAtC,GAAkDmE,iBAAiB,CAACiZ,eAApE,GAAsF,GAAjH;;AAEA,UAAKjZ,iBAAiB,CAACkZ,wBAAlB,KAA+Crd,SAApD,EAAgE;AAE/DiE,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,cAAtC,EAAsDI,iBAAiB,CAACkZ,wBAAxE,CAAd;AACApZ,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,cAAtC,EAAsDI,iBAAiB,CAACkZ,wBAAxE,CAAd;AAEA;AAED;;AAED,QAAKrZ,WAAW,CAACsZ,WAAZ,KAA4B,IAAjC,EAAwC;AAEvCvZ,MAAAA,cAAc,CAACuO,IAAf,GAAsB/Y,UAAtB;AAEA;;AAED,QAAIgkB,SAAS,GAAGvZ,WAAW,CAACuZ,SAAZ,IAAyB3L,WAAW,CAACC,MAArD;;AAEA,QAAK0L,SAAS,KAAK3L,WAAW,CAACG,KAA/B,EAAuC;AAEtChO,MAAAA,cAAc,CAACmG,WAAf,GAA6B,IAA7B;AAEA,KAJD,MAIO;AAENnG,MAAAA,cAAc,CAACmG,WAAf,GAA6B,KAA7B;;AAEA,UAAKqT,SAAS,KAAK3L,WAAW,CAACE,IAA/B,EAAsC;AAErC/N,QAAAA,cAAc,CAACyZ,SAAf,GAA2BxZ,WAAW,CAACyZ,WAAZ,KAA4Bzd,SAA5B,GAAwCgE,WAAW,CAACyZ,WAApD,GAAkE,GAA7F;AAEA;AAED;;AAED,QAAKzZ,WAAW,CAAC0Z,aAAZ,KAA8B1d,SAA9B,IAA2C+c,YAAY,KAAKliB,iBAAjE,EAAqF;AAEpFoJ,MAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,WAAtC,EAAmDC,WAAW,CAAC0Z,aAA/D,CAAd;AAEA3Z,MAAAA,cAAc,CAACgH,WAAf,GAA6B,IAAIpO,OAAJ,CAAa,CAAb,EAAgB,CAAhB,CAA7B;;AAEA,UAAKqH,WAAW,CAAC0Z,aAAZ,CAA0B/V,KAA1B,KAAoC3H,SAAzC,EAAqD;AAEpD+D,QAAAA,cAAc,CAACgH,WAAf,CAA2B/H,GAA3B,CAAgCgB,WAAW,CAAC0Z,aAAZ,CAA0B/V,KAA1D,EAAiE3D,WAAW,CAAC0Z,aAAZ,CAA0B/V,KAA3F;AAEA;AAED;;AAED,QAAK3D,WAAW,CAAC2Z,gBAAZ,KAAiC3d,SAAjC,IAA8C+c,YAAY,KAAKliB,iBAApE,EAAwF;AAEvFoJ,MAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,OAAtC,EAA+CC,WAAW,CAAC2Z,gBAA3D,CAAd;;AAEA,UAAK3Z,WAAW,CAAC2Z,gBAAZ,CAA6BC,QAA7B,KAA0C5d,SAA/C,EAA2D;AAE1D+D,QAAAA,cAAc,CAACyG,cAAf,GAAgCxG,WAAW,CAAC2Z,gBAAZ,CAA6BC,QAA7D;AAEA;AAED;;AAED,QAAK5Z,WAAW,CAAC6Z,cAAZ,KAA+B7d,SAA/B,IAA4C+c,YAAY,KAAKliB,iBAAlE,EAAsF;AAErFkJ,MAAAA,cAAc,CAAC0F,QAAf,GAA0B,IAAIpQ,KAAJ,GAAYsJ,SAAZ,CAAuBqB,WAAW,CAAC6Z,cAAnC,CAA1B;AAEA;;AAED,QAAK7Z,WAAW,CAAC8Z,eAAZ,KAAgC9d,SAAhC,IAA6C+c,YAAY,KAAKliB,iBAAnE,EAAuF;AAEtFoJ,MAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACmD,aAAP,CAAsBZ,cAAtB,EAAsC,aAAtC,EAAqDC,WAAW,CAAC8Z,eAAjE,CAAd;AAEA;;AAED,WAAOna,OAAO,CAACiB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,UAAI+C,QAAJ;;AAEA,UAAK+S,YAAY,KAAK9gB,cAAtB,EAAuC;AAEtC+N,QAAAA,QAAQ,GAAG3K,UAAU,CAAEK,UAAU,CAACkB,qCAAb,CAAV,CAA+DkJ,cAA/D,CAA+E/F,cAA/E,CAAX;AAEA,OAJD,MAIO;AAENiG,QAAAA,QAAQ,GAAG,IAAI+S,YAAJ,CAAkBhZ,cAAlB,CAAX;AAEA;;AAED,UAAKC,WAAW,CAAC9B,IAAZ,KAAqBlC,SAA1B,EAAsCgK,QAAQ,CAAC9H,IAAT,GAAgB8B,WAAW,CAAC9B,IAA5B,CAdS,CAgB/C;;AACA,UAAK8H,QAAQ,CAACI,GAAd,EAAoBJ,QAAQ,CAACI,GAAT,CAAa2T,QAAb,GAAwBhhB,YAAxB;AACpB,UAAKiN,QAAQ,CAACU,WAAd,EAA4BV,QAAQ,CAACU,WAAT,CAAqBqT,QAArB,GAAgChhB,YAAhC;AAC5B,UAAKiN,QAAQ,CAACb,WAAd,EAA4Ba,QAAQ,CAACb,WAAT,CAAqB4U,QAArB,GAAgChhB,YAAhC;AAE5B6V,MAAAA,sBAAsB,CAAE5I,QAAF,EAAYhG,WAAZ,CAAtB;AAEA,UAAKA,WAAW,CAAC3E,UAAjB,EAA8BkT,8BAA8B,CAAElT,UAAF,EAAc2K,QAAd,EAAwBhG,WAAxB,CAA9B;AAE9B,aAAOgG,QAAP;AAEA,KA3BM,CAAP;AA6BA,GA3JD;AA6JA;;;;;;;AAKA,WAASgU,aAAT,CAAwB7W,QAAxB,EAAkC+M,YAAlC,EAAgD1S,MAAhD,EAAyD;AAExD,QAAI2E,UAAU,GAAG+N,YAAY,CAAC/N,UAA9B;AAEA,QAAI8X,GAAG,GAAG,IAAIhlB,IAAJ,EAAV;;AAEA,QAAKkN,UAAU,CAAC2K,QAAX,KAAwB9Q,SAA7B,EAAyC;AAExC,UAAIke,QAAQ,GAAG1c,MAAM,CAAC3B,IAAP,CAAY+G,SAAZ,CAAuBT,UAAU,CAAC2K,QAAlC,CAAf;AAEA,UAAIqN,GAAG,GAAGD,QAAQ,CAACC,GAAnB;AACA,UAAIC,GAAG,GAAGF,QAAQ,CAACE,GAAnB,CALwC,CAOxC;;AAEA,UAAKD,GAAG,KAAKne,SAAR,IAAqBoe,GAAG,KAAKpe,SAAlC,EAA8C;AAE7Cie,QAAAA,GAAG,CAACjb,GAAJ,CACC,IAAIpG,OAAJ,CAAauhB,GAAG,CAAE,CAAF,CAAhB,EAAuBA,GAAG,CAAE,CAAF,CAA1B,EAAiCA,GAAG,CAAE,CAAF,CAApC,CADD,EAEC,IAAIvhB,OAAJ,CAAawhB,GAAG,CAAE,CAAF,CAAhB,EAAuBA,GAAG,CAAE,CAAF,CAA1B,EAAiCA,GAAG,CAAE,CAAF,CAApC,CAFD;AAIA,OAND,MAMO;AAEN9f,QAAAA,OAAO,CAACiD,IAAR,CAAc,qEAAd;AAEA;AAEA;AAED,KAvBD,MAuBO;AAEN;AAEA;;AAED,QAAIyR,OAAO,GAAGkB,YAAY,CAAClB,OAA3B;;AAEA,QAAKA,OAAO,KAAKhT,SAAjB,EAA6B;AAE5B,UAAIqe,MAAM,GAAG,IAAIzhB,OAAJ,EAAb;;AAEA,WAAM,IAAIwD,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGsH,OAAO,CAAC3S,MAA9B,EAAsCD,CAAC,GAAGsL,EAA1C,EAA8CtL,CAAC,EAA/C,EAAqD;AAEpD,YAAI0C,MAAM,GAAGkQ,OAAO,CAAE5S,CAAF,CAApB;;AAEA,YAAK0C,MAAM,CAACgO,QAAP,KAAoB9Q,SAAzB,EAAqC;AAEpC,cAAIke,QAAQ,GAAG1c,MAAM,CAAC3B,IAAP,CAAY+G,SAAZ,CAAuB9D,MAAM,CAACgO,QAA9B,CAAf;AACA,cAAIqN,GAAG,GAAGD,QAAQ,CAACC,GAAnB;AACA,cAAIC,GAAG,GAAGF,QAAQ,CAACE,GAAnB,CAJoC,CAMpC;;AAEA,cAAKD,GAAG,KAAKne,SAAR,IAAqBoe,GAAG,KAAKpe,SAAlC,EAA8C;AAE7C;AACAqe,YAAAA,MAAM,CAAChF,IAAP,CAAahW,IAAI,CAAC+a,GAAL,CAAU/a,IAAI,CAACib,GAAL,CAAUH,GAAG,CAAE,CAAF,CAAb,CAAV,EAAgC9a,IAAI,CAACib,GAAL,CAAUF,GAAG,CAAE,CAAF,CAAb,CAAhC,CAAb;AACAC,YAAAA,MAAM,CAAC/E,IAAP,CAAajW,IAAI,CAAC+a,GAAL,CAAU/a,IAAI,CAACib,GAAL,CAAUH,GAAG,CAAE,CAAF,CAAb,CAAV,EAAgC9a,IAAI,CAACib,GAAL,CAAUF,GAAG,CAAE,CAAF,CAAb,CAAhC,CAAb;AACAC,YAAAA,MAAM,CAAC9E,IAAP,CAAalW,IAAI,CAAC+a,GAAL,CAAU/a,IAAI,CAACib,GAAL,CAAUH,GAAG,CAAE,CAAF,CAAb,CAAV,EAAgC9a,IAAI,CAACib,GAAL,CAAUF,GAAG,CAAE,CAAF,CAAb,CAAhC,CAAb;AAEAH,YAAAA,GAAG,CAACM,cAAJ,CAAoBF,MAApB;AAEA,WATD,MASO;AAEN/f,YAAAA,OAAO,CAACiD,IAAR,CAAc,qEAAd;AAEA;AAED;AAED;AAED;;AAED4F,IAAAA,QAAQ,CAACqX,WAAT,GAAuBP,GAAvB;AAEA,QAAIQ,MAAM,GAAG,IAAIriB,MAAJ,EAAb;AAEA6hB,IAAAA,GAAG,CAACS,SAAJ,CAAeD,MAAM,CAACE,MAAtB;AACAF,IAAAA,MAAM,CAACG,MAAP,GAAgBX,GAAG,CAACE,GAAJ,CAAQU,UAAR,CAAoBZ,GAAG,CAACG,GAAxB,IAAgC,CAAhD;AAEAjX,IAAAA,QAAQ,CAAC2X,cAAT,GAA0BL,MAA1B;AAEA;AAED;;;;;;;;AAMA,WAASM,sBAAT,CAAiC5X,QAAjC,EAA2C+M,YAA3C,EAAyD1S,MAAzD,EAAkE;AAEjE,QAAI2E,UAAU,GAAG+N,YAAY,CAAC/N,UAA9B;AAEA,QAAIlC,OAAO,GAAG,EAAd;;AAEA,aAAS+a,uBAAT,CAAkCjH,aAAlC,EAAiDxR,aAAjD,EAAiE;AAEhE,aAAO/E,MAAM,CAACwF,aAAP,CAAsB,UAAtB,EAAkC+Q,aAAlC,EACL9Q,IADK,CACC,UAAWiX,QAAX,EAAsB;AAE5B/W,QAAAA,QAAQ,CAACuV,YAAT,CAAuBnW,aAAvB,EAAsC2X,QAAtC;AAEA,OALK,CAAP;AAOA;;AAED,SAAM,IAAIe,iBAAV,IAA+B9Y,UAA/B,EAA4C;AAE3C,UAAIK,kBAAkB,GAAGC,UAAU,CAAEwY,iBAAF,CAAV,IAAmCA,iBAAiB,CAACvY,WAAlB,EAA5D,CAF2C,CAI3C;;AACA,UAAKF,kBAAkB,IAAIW,QAAQ,CAAChB,UAApC,EAAiD;AAEjDlC,MAAAA,OAAO,CAACS,IAAR,CAAcsa,uBAAuB,CAAE7Y,UAAU,CAAE8Y,iBAAF,CAAZ,EAAmCzY,kBAAnC,CAArC;AAEA;;AAED,QAAK0N,YAAY,CAACG,OAAb,KAAyBrU,SAAzB,IAAsC,CAAEmH,QAAQ,CAACoG,KAAtD,EAA8D;AAE7D,UAAI2Q,QAAQ,GAAG1c,MAAM,CAACwF,aAAP,CAAsB,UAAtB,EAAkCkN,YAAY,CAACG,OAA/C,EAAyDpN,IAAzD,CAA+D,UAAWiX,QAAX,EAAsB;AAEnG/W,QAAAA,QAAQ,CAAC+X,QAAT,CAAmBhB,QAAnB;AAEA,OAJc,CAAf;AAMAja,MAAAA,OAAO,CAACS,IAAR,CAAcwZ,QAAd;AAEA;;AAEDtL,IAAAA,sBAAsB,CAAEzL,QAAF,EAAY+M,YAAZ,CAAtB;AAEA8J,IAAAA,aAAa,CAAE7W,QAAF,EAAY+M,YAAZ,EAA0B1S,MAA1B,CAAb;AAEA,WAAOmC,OAAO,CAACiB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,aAAOiN,YAAY,CAAClB,OAAb,KAAyBhT,SAAzB,GACJ+S,eAAe,CAAE5L,QAAF,EAAY+M,YAAY,CAAClB,OAAzB,EAAkCxR,MAAlC,CADX,GAEJ2F,QAFH;AAIA,KANM,CAAP;AAQA;AAED;;;;;;;AAKA,WAASgY,mBAAT,CAA8BhY,QAA9B,EAAwCiY,QAAxC,EAAmD;AAElD,QAAI7R,KAAK,GAAGpG,QAAQ,CAACkY,QAAT,EAAZ,CAFkD,CAIlD;;AAEA,QAAK9R,KAAK,KAAK,IAAf,EAAsB;AAErB,UAAI8G,OAAO,GAAG,EAAd;AAEA,UAAItR,QAAQ,GAAGoE,QAAQ,CAACmY,YAAT,CAAuB,UAAvB,CAAf;;AAEA,UAAKvc,QAAQ,KAAK/C,SAAlB,EAA8B;AAE7B,aAAM,IAAII,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG2C,QAAQ,CAAC6V,KAA9B,EAAqCxY,CAAC,EAAtC,EAA4C;AAE3CiU,UAAAA,OAAO,CAAC3P,IAAR,CAActE,CAAd;AAEA;;AAED+G,QAAAA,QAAQ,CAAC+X,QAAT,CAAmB7K,OAAnB;AACA9G,QAAAA,KAAK,GAAGpG,QAAQ,CAACkY,QAAT,EAAR;AAEA,OAXD,MAWO;AAEN/gB,QAAAA,OAAO,CAACC,KAAR,CAAe,gGAAf;AACA,eAAO4I,QAAP;AAEA;AAED,KA9BiD,CAgClD;;;AAEA,QAAIoY,iBAAiB,GAAGhS,KAAK,CAACqL,KAAN,GAAc,CAAtC;AACA,QAAI4G,UAAU,GAAG,EAAjB;;AAEA,QAAKJ,QAAQ,KAAK5iB,mBAAlB,EAAwC;AAEvC;AAEA,WAAM,IAAI4D,CAAC,GAAG,CAAd,EAAiBA,CAAC,IAAImf,iBAAtB,EAAyCnf,CAAC,EAA1C,EAAgD;AAE/Cof,QAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAY,CAAZ,CAAjB;AACAD,QAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAZ,CAAjB;AACAof,QAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAC,GAAG,CAAhB,CAAjB;AAEA;AAED,KAZD,MAYO;AAEN;AAEA,WAAM,IAAIA,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGmf,iBAArB,EAAwCnf,CAAC,EAAzC,EAA+C;AAE9C,YAAKA,CAAC,GAAG,CAAJ,KAAU,CAAf,EAAmB;AAElBof,UAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAZ,CAAjB;AACAof,UAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAC,GAAG,CAAhB,CAAjB;AACAof,UAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAC,GAAG,CAAhB,CAAjB;AAGA,SAPD,MAOO;AAENof,UAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAC,GAAG,CAAhB,CAAjB;AACAof,UAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAC,GAAG,CAAhB,CAAjB;AACAof,UAAAA,UAAU,CAAC9a,IAAX,CAAiB6I,KAAK,CAACkS,IAAN,CAAYrf,CAAZ,CAAjB;AAEA;AAED;AAED;;AAED,QAAOof,UAAU,CAACnf,MAAX,GAAoB,CAAtB,KAA8Bkf,iBAAnC,EAAuD;AAEtDjhB,MAAAA,OAAO,CAACC,KAAR,CAAe,yFAAf;AAEA,KA9EiD,CAgFlD;;;AAEA,QAAImhB,WAAW,GAAGvY,QAAQ,CAACK,KAAT,EAAlB;AACAkY,IAAAA,WAAW,CAACR,QAAZ,CAAsBM,UAAtB;AAEA,WAAOE,WAAP;AAEA;AAED;;;;;;;;;;AAQAje,EAAAA,UAAU,CAACpE,SAAX,CAAqBsiB,cAArB,GAAsC,UAAWC,UAAX,EAAwB;AAE7D,QAAIpe,MAAM,GAAG,IAAb;AACA,QAAInC,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAI+S,KAAK,GAAG,KAAKwC,cAAjB;;AAEA,aAASiL,oBAAT,CAA+B9Z,SAA/B,EAA2C;AAE1C,aAAO1G,UAAU,CAAEK,UAAU,CAACoB,0BAAb,CAAV,CACLgF,eADK,CACYC,SADZ,EACuBvE,MADvB,EAELyF,IAFK,CAEC,UAAWE,QAAX,EAAsB;AAE5B,eAAO4X,sBAAsB,CAAE5X,QAAF,EAAYpB,SAAZ,EAAuBvE,MAAvB,CAA7B;AAEA,OANK,CAAP;AAQA;;AAED,QAAIyC,OAAO,GAAG,EAAd;;AAEA,SAAM,IAAI7D,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGkU,UAAU,CAACvf,MAAjC,EAAyCD,CAAC,GAAGsL,EAA7C,EAAiDtL,CAAC,EAAlD,EAAwD;AAEvD,UAAI2F,SAAS,GAAG6Z,UAAU,CAAExf,CAAF,CAA1B;AACA,UAAIoW,QAAQ,GAAGvC,kBAAkB,CAAElO,SAAF,CAAjC,CAHuD,CAKvD;;AACA,UAAI+Z,MAAM,GAAG1N,KAAK,CAAEoE,QAAF,CAAlB;;AAEA,UAAKsJ,MAAL,EAAc;AAEb;AACA7b,QAAAA,OAAO,CAACS,IAAR,CAAcob,MAAM,CAACC,OAArB;AAEA,OALD,MAKO;AAEN,YAAIC,eAAJ;;AAEA,YAAKja,SAAS,CAAC1G,UAAV,IAAwB0G,SAAS,CAAC1G,UAAV,CAAsBK,UAAU,CAACoB,0BAAjC,CAA7B,EAA6F;AAE5F;AACAkf,UAAAA,eAAe,GAAGH,oBAAoB,CAAE9Z,SAAF,CAAtC;AAEA,SALD,MAKO;AAEN;AACAia,UAAAA,eAAe,GAAGjB,sBAAsB,CAAE,IAAI5lB,cAAJ,EAAF,EAAwB4M,SAAxB,EAAmCvE,MAAnC,CAAxC;AAEA,SAdK,CAgBN;;;AACA4Q,QAAAA,KAAK,CAAEoE,QAAF,CAAL,GAAoB;AAAEzQ,UAAAA,SAAS,EAAEA,SAAb;AAAwBga,UAAAA,OAAO,EAAEC;AAAjC,SAApB;AAEA/b,QAAAA,OAAO,CAACS,IAAR,CAAcsb,eAAd;AAEA;AAED;;AAED,WAAOrc,OAAO,CAACiB,GAAR,CAAaX,OAAb,CAAP;AAEA,GA5DD;AA8DA;;;;;;;AAKAxC,EAAAA,UAAU,CAACpE,SAAX,CAAqBuZ,QAArB,GAAgC,UAAWqJ,SAAX,EAAuB;AAEtD,QAAIze,MAAM,GAAG,IAAb;AACA,QAAI3B,IAAI,GAAG,KAAKA,IAAhB;AAEA,QAAIgU,OAAO,GAAGhU,IAAI,CAAC+V,MAAL,CAAaqK,SAAb,CAAd;AACA,QAAIL,UAAU,GAAG/L,OAAO,CAAC+L,UAAzB;AAEA,QAAI3b,OAAO,GAAG,EAAd;;AAEA,SAAM,IAAI7D,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGkU,UAAU,CAACvf,MAAjC,EAAyCD,CAAC,GAAGsL,EAA7C,EAAiDtL,CAAC,EAAlD,EAAwD;AAEvD,UAAI4J,QAAQ,GAAG4V,UAAU,CAAExf,CAAF,CAAV,CAAgB4J,QAAhB,KAA6BhK,SAA7B,GACZmS,qBAAqB,CAAE,KAAKC,KAAP,CADT,GAEZ,KAAKpL,aAAL,CAAoB,UAApB,EAAgC4Y,UAAU,CAAExf,CAAF,CAAV,CAAgB4J,QAAhD,CAFH;AAIA/F,MAAAA,OAAO,CAACS,IAAR,CAAcsF,QAAd;AAEA;;AAED/F,IAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACme,cAAP,CAAuBC,UAAvB,CAAd;AAEA,WAAOjc,OAAO,CAACiB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,UAAWiZ,OAAX,EAAqB;AAExD,UAAIpD,SAAS,GAAGoD,OAAO,CAAC9a,KAAR,CAAe,CAAf,EAAkB8a,OAAO,CAAC7f,MAAR,GAAiB,CAAnC,CAAhB;AACA,UAAI8f,UAAU,GAAGD,OAAO,CAAEA,OAAO,CAAC7f,MAAR,GAAiB,CAAnB,CAAxB;AAEA,UAAIuV,MAAM,GAAG,EAAb;;AAEA,WAAM,IAAIxV,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGyU,UAAU,CAAC9f,MAAjC,EAAyCD,CAAC,GAAGsL,EAA7C,EAAiDtL,CAAC,EAAlD,EAAwD;AAEvD,YAAI+G,QAAQ,GAAGgZ,UAAU,CAAE/f,CAAF,CAAzB;AACA,YAAI2F,SAAS,GAAG6Z,UAAU,CAAExf,CAAF,CAA1B,CAHuD,CAKvD;;AAEA,YAAIwT,IAAJ;AAEA,YAAI5J,QAAQ,GAAG8S,SAAS,CAAE1c,CAAF,CAAxB;;AAEA,YAAK2F,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACc,SAAnC,IACJlK,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACe,cAD/B,IAEJnK,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACgB,YAF/B,IAGJpK,SAAS,CAACwO,IAAV,KAAmBvU,SAHpB,EAGgC;AAE/B;AACA4T,UAAAA,IAAI,GAAGC,OAAO,CAAC0C,aAAR,KAA0B,IAA1B,GACJ,IAAIpa,WAAJ,CAAiBgL,QAAjB,EAA2B6C,QAA3B,CADI,GAEJ,IAAIpP,IAAJ,CAAUuM,QAAV,EAAoB6C,QAApB,CAFH;;AAIA,cAAK4J,IAAI,CAAC2C,aAAL,KAAuB,IAAvB,IAA+B,CAAE3C,IAAI,CAACzM,QAAL,CAAchB,UAAd,CAAyBia,UAAzB,CAAoCrZ,UAA1E,EAAuF;AAEtF;AACA;AACA6M,YAAAA,IAAI,CAACyM,oBAAL;AAEA;;AAED,cAAKta,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACe,cAAxC,EAAyD;AAExD0D,YAAAA,IAAI,CAACzM,QAAL,GAAgBgY,mBAAmB,CAAEvL,IAAI,CAACzM,QAAP,EAAiB1K,qBAAjB,CAAnC;AAEA,WAJD,MAIO,IAAKsJ,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACgB,YAAxC,EAAuD;AAE7DyD,YAAAA,IAAI,CAACzM,QAAL,GAAgBgY,mBAAmB,CAAEvL,IAAI,CAACzM,QAAP,EAAiB3K,mBAAjB,CAAnC;AAEA;AAED,SA5BD,MA4BO,IAAKuJ,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACW,KAAxC,EAAgD;AAEtD8D,UAAAA,IAAI,GAAG,IAAIzZ,YAAJ,CAAkBgN,QAAlB,EAA4B6C,QAA5B,CAAP;AAEA,SAJM,MAIA,IAAKjE,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACa,UAAxC,EAAqD;AAE3D4D,UAAAA,IAAI,GAAG,IAAI5Z,IAAJ,CAAUmN,QAAV,EAAoB6C,QAApB,CAAP;AAEA,SAJM,MAIA,IAAKjE,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACY,SAAxC,EAAoD;AAE1D6D,UAAAA,IAAI,GAAG,IAAI1Z,QAAJ,CAAciN,QAAd,EAAwB6C,QAAxB,CAAP;AAEA,SAJM,MAIA,IAAKjE,SAAS,CAACwO,IAAV,KAAmBpF,eAAe,CAACU,MAAxC,EAAiD;AAEvD+D,UAAAA,IAAI,GAAG,IAAIpY,MAAJ,CAAY2L,QAAZ,EAAsB6C,QAAtB,CAAP;AAEA,SAJM,MAIA;AAEN,gBAAM,IAAI9J,KAAJ,CAAW,mDAAmD6F,SAAS,CAACwO,IAAxE,CAAN;AAEA;;AAED,YAAKjX,MAAM,CAACmX,IAAP,CAAab,IAAI,CAACzM,QAAL,CAAcsM,eAA3B,EAA6CpT,MAA7C,GAAsD,CAA3D,EAA+D;AAE9DsT,UAAAA,kBAAkB,CAAEC,IAAF,EAAQC,OAAR,CAAlB;AAEA;;AAEDD,QAAAA,IAAI,CAAC1R,IAAL,GAAY2R,OAAO,CAAC3R,IAAR,IAAkB,UAAU+d,SAAxC;AAEA,YAAKE,UAAU,CAAC9f,MAAX,GAAoB,CAAzB,EAA6BuT,IAAI,CAAC1R,IAAL,IAAa,MAAM9B,CAAnB;AAE7BwS,QAAAA,sBAAsB,CAAEgB,IAAF,EAAQC,OAAR,CAAtB;AAEArS,QAAAA,MAAM,CAAC4Z,mBAAP,CAA4BxH,IAA5B;AAEAgC,QAAAA,MAAM,CAAClR,IAAP,CAAakP,IAAb;AAEA;;AAED,UAAKgC,MAAM,CAACvV,MAAP,KAAkB,CAAvB,EAA2B;AAE1B,eAAOuV,MAAM,CAAE,CAAF,CAAb;AAEA;;AAED,UAAI0K,KAAK,GAAG,IAAI5mB,KAAJ,EAAZ;;AAEA,WAAM,IAAI0G,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGkK,MAAM,CAACvV,MAA7B,EAAqCD,CAAC,GAAGsL,EAAzC,EAA6CtL,CAAC,EAA9C,EAAoD;AAEnDkgB,QAAAA,KAAK,CAACxe,GAAN,CAAW8T,MAAM,CAAExV,CAAF,CAAjB;AAEA;;AAED,aAAOkgB,KAAP;AAEA,KAtGM,CAAP;AAwGA,GA9HD;AAgIA;;;;;;;AAKA7e,EAAAA,UAAU,CAACpE,SAAX,CAAqB+Z,UAArB,GAAkC,UAAWmJ,WAAX,EAAyB;AAE1D,QAAIxU,MAAJ;AACA,QAAIyU,SAAS,GAAG,KAAK3gB,IAAL,CAAUwV,OAAV,CAAmBkL,WAAnB,CAAhB;AACA,QAAIxW,MAAM,GAAGyW,SAAS,CAAEA,SAAS,CAAC3d,IAAZ,CAAtB;;AAEA,QAAK,CAAEkH,MAAP,EAAgB;AAEfzL,MAAAA,OAAO,CAACiD,IAAR,CAAc,8CAAd;AACA;AAEA;;AAED,QAAKif,SAAS,CAAC3d,IAAV,KAAmB,aAAxB,EAAwC;AAEvCkJ,MAAAA,MAAM,GAAG,IAAIzQ,iBAAJ,CAAuBZ,SAAS,CAAC+lB,QAAV,CAAoB1W,MAAM,CAAC2W,IAA3B,CAAvB,EAA0D3W,MAAM,CAAC4W,WAAP,IAAsB,CAAhF,EAAmF5W,MAAM,CAAC6W,KAAP,IAAgB,CAAnG,EAAsG7W,MAAM,CAAC8W,IAAP,IAAe,GAArH,CAAT;AAEA,KAJD,MAIO,IAAKL,SAAS,CAAC3d,IAAV,KAAmB,cAAxB,EAAyC;AAE/CkJ,MAAAA,MAAM,GAAG,IAAI1Q,kBAAJ,CAAwB0O,MAAM,CAAC+W,IAAP,GAAc,CAAE,CAAxC,EAA2C/W,MAAM,CAAC+W,IAAP,GAAc,CAAzD,EAA4D/W,MAAM,CAACgX,IAAP,GAAc,CAA1E,EAA6EhX,MAAM,CAACgX,IAAP,GAAc,CAAE,CAA7F,EAAgGhX,MAAM,CAAC6W,KAAvG,EAA8G7W,MAAM,CAAC8W,IAArH,CAAT;AAEA;;AAED,QAAKL,SAAS,CAACte,IAAV,KAAmBlC,SAAxB,EAAoC+L,MAAM,CAAC7J,IAAP,GAAcse,SAAS,CAACte,IAAxB;AAEpC0Q,IAAAA,sBAAsB,CAAE7G,MAAF,EAAUyU,SAAV,CAAtB;AAEA,WAAO7c,OAAO,CAACC,OAAR,CAAiBmI,MAAjB,CAAP;AAEA,GA7BD;AA+BA;;;;;;;AAKAtK,EAAAA,UAAU,CAACpE,SAAX,CAAqB6Z,QAArB,GAAgC,UAAWnB,SAAX,EAAuB;AAEtD,QAAIiL,OAAO,GAAG,KAAKnhB,IAAL,CAAU6V,KAAV,CAAiBK,SAAjB,CAAd;AAEA,QAAIkL,SAAS,GAAG;AAAEhL,MAAAA,MAAM,EAAE+K,OAAO,CAAC/K;AAAlB,KAAhB;;AAEA,QAAK+K,OAAO,CAACE,mBAAR,KAAgClhB,SAArC,EAAiD;AAEhD,aAAO2D,OAAO,CAACC,OAAR,CAAiBqd,SAAjB,CAAP;AAEA;;AAED,WAAO,KAAKja,aAAL,CAAoB,UAApB,EAAgCga,OAAO,CAACE,mBAAxC,EAA8Dja,IAA9D,CAAoE,UAAWiX,QAAX,EAAsB;AAEhG+C,MAAAA,SAAS,CAACC,mBAAV,GAAgChD,QAAhC;AAEA,aAAO+C,SAAP;AAEA,KANM,CAAP;AAQA,GApBD;AAsBA;;;;;;;AAKAxf,EAAAA,UAAU,CAACpE,SAAX,CAAqB8Z,aAArB,GAAqC,UAAWgK,cAAX,EAA4B;AAEhE,QAAIthB,IAAI,GAAG,KAAKA,IAAhB;AAEA,QAAIuhB,YAAY,GAAGvhB,IAAI,CAACuV,UAAL,CAAiB+L,cAAjB,CAAnB;AAEA,QAAIE,YAAY,GAAG,EAAnB;AACA,QAAIC,qBAAqB,GAAG,EAA5B;AACA,QAAIC,sBAAsB,GAAG,EAA7B;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,cAAc,GAAG,EAArB;;AAEA,SAAM,IAAIrhB,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG0V,YAAY,CAACM,QAAb,CAAsBrhB,MAA5C,EAAoDD,CAAC,GAAGsL,EAAxD,EAA4DtL,CAAC,EAA7D,EAAmE;AAElE,UAAIuhB,OAAO,GAAGP,YAAY,CAACM,QAAb,CAAuBthB,CAAvB,CAAd;AACA,UAAIwa,OAAO,GAAGwG,YAAY,CAACzG,QAAb,CAAuBgH,OAAO,CAAC/G,OAA/B,CAAd;AACA,UAAI9X,MAAM,GAAG6e,OAAO,CAAC7e,MAArB;AACA,UAAIZ,IAAI,GAAGY,MAAM,CAAC8e,IAAP,KAAgB5hB,SAAhB,GAA4B8C,MAAM,CAAC8e,IAAnC,GAA0C9e,MAAM,CAAC+e,EAA5D,CALkE,CAKF;;AAChE,UAAIC,KAAK,GAAGV,YAAY,CAACW,UAAb,KAA4B/hB,SAA5B,GAAwCohB,YAAY,CAACW,UAAb,CAAyBnH,OAAO,CAACkH,KAAjC,CAAxC,GAAmFlH,OAAO,CAACkH,KAAvG;AACA,UAAIE,MAAM,GAAGZ,YAAY,CAACW,UAAb,KAA4B/hB,SAA5B,GAAwCohB,YAAY,CAACW,UAAb,CAAyBnH,OAAO,CAACoH,MAAjC,CAAxC,GAAoFpH,OAAO,CAACoH,MAAzG;AAEAX,MAAAA,YAAY,CAAC3c,IAAb,CAAmB,KAAKsC,aAAL,CAAoB,MAApB,EAA4B9E,IAA5B,CAAnB;AACAof,MAAAA,qBAAqB,CAAC5c,IAAtB,CAA4B,KAAKsC,aAAL,CAAoB,UAApB,EAAgC8a,KAAhC,CAA5B;AACAP,MAAAA,sBAAsB,CAAC7c,IAAvB,CAA6B,KAAKsC,aAAL,CAAoB,UAApB,EAAgCgb,MAAhC,CAA7B;AACAR,MAAAA,eAAe,CAAC9c,IAAhB,CAAsBkW,OAAtB;AACA6G,MAAAA,cAAc,CAAC/c,IAAf,CAAqB5B,MAArB;AAEA;;AAED,WAAOa,OAAO,CAACiB,GAAR,CAAa,CAEnBjB,OAAO,CAACiB,GAAR,CAAayc,YAAb,CAFmB,EAGnB1d,OAAO,CAACiB,GAAR,CAAa0c,qBAAb,CAHmB,EAInB3d,OAAO,CAACiB,GAAR,CAAa2c,sBAAb,CAJmB,EAKnB5d,OAAO,CAACiB,GAAR,CAAa4c,eAAb,CALmB,EAMnB7d,OAAO,CAACiB,GAAR,CAAa6c,cAAb,CANmB,CAAb,EAQHxa,IARG,CAQG,UAAWiO,YAAX,EAA0B;AAEnC,UAAIM,KAAK,GAAGN,YAAY,CAAE,CAAF,CAAxB;AACA,UAAI+M,cAAc,GAAG/M,YAAY,CAAE,CAAF,CAAjC;AACA,UAAIgN,eAAe,GAAGhN,YAAY,CAAE,CAAF,CAAlC;AACA,UAAIyF,QAAQ,GAAGzF,YAAY,CAAE,CAAF,CAA3B;AACA,UAAIlC,OAAO,GAAGkC,YAAY,CAAE,CAAF,CAA1B;AAEA,UAAIiN,MAAM,GAAG,EAAb;;AAEA,WAAM,IAAI/hB,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG8J,KAAK,CAACnV,MAA5B,EAAoCD,CAAC,GAAGsL,EAAxC,EAA4CtL,CAAC,EAA7C,EAAmD;AAElD,YAAIwhB,IAAI,GAAGpM,KAAK,CAAEpV,CAAF,CAAhB;AACA,YAAIgiB,aAAa,GAAGH,cAAc,CAAE7hB,CAAF,CAAlC;AACA,YAAIiiB,cAAc,GAAGH,eAAe,CAAE9hB,CAAF,CAApC;AACA,YAAIwa,OAAO,GAAGD,QAAQ,CAAEva,CAAF,CAAtB;AACA,YAAI0C,MAAM,GAAGkQ,OAAO,CAAE5S,CAAF,CAApB;AAEA,YAAKwhB,IAAI,KAAK5hB,SAAd,EAA0B;AAE1B4hB,QAAAA,IAAI,CAACtV,YAAL;AACAsV,QAAAA,IAAI,CAACvV,gBAAL,GAAwB,IAAxB;AAEA,YAAIiW,kBAAJ;;AAEA,gBAAShR,eAAe,CAAExO,MAAM,CAAC7E,IAAT,CAAxB;AAEC,eAAKqT,eAAe,CAACE,OAArB;AAEC8Q,YAAAA,kBAAkB,GAAGnnB,mBAArB;AACA;;AAED,eAAKmW,eAAe,CAAC5J,QAArB;AAEC4a,YAAAA,kBAAkB,GAAG3mB,uBAArB;AACA;;AAED,eAAK2V,eAAe,CAACvO,QAArB;AACA,eAAKuO,eAAe,CAAC3J,KAArB;AACA;AAEC2a,YAAAA,kBAAkB,GAAGzlB,mBAArB;AACA;AAjBF;;AAqBA,YAAI0lB,UAAU,GAAGX,IAAI,CAAC1f,IAAL,GAAY0f,IAAI,CAAC1f,IAAjB,GAAwB0f,IAAI,CAAC/F,IAA9C;AAEA,YAAI2G,aAAa,GAAG5H,OAAO,CAAC4H,aAAR,KAA0BxiB,SAA1B,GAAsCyR,aAAa,CAAEmJ,OAAO,CAAC4H,aAAV,CAAnD,GAA+EzoB,iBAAnG;AAEA,YAAIga,WAAW,GAAG,EAAlB;;AAEA,YAAKzC,eAAe,CAAExO,MAAM,CAAC7E,IAAT,CAAf,KAAmCqT,eAAe,CAACE,OAAxD,EAAkE;AAEjE;AACAoQ,UAAAA,IAAI,CAACa,QAAL,CAAe,UAAW1gB,MAAX,EAAoB;AAElC,gBAAKA,MAAM,CAAC2gB,MAAP,KAAkB,IAAlB,IAA0B3gB,MAAM,CAAC+R,qBAAtC,EAA8D;AAE7DC,cAAAA,WAAW,CAACrP,IAAZ,CAAkB3C,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAArB,GAA4BH,MAAM,CAAC8Z,IAArD;AAEA;AAED,WARD;AAUA,SAbD,MAaO;AAEN9H,UAAAA,WAAW,CAACrP,IAAZ,CAAkB6d,UAAlB;AAEA;;AAED,YAAII,WAAW,GAAGN,cAAc,CAAC7d,KAAjC;;AAEA,YAAK6d,cAAc,CAACtb,UAApB,EAAiC;AAEhC,cAAIY,KAAJ;;AAEA,cAAKgb,WAAW,CAACllB,WAAZ,KAA4B6S,SAAjC,EAA6C;AAE5C3I,YAAAA,KAAK,GAAG,IAAI,GAAZ;AAEA,WAJD,MAIO,IAAKgb,WAAW,CAACllB,WAAZ,KAA4B+B,UAAjC,EAA8C;AAEpDmI,YAAAA,KAAK,GAAG,IAAI,GAAZ;AAEA,WAJM,MAIA,IAAKgb,WAAW,CAACllB,WAAZ,IAA2B8S,UAAhC,EAA6C;AAEnD5I,YAAAA,KAAK,GAAG,IAAI,KAAZ;AAEA,WAJM,MAIA,IAAKgb,WAAW,CAACllB,WAAZ,KAA4B+S,WAAjC,EAA+C;AAErD7I,YAAAA,KAAK,GAAG,IAAI,KAAZ;AAEA,WAJM,MAIA;AAEN,kBAAM,IAAIzH,KAAJ,CAAW,+DAAX,CAAN;AAEA;;AAED,cAAI0iB,MAAM,GAAG,IAAIlS,YAAJ,CAAkBiS,WAAW,CAACtiB,MAA9B,CAAb;;AAEA,eAAM,IAAIwiB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGH,WAAW,CAACtiB,MAAlC,EAA0CwiB,CAAC,GAAGC,EAA9C,EAAkDD,CAAC,EAAnD,EAAyD;AAExDD,YAAAA,MAAM,CAAEC,CAAF,CAAN,GAAcF,WAAW,CAAEE,CAAF,CAAX,GAAmBlb,KAAjC;AAEA;;AAEDgb,UAAAA,WAAW,GAAGC,MAAd;AAEA;;AAED,aAAM,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAG/O,WAAW,CAAC1T,MAAlC,EAA0CwiB,CAAC,GAAGC,EAA9C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,cAAIE,KAAK,GAAG,IAAIT,kBAAJ,CACXvO,WAAW,CAAE8O,CAAF,CAAX,GAAmB,GAAnB,GAAyBvR,eAAe,CAAExO,MAAM,CAAC7E,IAAT,CAD7B,EAEXmkB,aAAa,CAAC5d,KAFH,EAGXme,WAHW,EAIXH,aAJW,CAAZ,CAFwD,CASxD;;AACA,cAAK5H,OAAO,CAAC4H,aAAR,KAA0B,aAA/B,EAA+C;AAE9CO,YAAAA,KAAK,CAACC,iBAAN,GAA0B,SAASC,uCAAT,CAAkDzV,MAAlD,EAA2D;AAEpF;AACA;AACA;AAEA,qBAAO,IAAIP,0BAAJ,CAAgC,KAAKiW,KAArC,EAA4C,KAAKzV,MAAjD,EAAyD,KAAK0V,YAAL,KAAsB,CAA/E,EAAkF3V,MAAlF,CAAP;AAEA,aARD,CAF8C,CAY9C;;;AACAuV,YAAAA,KAAK,CAACC,iBAAN,CAAwBI,yCAAxB,GAAoE,IAApE;AAEA;;AAEDjB,UAAAA,MAAM,CAACzd,IAAP,CAAaqe,KAAb;AAEA;AAED;;AAED,UAAI7gB,IAAI,GAAGkf,YAAY,CAAClf,IAAb,KAAsBlC,SAAtB,GAAkCohB,YAAY,CAAClf,IAA/C,GAAsD,eAAeif,cAAhF;AAEA,aAAO,IAAIpoB,aAAJ,CAAmBmJ,IAAnB,EAAyBlC,SAAzB,EAAoCmiB,MAApC,CAAP;AAEA,KA5JM,CAAP;AA8JA,GA3LD;AA6LA;;;;;;;AAKA1gB,EAAAA,UAAU,CAACpE,SAAX,CAAqBsZ,QAArB,GAAgC,UAAWR,SAAX,EAAuB;AAEtD,QAAItW,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIR,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAImC,MAAM,GAAG,IAAb;AAEA,QAAIqU,cAAc,GAAGhW,IAAI,CAACgW,cAA1B;AACA,QAAIC,QAAQ,GAAGjW,IAAI,CAACiW,QAApB;AAEA,QAAIO,OAAO,GAAGxW,IAAI,CAAC2V,KAAL,CAAYW,SAAZ,CAAd;AAEA,WAAS,YAAY;AAEpB,UAAIlS,OAAO,GAAG,EAAd;;AAEA,UAAKoS,OAAO,CAACzC,IAAR,KAAiB5T,SAAtB,EAAkC;AAEjCiE,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACwF,aAAP,CAAsB,MAAtB,EAA8BqP,OAAO,CAACzC,IAAtC,EAA6C3M,IAA7C,CAAmD,UAAW2M,IAAX,EAAkB;AAElF,cAAIgO,IAAJ;;AAEA,cAAK/L,cAAc,CAAEQ,OAAO,CAACzC,IAAV,CAAd,GAAiC,CAAtC,EAA0C;AAEzC,gBAAIyP,WAAW,GAAGvN,QAAQ,CAAEO,OAAO,CAACzC,IAAV,CAAR,EAAlB;AAEAgO,YAAAA,IAAI,GAAGhO,IAAI,CAACpM,KAAL,EAAP;AACAoa,YAAAA,IAAI,CAAC1f,IAAL,IAAa,eAAemhB,WAA5B,CALyC,CAOzC;;AACAzB,YAAAA,IAAI,CAACjF,cAAL,GAAsB/I,IAAI,CAAC+I,cAA3B;;AAEA,iBAAM,IAAIvc,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGkW,IAAI,CAAC0B,QAAL,CAAcjjB,MAApC,EAA4CD,CAAC,GAAGsL,EAAhD,EAAoDtL,CAAC,EAArD,EAA2D;AAE1DwhB,cAAAA,IAAI,CAAC0B,QAAL,CAAeljB,CAAf,EAAmB8B,IAAnB,IAA2B,eAAemhB,WAA1C;AACAzB,cAAAA,IAAI,CAAC0B,QAAL,CAAeljB,CAAf,EAAmBuc,cAAnB,GAAoC/I,IAAI,CAAC0P,QAAL,CAAeljB,CAAf,EAAmBuc,cAAvD;AAEA;AAED,WAjBD,MAiBO;AAENiF,YAAAA,IAAI,GAAGhO,IAAP;AAEA,WAzBiF,CA2BlF;;;AACA,cAAKyC,OAAO,CAAC7E,OAAR,KAAoBxR,SAAzB,EAAqC;AAEpC4hB,YAAAA,IAAI,CAACa,QAAL,CAAe,UAAWc,CAAX,EAAe;AAE7B,kBAAK,CAAEA,CAAC,CAACb,MAAT,EAAkB;;AAElB,mBAAM,IAAItiB,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG2K,OAAO,CAAC7E,OAAR,CAAgBnR,MAAtC,EAA8CD,CAAC,GAAGsL,EAAlD,EAAsDtL,CAAC,EAAvD,EAA6D;AAE5DmjB,gBAAAA,CAAC,CAACzP,qBAAF,CAAyB1T,CAAzB,IAA+BiW,OAAO,CAAC7E,OAAR,CAAiBpR,CAAjB,CAA/B;AAEA;AAED,aAVD;AAYA;;AAED,iBAAOwhB,IAAP;AAEA,SA9Ca,CAAd;AAgDA;;AAED,UAAKvL,OAAO,CAACtK,MAAR,KAAmB/L,SAAxB,EAAoC;AAEnCiE,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACwF,aAAP,CAAsB,QAAtB,EAAgCqP,OAAO,CAACtK,MAAxC,CAAd;AAEA;;AAED,UAAKsK,OAAO,CAAChX,UAAR,IACDgX,OAAO,CAAChX,UAAR,CAAoBK,UAAU,CAACc,mBAA/B,CADC,IAED6V,OAAO,CAAChX,UAAR,CAAoBK,UAAU,CAACc,mBAA/B,EAAqDgjB,KAArD,KAA+DxjB,SAFnE,EAE+E;AAE9EiE,QAAAA,OAAO,CAACS,IAAR,CAAclD,MAAM,CAACwF,aAAP,CAAsB,OAAtB,EAA+BqP,OAAO,CAAChX,UAAR,CAAoBK,UAAU,CAACc,mBAA/B,EAAqDgjB,KAApF,CAAd;AAEA;;AAED,aAAO7f,OAAO,CAACiB,GAAR,CAAaX,OAAb,CAAP;AAEA,KAxEQ,EAAF,CAwEDgD,IAxEC,CAwEK,UAAWtF,OAAX,EAAqB;AAEhC,UAAIigB,IAAJ,CAFgC,CAIhC;;AACA,UAAKvL,OAAO,CAACH,MAAR,KAAmB,IAAxB,EAA+B;AAE9B0L,QAAAA,IAAI,GAAG,IAAI5oB,IAAJ,EAAP;AAEA,OAJD,MAIO,IAAK2I,OAAO,CAACtB,MAAR,GAAiB,CAAtB,EAA0B;AAEhCuhB,QAAAA,IAAI,GAAG,IAAIloB,KAAJ,EAAP;AAEA,OAJM,MAIA,IAAKiI,OAAO,CAACtB,MAAR,KAAmB,CAAxB,EAA4B;AAElCuhB,QAAAA,IAAI,GAAGjgB,OAAO,CAAE,CAAF,CAAd;AAEA,OAJM,MAIA;AAENigB,QAAAA,IAAI,GAAG,IAAIxmB,QAAJ,EAAP;AAEA;;AAED,UAAKwmB,IAAI,KAAKjgB,OAAO,CAAE,CAAF,CAArB,EAA6B;AAE5B,aAAM,IAAIvB,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG/J,OAAO,CAACtB,MAA9B,EAAsCD,CAAC,GAAGsL,EAA1C,EAA8CtL,CAAC,EAA/C,EAAqD;AAEpDwhB,UAAAA,IAAI,CAAC9f,GAAL,CAAUH,OAAO,CAAEvB,CAAF,CAAjB;AAEA;AAED;;AAED,UAAKiW,OAAO,CAACnU,IAAR,KAAiBlC,SAAtB,EAAkC;AAEjC4hB,QAAAA,IAAI,CAAClP,QAAL,CAAcxQ,IAAd,GAAqBmU,OAAO,CAACnU,IAA7B;AACA0f,QAAAA,IAAI,CAAC1f,IAAL,GAAYxG,eAAe,CAAC+nB,gBAAhB,CAAkCpN,OAAO,CAACnU,IAA1C,CAAZ;AAEA;;AAED0Q,MAAAA,sBAAsB,CAAEgP,IAAF,EAAQvL,OAAR,CAAtB;AAEA,UAAKA,OAAO,CAAChX,UAAb,EAA0BkT,8BAA8B,CAAElT,UAAF,EAAcuiB,IAAd,EAAoBvL,OAApB,CAA9B;;AAE1B,UAAKA,OAAO,CAAC7J,MAAR,KAAmBxM,SAAxB,EAAoC;AAEnC,YAAIwM,MAAM,GAAG,IAAI7R,OAAJ,EAAb;AACA6R,QAAAA,MAAM,CAAC7J,SAAP,CAAkB0T,OAAO,CAAC7J,MAA1B;AACAoV,QAAAA,IAAI,CAAC8B,WAAL,CAAkBlX,MAAlB;AAEA,OAND,MAMO;AAEN,YAAK6J,OAAO,CAAC9E,WAAR,KAAwBvR,SAA7B,EAAyC;AAExC4hB,UAAAA,IAAI,CAAC7e,QAAL,CAAcJ,SAAd,CAAyB0T,OAAO,CAAC9E,WAAjC;AAEA;;AAED,YAAK8E,OAAO,CAAC3O,QAAR,KAAqB1H,SAA1B,EAAsC;AAErC4hB,UAAAA,IAAI,CAAC+B,UAAL,CAAgBhhB,SAAhB,CAA2B0T,OAAO,CAAC3O,QAAnC;AAEA;;AAED,YAAK2O,OAAO,CAAC1O,KAAR,KAAkB3H,SAAvB,EAAmC;AAElC4hB,UAAAA,IAAI,CAACja,KAAL,CAAWhF,SAAX,CAAsB0T,OAAO,CAAC1O,KAA9B;AAEA;AAED;;AAED,aAAOia,IAAP;AAEA,KAlJM,CAAP;AAoJA,GA/JD;AAiKA;;;;;;;AAKAngB,EAAAA,UAAU,CAACpE,SAAX,CAAqBqZ,SAArB,GAAiC,YAAY;AAE5C;AAEA,aAASkN,iBAAT,CAA4BC,MAA5B,EAAoCC,YAApC,EAAkDjkB,IAAlD,EAAwD2B,MAAxD,EAAiE;AAEhE,UAAI6U,OAAO,GAAGxW,IAAI,CAAC2V,KAAL,CAAYqO,MAAZ,CAAd;AAEA,aAAOriB,MAAM,CAACwF,aAAP,CAAsB,MAAtB,EAA8B6c,MAA9B,EAAuC5c,IAAvC,CAA6C,UAAW2a,IAAX,EAAkB;AAErE,YAAKvL,OAAO,CAACC,IAAR,KAAiBtW,SAAtB,EAAkC,OAAO4hB,IAAP,CAFmC,CAIrE;;AAEA,YAAIX,SAAJ;AAEA,eAAOzf,MAAM,CAACwF,aAAP,CAAsB,MAAtB,EAA8BqP,OAAO,CAACC,IAAtC,EAA6CrP,IAA7C,CAAmD,UAAWqP,IAAX,EAAkB;AAE3E2K,UAAAA,SAAS,GAAG3K,IAAZ;AAEA,cAAIyN,aAAa,GAAG,EAApB;;AAEA,eAAM,IAAI3jB,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGuV,SAAS,CAAChL,MAAV,CAAiB5V,MAAvC,EAA+CD,CAAC,GAAGsL,EAAnD,EAAuDtL,CAAC,EAAxD,EAA8D;AAE7D2jB,YAAAA,aAAa,CAACrf,IAAd,CAAoBlD,MAAM,CAACwF,aAAP,CAAsB,MAAtB,EAA8Bia,SAAS,CAAChL,MAAV,CAAkB7V,CAAlB,CAA9B,CAApB;AAEA;;AAED,iBAAOuD,OAAO,CAACiB,GAAR,CAAamf,aAAb,CAAP;AAEA,SAdM,EAcH9c,IAdG,CAcG,UAAW+c,UAAX,EAAwB;AAEjCpC,UAAAA,IAAI,CAACa,QAAL,CAAe,UAAW7O,IAAX,EAAkB;AAEhC,gBAAK,CAAEA,IAAI,CAAC8O,MAAZ,EAAqB;AAErB,gBAAIuB,KAAK,GAAG,EAAZ;AACA,gBAAIC,YAAY,GAAG,EAAnB;;AAEA,iBAAM,IAAIrB,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGkB,UAAU,CAAC3jB,MAAjC,EAAyCwiB,CAAC,GAAGC,EAA7C,EAAiDD,CAAC,EAAlD,EAAwD;AAEvD,kBAAIsB,SAAS,GAAGH,UAAU,CAAEnB,CAAF,CAA1B;;AAEA,kBAAKsB,SAAL,EAAiB;AAEhBF,gBAAAA,KAAK,CAACvf,IAAN,CAAYyf,SAAZ;AAEA,oBAAIC,GAAG,GAAG,IAAIzpB,OAAJ,EAAV;;AAEA,oBAAKsmB,SAAS,CAACC,mBAAV,KAAkClhB,SAAvC,EAAmD;AAElDokB,kBAAAA,GAAG,CAACzhB,SAAJ,CAAese,SAAS,CAACC,mBAAV,CAA8B1c,KAA7C,EAAoDqe,CAAC,GAAG,EAAxD;AAEA;;AAEDqB,gBAAAA,YAAY,CAACxf,IAAb,CAAmB0f,GAAnB;AAEA,eAdD,MAcO;AAEN9lB,gBAAAA,OAAO,CAACiD,IAAR,CAAc,kDAAd,EAAkE0f,SAAS,CAAChL,MAAV,CAAkB4M,CAAlB,CAAlE;AAEA;AAED;;AAEDjP,YAAAA,IAAI,CAACyQ,IAAL,CAAW,IAAInoB,QAAJ,CAAc+nB,KAAd,EAAqBC,YAArB,CAAX,EAAgDtQ,IAAI,CAAC0Q,WAArD;AAEA,WAnCD;AAqCA,iBAAO1C,IAAP;AAEA,SAvDM,CAAP;AAyDA,OAjEM,EAiEH3a,IAjEG,CAiEG,UAAW2a,IAAX,EAAkB;AAE3B;AAEAkC,QAAAA,YAAY,CAAChiB,GAAb,CAAkB8f,IAAlB;AAEA,YAAI3d,OAAO,GAAG,EAAd;;AAEA,YAAKoS,OAAO,CAACiN,QAAb,EAAwB;AAEvB,cAAIA,QAAQ,GAAGjN,OAAO,CAACiN,QAAvB;;AAEA,eAAM,IAAIljB,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAG4X,QAAQ,CAACjjB,MAA/B,EAAuCD,CAAC,GAAGsL,EAA3C,EAA+CtL,CAAC,EAAhD,EAAsD;AAErD,gBAAImkB,KAAK,GAAGjB,QAAQ,CAAEljB,CAAF,CAApB;AACA6D,YAAAA,OAAO,CAACS,IAAR,CAAckf,iBAAiB,CAAEW,KAAF,EAAS3C,IAAT,EAAe/hB,IAAf,EAAqB2B,MAArB,CAA/B;AAEA;AAED;;AAED,eAAOmC,OAAO,CAACiB,GAAR,CAAaX,OAAb,CAAP;AAEA,OAxFM,CAAP;AA0FA;;AAED,WAAO,SAASyS,SAAT,CAAoB8N,UAApB,EAAiC;AAEvC,UAAI3kB,IAAI,GAAG,KAAKA,IAAhB;AACA,UAAIR,UAAU,GAAG,KAAKA,UAAtB;AACA,UAAIolB,QAAQ,GAAG,KAAK5kB,IAAL,CAAUsV,MAAV,CAAkBqP,UAAlB,CAAf;AACA,UAAIhjB,MAAM,GAAG,IAAb;AAEA,UAAIsK,KAAK,GAAG,IAAI/P,KAAJ,EAAZ;AACA,UAAK0oB,QAAQ,CAACviB,IAAT,KAAkBlC,SAAvB,EAAmC8L,KAAK,CAAC5J,IAAN,GAAauiB,QAAQ,CAACviB,IAAtB;AAEnC0Q,MAAAA,sBAAsB,CAAE9G,KAAF,EAAS2Y,QAAT,CAAtB;AAEA,UAAKA,QAAQ,CAACplB,UAAd,EAA2BkT,8BAA8B,CAAElT,UAAF,EAAcyM,KAAd,EAAqB2Y,QAArB,CAA9B;AAE3B,UAAIC,OAAO,GAAGD,QAAQ,CAACjP,KAAT,IAAkB,EAAhC;AAEA,UAAIvR,OAAO,GAAG,EAAd;;AAEA,WAAM,IAAI7D,CAAC,GAAG,CAAR,EAAWsL,EAAE,GAAGgZ,OAAO,CAACrkB,MAA9B,EAAsCD,CAAC,GAAGsL,EAA1C,EAA8CtL,CAAC,EAA/C,EAAqD;AAEpD6D,QAAAA,OAAO,CAACS,IAAR,CAAckf,iBAAiB,CAAEc,OAAO,CAAEtkB,CAAF,CAAT,EAAgB0L,KAAhB,EAAuBjM,IAAvB,EAA6B2B,MAA7B,CAA/B;AAEA;;AAED,aAAOmC,OAAO,CAACiB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,eAAO6E,KAAP;AAEA,OAJM,CAAP;AAMA,KA9BD;AAgCA,GApIgC,EAAjC;;AAsIA,SAAO9O,UAAP;AAEA,CA/tGgB,EAAjB;;AAiuGA,SAASA,UAAT","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tScene,\n\tShaderLib,\n\tShaderMaterial,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tVertexColors,\n\tsRGBEncoding\n} from \"../../js/three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tvar shader = ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tmaterialParams.vertexShader = shader.vertexShader;\n\t\t\t\tmaterialParams.fragmentShader = fragmentShader;\n\t\t\t\tmaterialParams.uniforms = uniforms;\n\t\t\t\tmaterialParams.defines = { 'STANDARD': '' };\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {ShaderMaterial} source\n\t\t\t * @return {ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar value = source[ params[ i ] ];\n\t\t\t\t\ttarget[ params[ i ] ] = ( value && value.isColor ) ? value.clone() : value;\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLCubeRenderTarget will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLCubeRenderTarget.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLCubeRenderTarget uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\tbox.expandByVector( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"]}]}