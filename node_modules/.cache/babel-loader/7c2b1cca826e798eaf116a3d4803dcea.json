{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\PLYLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\PLYLoader.js","mtime":1581123525000},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/examples/jsm/loaders/PLYLoader.js"],"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Loader","LoaderUtils","PLYLoader","manager","call","propertyNameMapping","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","text","parse","setPropertyNameMapping","mapping","data","parseHeader","patternHeader","headerText","headerLength","result","exec","length","header","comments","elements","lines","split","currentElement","lineType","lineValues","make_ply_element_property","propertValues","property","type","name","countType","itemType","i","line","trim","shift","join","format","version","push","undefined","count","parseInt","properties","console","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","parseASCII","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","patternBody","body","currentElementCount","handleElement","postProcess","geometry","setIndex","setAttribute","toNonIndexed","computeBoundingSphere","elementName","x","y","z","nx","ny","nz","s","t","red","green","blue","vertex_indices","vertex_index","texcoord","binaryRead","dataview","at","little_endian","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","binaryReadElement","read","parseBinary","DataView","loc","ArrayBuffer","decodeText","Uint8Array"],"mappings":"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","sourcesContent":["/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tvar loader = new PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\nimport {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tLoaderUtils\n} from \"../../../build/three.module.js\";\n\n\nvar PLYLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.propertyNameMapping = {};\n\n};\n\nPLYLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: PLYLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPropertyNameMapping: function ( mapping ) {\n\n\t\tthis.propertyNameMapping = mapping;\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tfunction parseHeader( data ) {\n\n\t\t\tvar patternHeader = /ply([\\s\\S]*)end_header\\r?\\n/;\n\t\t\tvar headerText = '';\n\t\t\tvar headerLength = 0;\n\t\t\tvar result = patternHeader.exec( data );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\theaderText = result[ 1 ];\n\t\t\t\theaderLength = result[ 0 ].length;\n\n\t\t\t}\n\n\t\t\tvar header = {\n\t\t\t\tcomments: [],\n\t\t\t\telements: [],\n\t\t\t\theaderLength: headerLength\n\t\t\t};\n\n\t\t\tvar lines = headerText.split( '\\n' );\n\t\t\tvar currentElement;\n\t\t\tvar lineType, lineValues;\n\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\n\n\t\t\t\tvar property = { type: propertValues[ 0 ] };\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( property.name in propertyNameMapping ) {\n\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\n\n\t\t\t\t}\n\n\t\t\t\treturn property;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line === '' ) continue;\n\n\t\t\t\tlineValues = line.split( /\\s+/ );\n\t\t\t\tlineType = lineValues.shift();\n\t\t\t\tline = lineValues.join( ' ' );\n\n\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\tcase 'format':\n\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'comment':\n\n\t\t\t\t\t\theader.comments.push( line );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'element':\n\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentElement = {};\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\n\t\t\t\t\t\tcurrentElement.properties = [];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'property':\n\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t}\n\n\t\t\treturn header;\n\n\t\t}\n\n\t\tfunction parseASCIINumber( n, type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n\t\t\t\t\treturn parseInt( n );\n\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\n\n\t\t\t\t\treturn parseFloat( n );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseASCIIElement( properties, line ) {\n\n\t\t\tvar values = line.split( /\\s+/ );\n\n\t\t\tvar element = {};\n\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tvar list = [];\n\t\t\t\t\tvar n = parseASCIINumber( values.shift(), properties[ i ].countType );\n\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tfunction parseASCII( data, header ) {\n\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n\t\t\tvar buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tvar result;\n\n\t\t\tvar patternBody = /end_header\\s([\\s\\S]*)$/;\n\t\t\tvar body = '';\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\n\n\t\t\t\tbody = result[ 1 ];\n\n\t\t\t}\n\n\t\t\tvar lines = body.split( '\\n' );\n\t\t\tvar currentElement = 0;\n\t\t\tvar currentElementCount = 0;\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\t\t\t\tif ( line === '' ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentElementCount >= header.elements[ currentElement ].count ) {\n\n\t\t\t\t\tcurrentElement ++;\n\t\t\t\t\tcurrentElementCount = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar element = parseASCIIElement( header.elements[ currentElement ].properties, line );\n\n\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\tcurrentElementCount ++;\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction postProcess( buffer ) {\n\n\t\t\tvar geometry = new BufferGeometry();\n\n\t\t\t// mandatory buffer data\n\n\t\t\tif ( buffer.indices.length > 0 ) {\n\n\t\t\t\tgeometry.setIndex( buffer.indices );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\n\n\t\t\t// optional buffer data\n\n\t\t\tif ( buffer.normals.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.uvs.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.colors.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\n\n\t\t\t\tgeometry = geometry.toNonIndexed();\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction handleElement( buffer, elementName, element ) {\n\n\t\t\tif ( elementName === 'vertex' ) {\n\n\t\t\t\tbuffer.vertices.push( element.x, element.y, element.z );\n\n\t\t\t\tif ( 'nx' in element && 'ny' in element && 'nz' in element ) {\n\n\t\t\t\t\tbuffer.normals.push( element.nx, element.ny, element.nz );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 's' in element && 't' in element ) {\n\n\t\t\t\t\tbuffer.uvs.push( element.s, element.t );\n\n\t\t\t\t}\n\n\t\t\t\tif ( 'red' in element && 'green' in element && 'blue' in element ) {\n\n\t\t\t\t\tbuffer.colors.push( element.red / 255.0, element.green / 255.0, element.blue / 255.0 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( elementName === 'face' ) {\n\n\t\t\t\tvar vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\t\t\t\tvar texcoord = element.texcoord;\n\n\t\t\t\tif ( vertex_indices.length === 3 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\n\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\n\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryRead( dataview, at, type, little_endian ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\t// corespondences for non-specific length types here match rply:\n\t\t\t\tcase 'int8':\t\tcase 'char':\t return [ dataview.getInt8( at ), 1 ];\n\t\t\t\tcase 'uint8':\t\tcase 'uchar':\t return [ dataview.getUint8( at ), 1 ];\n\t\t\t\tcase 'int16':\t\tcase 'short':\t return [ dataview.getInt16( at, little_endian ), 2 ];\n\t\t\t\tcase 'uint16':\tcase 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\n\t\t\t\tcase 'int32':\t\tcase 'int':\t\t return [ dataview.getInt32( at, little_endian ), 4 ];\n\t\t\t\tcase 'uint32':\tcase 'uint':\t return [ dataview.getUint32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float32': case 'float':\t return [ dataview.getFloat32( at, little_endian ), 4 ];\n\t\t\t\tcase 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryReadElement( dataview, at, properties, little_endian ) {\n\n\t\t\tvar element = {};\n\t\t\tvar result, read = 0;\n\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tvar list = [];\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\n\t\t\t\t\tvar n = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\n\t\t\t\t\t\tlist.push( result[ 0 ] );\n\t\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].type, little_endian );\n\t\t\t\t\telement[ properties[ i ].name ] = result[ 0 ];\n\t\t\t\t\tread += result[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn [ element, read ];\n\n\t\t}\n\n\t\tfunction parseBinary( data, header ) {\n\n\t\t\tvar buffer = {\n\t\t\t\tindices: [],\n\t\t\t\tvertices: [],\n\t\t\t\tnormals: [],\n\t\t\t\tuvs: [],\n\t\t\t\tfaceVertexUvs: [],\n\t\t\t\tcolors: []\n\t\t\t};\n\n\t\t\tvar little_endian = ( header.format === 'binary_little_endian' );\n\t\t\tvar body = new DataView( data, header.headerLength );\n\t\t\tvar result, loc = 0;\n\n\t\t\tfor ( var currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n\t\t\t\tfor ( var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\n\n\t\t\t\t\tresult = binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\n\t\t\t\t\tloc += result[ 1 ];\n\t\t\t\t\tvar element = result[ 0 ];\n\n\t\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry;\n\t\tvar scope = this;\n\n\t\tif ( data instanceof ArrayBuffer ) {\n\n\t\t\tvar text = LoaderUtils.decodeText( new Uint8Array( data ) );\n\t\t\tvar header = parseHeader( text );\n\n\t\t\tgeometry = header.format === 'ascii' ? parseASCII( text, header ) : parseBinary( data, header );\n\n\t\t} else {\n\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nexport { PLYLoader };\n"]}]}