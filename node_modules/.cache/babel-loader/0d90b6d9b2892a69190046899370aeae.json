{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\obj2\\shared\\MeshReceiver.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\obj2\\shared\\MeshReceiver.js","mtime":1581177675123},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/obj2/shared/MeshReceiver.js"],"names":["BufferAttribute","BufferGeometry","LineSegments","Mesh","Points","MeshReceiver","materialHandler","logging","enabled","debug","callbacks","onProgress","onMeshAlter","prototype","constructor","setLogging","_setCallbacks","undefined","Function","buildMeshes","meshPayload","meshName","params","buffers","bufferGeometry","vertices","setAttribute","Float32Array","indices","setIndex","Uint32Array","colors","normals","computeVertexNormals","uvs","skinIndex","Uint16Array","skinWeight","material","materialName","key","materialNames","materials","createMultiMaterial","multiMaterial","multiMaterials","getMaterial","push","materialGroups","materialGroup","addGroup","start","count","index","meshes","mesh","callbackOnMeshAlterResult","useOrgMesh","geometryType","detail","isDisregardMesh","providesAlteredMeshes","i","computeBoundingSphere","name","progressMessage","length","meshNames","progress","numericalValue","toFixed","LoadedMeshUserOverride","disregardMesh","alteredMesh","addMesh"],"mappings":"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","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nimport {\n    BufferAttribute,\n    BufferGeometry,\n    LineSegments,\n    Mesh,\n    Points\n} from \"../../../../js/three.module.js\";\n\n\n/**\n *\n * @param {MaterialHandler} materialHandler\n * @constructor\n */\nconst MeshReceiver = function (materialHandler) {\n\n    this.logging = {\n        enabled: false,\n        debug: false\n    };\n\n    this.callbacks = {\n        onProgress: null,\n        onMeshAlter: null\n    };\n    this.materialHandler = materialHandler;\n\n};\n\nMeshReceiver.prototype = {\n\n    constructor: MeshReceiver,\n\n\t/**\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n\t *\n\t * @param {boolean} enabled True or false.\n\t * @param {boolean} debug True or false.\n\t */\n    setLogging: function (enabled, debug) {\n\n        this.logging.enabled = enabled === true;\n        this.logging.debug = debug === true;\n\n    },\n\n\t/**\n\t *\n\t * @param {Function} onProgress\n\t * @param {Function} onMeshAlter\n\t * @private\n\t */\n    _setCallbacks: function (onProgress, onMeshAlter) {\n\n        if (onProgress !== null && onProgress !== undefined && onProgress instanceof Function) {\n\n            this.callbacks.onProgress = onProgress;\n\n        }\n        if (onMeshAlter !== null && onMeshAlter !== undefined && onMeshAlter instanceof Function) {\n\n            this.callbacks.onMeshAlter = onMeshAlter;\n\n        }\n\n    },\n\n\t/**\n\t * Builds one or multiple meshes from the data described in the payload (buffers, params, material info).\n\t *\n\t * @param {Object} meshPayload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n\t * @returns {Mesh[]} mesh Array of {@link Mesh}\n\t */\n    buildMeshes: function (meshPayload) {\n\n        let meshName = meshPayload.params.meshName;\n        let buffers = meshPayload.buffers;\n\n        let bufferGeometry = new BufferGeometry();\n        if (buffers.vertices !== undefined && buffers.vertices !== null) {\n\n            bufferGeometry.setAttribute('position', new BufferAttribute(new Float32Array(buffers.vertices), 3));\n\n        }\n        if (buffers.indices !== undefined && buffers.indices !== null) {\n\n            bufferGeometry.setIndex(new BufferAttribute(new Uint32Array(buffers.indices), 1));\n\n        }\n        if (buffers.colors !== undefined && buffers.colors !== null) {\n\n            bufferGeometry.setAttribute('color', new BufferAttribute(new Float32Array(buffers.colors), 3));\n\n        }\n        if (buffers.normals !== undefined && buffers.normals !== null) {\n\n            bufferGeometry.setAttribute('normal', new BufferAttribute(new Float32Array(buffers.normals), 3));\n\n        } else {\n\n            bufferGeometry.computeVertexNormals();\n\n        }\n        if (buffers.uvs !== undefined && buffers.uvs !== null) {\n\n            bufferGeometry.setAttribute('uv', new BufferAttribute(new Float32Array(buffers.uvs), 2));\n\n        }\n        if (buffers.skinIndex !== undefined && buffers.skinIndex !== null) {\n\n            bufferGeometry.setAttribute('skinIndex', new BufferAttribute(new Uint16Array(buffers.skinIndex), 4));\n\n        }\n        if (buffers.skinWeight !== undefined && buffers.skinWeight !== null) {\n\n            bufferGeometry.setAttribute('skinWeight', new BufferAttribute(new Float32Array(buffers.skinWeight), 4));\n\n        }\n\n        let material, materialName, key;\n        let materialNames = meshPayload.materials.materialNames;\n        let createMultiMaterial = meshPayload.materials.multiMaterial;\n        let multiMaterials = [];\n        for (key in materialNames) {\n\n            materialName = materialNames[key];\n            material = this.materialHandler.getMaterial(materialName);\n            if (createMultiMaterial) multiMaterials.push(material);\n\n        }\n        if (createMultiMaterial) {\n\n            material = multiMaterials;\n            let materialGroups = meshPayload.materials.materialGroups;\n            let materialGroup;\n            for (key in materialGroups) {\n\n                materialGroup = materialGroups[key];\n                bufferGeometry.addGroup(materialGroup.start, materialGroup.count, materialGroup.index);\n\n            }\n\n        }\n\n        let meshes = [];\n        let mesh;\n        let callbackOnMeshAlterResult;\n        let useOrgMesh = true;\n        let geometryType = meshPayload.geometryType === null ? 0 : meshPayload.geometryType;\n\n        if (this.callbacks.onMeshAlter) {\n\n            callbackOnMeshAlterResult = this.callbacks.onMeshAlter(\n                {\n                    detail: {\n                        meshName: meshName,\n                        bufferGeometry: bufferGeometry,\n                        material: material,\n                        geometryType: geometryType\n                    }\n                }\n            );\n\n        }\n\n        // here LoadedMeshUserOverride is required to be provided by the callback used to alter the results\n        if (callbackOnMeshAlterResult) {\n\n            if (callbackOnMeshAlterResult.isDisregardMesh()) {\n\n                useOrgMesh = false;\n\n            } else if (callbackOnMeshAlterResult.providesAlteredMeshes()) {\n\n                for (let i in callbackOnMeshAlterResult.meshes) {\n\n                    meshes.push(callbackOnMeshAlterResult.meshes[i]);\n\n                }\n                useOrgMesh = false;\n\n            }\n\n        }\n        if (useOrgMesh) {\n\n            if (meshPayload.computeBoundingSphere) bufferGeometry.computeBoundingSphere();\n            if (geometryType === 0) {\n\n                mesh = new Mesh(bufferGeometry, material);\n\n            } else if (geometryType === 1) {\n\n                mesh = new LineSegments(bufferGeometry, material);\n\n            } else {\n\n                mesh = new Points(bufferGeometry, material);\n\n            }\n            mesh.name = meshName;\n            meshes.push(mesh);\n\n        }\n\n        let progressMessage = meshPayload.params.meshName;\n        if (meshes.length > 0) {\n\n            let meshNames = [];\n            for (let i in meshes) {\n\n                mesh = meshes[i];\n                meshNames[i] = mesh.name;\n\n            }\n            progressMessage += ': Adding mesh(es) (' + meshNames.length + ': ' + meshNames + ') from input mesh: ' + meshName;\n            progressMessage += ' (' + (meshPayload.progress.numericalValue * 100).toFixed(2) + '%)';\n\n        } else {\n\n            progressMessage += ': Not adding mesh: ' + meshName;\n            progressMessage += ' (' + (meshPayload.progress.numericalValue * 100).toFixed(2) + '%)';\n\n        }\n        if (this.callbacks.onProgress) {\n\n            this.callbacks.onProgress('progress', progressMessage, meshPayload.progress.numericalValue);\n\n        }\n\n        return meshes;\n\n    }\n\n};\n\n/**\n * Object to return by callback onMeshAlter. Used to disregard a certain mesh or to return one to many meshes.\n * @class\n *\n * @param {boolean} disregardMesh=false Tell implementation to completely disregard this mesh\n * @param {boolean} disregardMesh=false Tell implementation that mesh(es) have been altered or added\n */\nconst LoadedMeshUserOverride = function (disregardMesh, alteredMesh) {\n\n    this.disregardMesh = disregardMesh === true;\n    this.alteredMesh = alteredMesh === true;\n    this.meshes = [];\n\n};\n\n\nLoadedMeshUserOverride.prototype = {\n\n    constructor: LoadedMeshUserOverride,\n\n\t/**\n\t * Add a mesh created within callback.\n\t *\n\t * @param {Mesh} mesh\n\t */\n    addMesh: function (mesh) {\n\n        this.meshes.push(mesh);\n        this.alteredMesh = true;\n\n    },\n\n\t/**\n\t * Answers if mesh shall be disregarded completely.\n\t *\n\t * @returns {boolean}\n\t */\n    isDisregardMesh: function () {\n\n        return this.disregardMesh;\n\n    },\n\n\t/**\n\t * Answers if new mesh(es) were created.\n\t *\n\t * @returns {boolean}\n\t */\n    providesAlteredMeshes: function () {\n\n        return this.alteredMesh;\n\n    }\n};\n\nexport {\n    MeshReceiver,\n    LoadedMeshUserOverride\n};\n"]}]}