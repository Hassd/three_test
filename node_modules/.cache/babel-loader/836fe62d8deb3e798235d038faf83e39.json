{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\OBJLoader2.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\OBJLoader2.js","mtime":1581177633927},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/OBJLoader2.js"],"names":["FileLoader","Object3D","Loader","OBJLoader2Parser","MeshReceiver","MaterialHandler","OBJLoader2","manager","call","parser","modelName","instanceNo","baseObject3d","materialHandler","meshReceiver","scope","defaultOnAssetAvailable","payload","_onAssetAvailable","setCallbackOnAssetAvailable","OBJLOADER2_VERSION","console","info","prototype","Object","assign","create","constructor","setLogging","enabled","debug","setMaterialPerSmoothingGroup","materialPerSmoothingGroup","setUseOAsMesh","useOAsMesh","setUseIndices","useIndices","setDisregardNormals","disregardNormals","setModelName","setBaseObject3d","undefined","addMaterials","materials","overrideExisting","onAssetAvailable","setCallbackOnProgress","onProgress","setCallbackOnError","onError","setCallbackOnLoad","onLoad","setCallbackOnMeshAlter","onMeshAlter","_setCallbacks","callbacks","setCallbackOnLoadMaterials","onLoadMaterials","load","url","onFileLoadProgress","Function","errorMessage","event","currentTarget","statusText","responseURL","urlFull","URL","window","location","href","filename","urlParts","split","length","urlPartsPath","slice","join","path","numericalValueRef","numericalValue","lengthComputable","loaded","total","output","toFixed","fileLoaderOnLoad","content","parse","fileLoader","setPath","resourcePath","setResponseType","logging","time","createDefaultMaterials","setMaterials","getMaterials","ArrayBuffer","Uint8Array","execute","String","executeLegacy","timeEnd","cmd","type","meshes","buildMeshes","mesh","add","addPayloadMaterials"],"mappings":"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","sourcesContent":["/**\n * @author Kai Salmen / https://kaisalmen.de\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\n */\n\nimport {\n    FileLoader,\n    Object3D,\n    Loader\n} from \"../../js/three.module.js\";\n\nimport { OBJLoader2Parser } from \"./obj2/worker/parallel/OBJLoader2Parser.js\";\nimport { MeshReceiver } from \"./obj2/shared/MeshReceiver.js\";\nimport { MaterialHandler } from \"./obj2/shared/MaterialHandler.js\";\n\n/**\n * Creates a new OBJLoader2. Use it to load OBJ data from files or to parse OBJ data from arraybuffer or text.\n *\n * @param {LoadingManager} [manager] The loadingManager for the loader to use. Default is {@link LoadingManager}\n * @constructor\n */\nconst OBJLoader2 = function (manager) {\n\n    Loader.call(this, manager);\n\n    this.parser = new OBJLoader2Parser();\n\n    this.modelName = '';\n    this.instanceNo = 0;\n    this.baseObject3d = new Object3D();\n\n    this.materialHandler = new MaterialHandler();\n    this.meshReceiver = new MeshReceiver(this.materialHandler);\n\n    // as OBJLoader2 is no longer derived from OBJLoader2Parser, we need to override the default onAssetAvailable callback\n    let scope = this;\n    let defaultOnAssetAvailable = function (payload) {\n\n        scope._onAssetAvailable(payload);\n\n    };\n    this.parser.setCallbackOnAssetAvailable(defaultOnAssetAvailable);\n\n};\n\nOBJLoader2.OBJLOADER2_VERSION = '3.1.1';\nconsole.info('Using OBJLoader2 version: ' + OBJLoader2.OBJLOADER2_VERSION);\n\n\nOBJLoader2.prototype = Object.assign(Object.create(Loader.prototype), {\n\n    constructor: OBJLoader2,\n\n\t/**\n\t * See {@link OBJLoader2Parser.setLogging}\n\t * @return {OBJLoader2}\n\t */\n    setLogging: function (enabled, debug) {\n\n        this.parser.setLogging(enabled, debug);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setMaterialPerSmoothingGroup}\n\t * @return {OBJLoader2}\n\t */\n    setMaterialPerSmoothingGroup: function (materialPerSmoothingGroup) {\n\n        this.parser.setMaterialPerSmoothingGroup(materialPerSmoothingGroup);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setUseOAsMesh}\n\t * @return {OBJLoader2}\n\t */\n    setUseOAsMesh: function (useOAsMesh) {\n\n        this.parser.setUseOAsMesh(useOAsMesh);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setUseIndices}\n\t * @return {OBJLoader2}\n\t */\n    setUseIndices: function (useIndices) {\n\n        this.parser.setUseIndices(useIndices);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setDisregardNormals}\n\t * @return {OBJLoader2}\n\t */\n    setDisregardNormals: function (disregardNormals) {\n\n        this.parser.setDisregardNormals(disregardNormals);\n        return this;\n\n    },\n\n\t/**\n\t * Set the name of the model.\n\t *\n\t * @param {string} modelName\n\t * @return {OBJLoader2}\n\t */\n    setModelName: function (modelName) {\n\n        this.modelName = modelName ? modelName : this.modelName;\n        return this;\n\n    },\n\n\t/**\n\t * Set the node where the loaded objects will be attached directly.\n\t *\n\t * @param {Object3D} baseObject3d Object already attached to scenegraph where new meshes will be attached to\n\t * @return {OBJLoader2}\n\t */\n    setBaseObject3d: function (baseObject3d) {\n\n        this.baseObject3d = (baseObject3d === undefined || baseObject3d === null) ? this.baseObject3d : baseObject3d;\n        return this;\n\n    },\n\n\t/**\n\t * Add materials as associated array.\n\t *\n\t * @param {Object} materials Object with named {@link Material}\n\t * @param overrideExisting boolean Override existing material\n\t * @return {OBJLoader2}\n\t */\n    addMaterials: function (materials, overrideExisting) {\n\n        this.materialHandler.addMaterials(materials, overrideExisting);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnAssetAvailable}\n\t * @return {OBJLoader2}\n\t */\n    setCallbackOnAssetAvailable: function (onAssetAvailable) {\n\n        this.parser.setCallbackOnAssetAvailable(onAssetAvailable);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnProgress}\n\t * @return {OBJLoader2}\n\t */\n    setCallbackOnProgress: function (onProgress) {\n\n        this.parser.setCallbackOnProgress(onProgress);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnError}\n\t * @return {OBJLoader2}\n\t */\n    setCallbackOnError: function (onError) {\n\n        this.parser.setCallbackOnError(onError);\n        return this;\n\n    },\n\n\t/**\n\t * See {@link OBJLoader2Parser.setCallbackOnLoad}\n\t * @return {OBJLoader2}\n\t */\n    setCallbackOnLoad: function (onLoad) {\n\n        this.parser.setCallbackOnLoad(onLoad);\n        return this;\n\n    },\n\n\t/**\n\t * Register a function that is called once a single mesh is available and it could be altered by the supplied function.\n\t *\n\t * @param {Function} [onMeshAlter]\n\t * @return {OBJLoader2}\n\t */\n    setCallbackOnMeshAlter: function (onMeshAlter) {\n\n        this.meshReceiver._setCallbacks(this.parser.callbacks.onProgress, onMeshAlter);\n        return this;\n\n    },\n\n\t/**\n\t * Register a function that is called once all materials have been loaded and they could be altered by the supplied function.\n\t *\n\t * @param {Function} [onLoadMaterials]\n\t * @return {OBJLoader2}\n\t */\n    setCallbackOnLoadMaterials: function (onLoadMaterials) {\n\n        this.materialHandler._setCallbacks(onLoadMaterials);\n        return this;\n\n    },\n\n\t/**\n\t * Use this convenient method to load a file at the given URL. By default the fileLoader uses an ArrayBuffer.\n\t *\n\t * @param {string}  url A string containing the path/URL of the file to be loaded.\n\t * @param {function} onLoad A function to be called after loading is successfully completed. The function receives loaded Object3D as an argument.\n\t * @param {function} [onFileLoadProgress] A function to be called while the loading is in progress. The argument will be the XMLHttpRequest instance, which contains total and Integer bytes.\n\t * @param {function} [onError] A function to be called if an error occurs during loading. The function receives the error as an argument.\n\t * @param {function} [onMeshAlter] Called after every single mesh is made available by the parser\n\t */\n    load: function (url, onLoad, onFileLoadProgress, onError, onMeshAlter) {\n\n        let scope = this;\n        if (onLoad === null || onLoad === undefined || !(onLoad instanceof Function)) {\n\n            let errorMessage = 'onLoad is not a function! Aborting...';\n            scope.parser.callbacks.onError(errorMessage);\n            throw errorMessage;\n\n        } else {\n\n            this.parser.setCallbackOnLoad(onLoad);\n\n        }\n        if (onError === null || onError === undefined || !(onError instanceof Function)) {\n\n            onError = function (event) {\n\n                let errorMessage = event;\n                if (event.currentTarget && event.currentTarget.statusText !== null) {\n\n                    errorMessage = 'Error occurred while downloading!\\nurl: ' + event.currentTarget.responseURL + '\\nstatus: ' + event.currentTarget.statusText;\n\n                }\n                scope.parser.callbacks.onError(errorMessage);\n\n            };\n\n        }\n        if (!url) {\n\n            onError('An invalid url was provided. Unable to continue!');\n\n        }\n        let urlFull = new URL(url, window.location.href).href;\n        let filename = urlFull;\n        let urlParts = urlFull.split('/');\n        if (urlParts.length > 2) {\n\n            filename = urlParts[urlParts.length - 1];\n            let urlPartsPath = urlParts.slice(0, urlParts.length - 1).join('/') + '/';\n            if (urlPartsPath !== undefined && urlPartsPath !== null) this.path = urlPartsPath;\n\n        }\n        if (onFileLoadProgress === null || onFileLoadProgress === undefined || !(onFileLoadProgress instanceof Function)) {\n\n            let numericalValueRef = 0;\n            let numericalValue = 0;\n            onFileLoadProgress = function (event) {\n\n                if (!event.lengthComputable) return;\n\n                numericalValue = event.loaded / event.total;\n                if (numericalValue > numericalValueRef) {\n\n                    numericalValueRef = numericalValue;\n                    let output = 'Download of \"' + url + '\": ' + (numericalValue * 100).toFixed(2) + '%';\n                    scope.parser.callbacks.onProgress('progressLoad', output, numericalValue);\n\n                }\n\n            };\n\n        }\n\n        this.setCallbackOnMeshAlter(onMeshAlter);\n        let fileLoaderOnLoad = function (content) {\n\n            scope.parser.callbacks.onLoad(scope.parse(content), \"OBJLoader2#load: Parsing completed\");\n\n        };\n        let fileLoader = new FileLoader(this.manager);\n        fileLoader.setPath(this.path || this.resourcePath);\n        fileLoader.setResponseType('arraybuffer');\n        fileLoader.load(filename, fileLoaderOnLoad, onFileLoadProgress, onError);\n\n    },\n\n\t/**\n\t * Parses OBJ data synchronously from arraybuffer or string and returns the {@link Object3D}.\n\t *\n\t * @param {arraybuffer|string} content OBJ data as Uint8Array or String\n\t * @return {Object3D}\n\t */\n    parse: function (content) {\n\n        // fast-fail in case of illegal data\n        if (content === null || content === undefined) {\n\n            throw 'Provided content is not a valid ArrayBuffer or String. Unable to continue parsing';\n\n        }\n        if (this.parser.logging.enabled) {\n\n            console.time('OBJLoader parse: ' + this.modelName);\n\n        }\n\n        // Create default materials beforehand, but do not override previously set materials (e.g. during init)\n        this.materialHandler.createDefaultMaterials(false);\n\n        // code works directly on the material references, parser clear its materials before updating\n        this.parser.setMaterials(this.materialHandler.getMaterials());\n\n        if (content instanceof ArrayBuffer || content instanceof Uint8Array) {\n\n            if (this.parser.logging.enabled) console.info('Parsing arrayBuffer...');\n            this.parser.execute(content);\n\n        } else if (typeof (content) === 'string' || content instanceof String) {\n\n            if (this.parser.logging.enabled) console.info('Parsing text...');\n            this.parser.executeLegacy(content);\n\n        } else {\n\n            this.parser.callbacks.onError('Provided content was neither of type String nor Uint8Array! Aborting...');\n\n        }\n        if (this.parser.logging.enabled) {\n\n            console.timeEnd('OBJLoader parse: ' + this.modelName);\n\n        }\n        return this.baseObject3d;\n\n    },\n\n    _onAssetAvailable: function (payload) {\n\n        if (payload.cmd !== 'assetAvailable') return;\n\n        if (payload.type === 'mesh') {\n\n            let meshes = this.meshReceiver.buildMeshes(payload);\n            for (let mesh of meshes) {\n\n                this.baseObject3d.add(mesh);\n\n            }\n\n        } else if (payload.type === 'material') {\n\n            this.materialHandler.addPayloadMaterials(payload);\n\n        }\n\n    }\n\n});\n\nexport { OBJLoader2 };\n"]}]}