{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\FBXLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\FBXLoader.js","mtime":1581123525000},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/examples/jsm/loaders/FBXLoader.js"],"names":["AmbientLight","AnimationClip","Bone","BufferAttribute","BufferGeometry","ClampToEdgeWrapping","Color","DirectionalLight","EquirectangularReflectionMapping","Euler","FileLoader","Float32BufferAttribute","Group","Line","LineBasicMaterial","Loader","LoaderUtils","MathUtils","Matrix3","Matrix4","Mesh","MeshLambertMaterial","MeshPhongMaterial","NumberKeyframeTrack","Object3D","OrthographicCamera","PerspectiveCamera","PointLight","PropertyBinding","Quaternion","QuaternionKeyframeTrack","RepeatWrapping","Skeleton","SkinnedMesh","SpotLight","Texture","TextureLoader","Uint16BufferAttribute","Vector3","Vector4","VectorKeyframeTrack","VertexColors","sRGBEncoding","Zlib","NURBSCurve","FBXLoader","fbxTree","connections","sceneGraph","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","self","path","extractUrlBase","loader","setPath","setResponseType","buffer","parse","error","setTimeout","itemError","FBXBuffer","isFbxFormatBinary","BinaryParser","FBXText","convertArrayBufferToString","isFbxFormatASCII","Error","getFbxVersion","TextParser","textureLoader","resourcePath","setCrossOrigin","crossOrigin","FBXTreeParser","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","GeometryParser","parseScene","connectionMap","Map","rawConnections","Connections","forEach","rawConnection","fromID","toID","relationship","has","set","parents","children","parentRelationship","ID","get","push","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","parseInt","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","byteLength","base64Content","image","parseImage","filename","undefined","split","pop","content","fileName","extension","slice","lastIndexOf","toLowerCase","type","getHandler","console","warn","array","Uint8Array","window","URL","createObjectURL","Blob","textureMap","textureNodes","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","wrapT","values","Scaling","repeat","x","y","currentPath","length","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","setValues","BumpFactor","bumpScale","Diffuse","color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","displacementMap","emissiveMap","normalMap","envMap","mapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","TransformLink","a","Indexes","Weights","bones","rawMorphTargets","i","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","parentConnections","connection","parent","add","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix4","animations","AnimationParser","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","copy","cameraAttribute","attr","NodeAttribute","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","setFocalLength","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","decay","angle","Math","PI","InnerAngle","degToRad","penumbra","OuterAngle","max","CastShadows","castShadow","geometry","attributes","vertexColors","FBX_Deformer","skinning","normalizeSkinWeights","reduce","geo","linewidth","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","target","position","lookAt","bindMatrices","parsePoseNodes","geoRelationships","geoConnParent","bind","BindPoseNode","Pose","poseNodes","PoseNode","Array","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","r","g","b","isMesh","morphAttributes","setupMorphMaterial","index","uuid","matUuid","sharedMat","mat","clonedMat","clone","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","vertex","setAttribute","colors","weightsIndices","vertexWeights","normal","normalMatrix","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","j","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","degree","knots","KnotVector","controlPoints","pointsValues","Points","l","startKnot","endKnot","Form","curve","vertices","getPoints","positions","toArray","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","match","curveNode","curves","rawCurves","animationCurve","times","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","z","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","decompose","setFromQuaternion","T","keys","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","interpolateRotations","setFromEuler","inverse","quaternion","euler","quaternionValues","premultiply","multiply","val","morphNum","getObjectByName","morphTargetDictionary","sort","elem","prevValue","xIndex","yIndex","zIndex","time","xValue","yValue","zValue","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","timeSpan","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","text","allNodes","FBXTree","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","parentName","parseNodeSpecialProperty","connProps","from","to","rest","append","parseNumberArray","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","BinaryReader","skip","version","getUint32","log","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","propertyListLen","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","inflate","Inflate","reader2","decompress","littleEndian","dv","DataView","offset","low","high","nullByte","decodeText","CORRECT","cursor","read","result","num","versionRegExp","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lParentTM","lLSM","lParentGSM","lParentGRSM","copyPosition","getInverse","lGlobalRS","lParentLSM","lParentGSM_noLocal","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"mappings":"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","sourcesContent":["/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\nimport {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tVertexColors,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\nimport { Zlib } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n\n\nvar FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar self = this;\n\n\t\t\tvar path = ( self.path === '' ) ? LoaderUtils.extractUrlBase( url ) : self.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( self.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( self.parse( buffer, path ) );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tself.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\t\tparameters.alphaMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar self = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tself.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = VertexColors;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar self = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tself.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tself.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar self = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tself.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar self = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tself.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar self = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( self.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar self = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( self.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( self.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tself.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tself.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tself.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tself.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tconsole.log( 'THREE.FBXLoader: FBX binary version: ' + version );\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t// note: do not remove this even if you get a linter warning as it moves the buffer forward\n\t\t\tvar propertyListLen = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Zlib.Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tvar lLSM;\n\t\tvar lParentGSM;\n\t\tvar lParentGRSM;\n\n\t\tlParentTM.copyPosition( lParentGX );\n\t\tlParentGRSM = lParentTM.getInverse( lParentTM ).multiply( lParentGX );\n\t\tlParentGSM = lParentGRM.getInverse( lParentGRM ).multiply( lParentGRSM );\n\t\tlLSM = lScalingM;\n\n\t\tvar lGlobalRS;\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM = new Matrix4().copy( lScalingM );\n\n\t\t\tvar lParentGSM_noLocal = lParentGSM.multiply( lParentLSM.getInverse( lParentLSM ) );\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t\t}\n\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = lTranslationM.multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM.getInverse( lRotationPivotM ) ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM.getInverse( lScalingPivotM ) );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = lParentGX.multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = lGlobalT.multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\nexport { FBXLoader };\n"]}]}