{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\PLYLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\PLYLoader.js","mtime":1581176443160},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGEtdmlldyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtZmxvYXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1pbnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nIjsKCi8qKgogKiBAYXV0aG9yIFdlaSBNZW5nIC8gaHR0cDovL2Fib3V0Lm1lL21lbndheQogKgogKiBEZXNjcmlwdGlvbjogQSBUSFJFRSBsb2FkZXIgZm9yIFBMWSBBU0NJSSBmaWxlcyAoa25vd24gYXMgdGhlIFBvbHlnb24KICogRmlsZSBGb3JtYXQgb3IgdGhlIFN0YW5mb3JkIFRyaWFuZ2xlIEZvcm1hdCkuCiAqCiAqIExpbWl0YXRpb25zOiBBU0NJSSBkZWNvZGluZyBhc3N1bWVzIGZpbGUgaXMgVVRGLTguCiAqCiAqIFVzYWdlOgogKgl2YXIgbG9hZGVyID0gbmV3IFBMWUxvYWRlcigpOwogKglsb2FkZXIubG9hZCgnLi9tb2RlbHMvcGx5L2FzY2lpL2RvbHBoaW5zLnBseScsIGZ1bmN0aW9uIChnZW9tZXRyeSkgewogKgogKgkJc2NlbmUuYWRkKCBuZXcgVEhSRUUuTWVzaCggZ2VvbWV0cnkgKSApOwogKgogKgl9ICk7CiAqCiAqIElmIHRoZSBQTFkgZmlsZSB1c2VzIG5vbiBzdGFuZGFyZCBwcm9wZXJ0eSBuYW1lcywgdGhleSBjYW4gYmUgbWFwcGVkIHdoaWxlCiAqIGxvYWRpbmcuIEZvciBleGFtcGxlLCB0aGUgZm9sbG93aW5nIG1hcHMgdGhlIHByb3BlcnRpZXMKICog4oCcZGlmZnVzZV8ocmVkfGdyZWVufGJsdWUp4oCdIGluIHRoZSBmaWxlIHRvIHN0YW5kYXJkIGNvbG9yIG5hbWVzLgogKgogKiBsb2FkZXIuc2V0UHJvcGVydHlOYW1lTWFwcGluZyggewogKglkaWZmdXNlX3JlZDogJ3JlZCcsCiAqCWRpZmZ1c2VfZ3JlZW46ICdncmVlbicsCiAqCWRpZmZ1c2VfYmx1ZTogJ2JsdWUnCiAqIH0gKTsKICoKICovCmltcG9ydCB7IEJ1ZmZlckdlb21ldHJ5LCBGaWxlTG9hZGVyLCBGbG9hdDMyQnVmZmVyQXR0cmlidXRlLCBMb2FkZXIsIExvYWRlclV0aWxzIH0gZnJvbSAiLi4vLi4vanMvdGhyZWUubW9kdWxlLmpzIjsKCnZhciBQTFlMb2FkZXIgPSBmdW5jdGlvbiBQTFlMb2FkZXIobWFuYWdlcikgewogIExvYWRlci5jYWxsKHRoaXMsIG1hbmFnZXIpOwogIHRoaXMucHJvcGVydHlOYW1lTWFwcGluZyA9IHt9Owp9OwoKUExZTG9hZGVyLnByb3RvdHlwZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmNyZWF0ZShMb2FkZXIucHJvdG90eXBlKSwgewogIGNvbnN0cnVjdG9yOiBQTFlMb2FkZXIsCiAgbG9hZDogZnVuY3Rpb24gbG9hZCh1cmwsIG9uTG9hZCwgb25Qcm9ncmVzcywgb25FcnJvcikgewogICAgdmFyIHNjb3BlID0gdGhpczsKICAgIHZhciBsb2FkZXIgPSBuZXcgRmlsZUxvYWRlcih0aGlzLm1hbmFnZXIpOwogICAgbG9hZGVyLnNldFBhdGgodGhpcy5wYXRoKTsKICAgIGxvYWRlci5zZXRSZXNwb25zZVR5cGUoJ2FycmF5YnVmZmVyJyk7CiAgICBsb2FkZXIubG9hZCh1cmwsIGZ1bmN0aW9uICh0ZXh0KSB7CiAgICAgIG9uTG9hZChzY29wZS5wYXJzZSh0ZXh0KSk7CiAgICB9LCBvblByb2dyZXNzLCBvbkVycm9yKTsKICB9LAogIHNldFByb3BlcnR5TmFtZU1hcHBpbmc6IGZ1bmN0aW9uIHNldFByb3BlcnR5TmFtZU1hcHBpbmcobWFwcGluZykgewogICAgdGhpcy5wcm9wZXJ0eU5hbWVNYXBwaW5nID0gbWFwcGluZzsKICB9LAogIHBhcnNlOiBmdW5jdGlvbiBwYXJzZShkYXRhKSB7CiAgICBmdW5jdGlvbiBwYXJzZUhlYWRlcihkYXRhKSB7CiAgICAgIHZhciBwYXR0ZXJuSGVhZGVyID0gL3BseShbXHNcU10qKWVuZF9oZWFkZXJccj9cbi87CiAgICAgIHZhciBoZWFkZXJUZXh0ID0gJyc7CiAgICAgIHZhciBoZWFkZXJMZW5ndGggPSAwOwogICAgICB2YXIgcmVzdWx0ID0gcGF0dGVybkhlYWRlci5leGVjKGRhdGEpOwoKICAgICAgaWYgKHJlc3VsdCAhPT0gbnVsbCkgewogICAgICAgIGhlYWRlclRleHQgPSByZXN1bHRbMV07CiAgICAgICAgaGVhZGVyTGVuZ3RoID0gcmVzdWx0WzBdLmxlbmd0aDsKICAgICAgfQoKICAgICAgdmFyIGhlYWRlciA9IHsKICAgICAgICBjb21tZW50czogW10sCiAgICAgICAgZWxlbWVudHM6IFtdLAogICAgICAgIGhlYWRlckxlbmd0aDogaGVhZGVyTGVuZ3RoCiAgICAgIH07CiAgICAgIHZhciBsaW5lcyA9IGhlYWRlclRleHQuc3BsaXQoJ1xuJyk7CiAgICAgIHZhciBjdXJyZW50RWxlbWVudDsKICAgICAgdmFyIGxpbmVUeXBlLCBsaW5lVmFsdWVzOwoKICAgICAgZnVuY3Rpb24gbWFrZV9wbHlfZWxlbWVudF9wcm9wZXJ0eShwcm9wZXJ0VmFsdWVzLCBwcm9wZXJ0eU5hbWVNYXBwaW5nKSB7CiAgICAgICAgdmFyIHByb3BlcnR5ID0gewogICAgICAgICAgdHlwZTogcHJvcGVydFZhbHVlc1swXQogICAgICAgIH07CgogICAgICAgIGlmIChwcm9wZXJ0eS50eXBlID09PSAnbGlzdCcpIHsKICAgICAgICAgIHByb3BlcnR5Lm5hbWUgPSBwcm9wZXJ0VmFsdWVzWzNdOwogICAgICAgICAgcHJvcGVydHkuY291bnRUeXBlID0gcHJvcGVydFZhbHVlc1sxXTsKICAgICAgICAgIHByb3BlcnR5Lml0ZW1UeXBlID0gcHJvcGVydFZhbHVlc1syXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcHJvcGVydHkubmFtZSA9IHByb3BlcnRWYWx1ZXNbMV07CiAgICAgICAgfQoKICAgICAgICBpZiAocHJvcGVydHkubmFtZSBpbiBwcm9wZXJ0eU5hbWVNYXBwaW5nKSB7CiAgICAgICAgICBwcm9wZXJ0eS5uYW1lID0gcHJvcGVydHlOYW1lTWFwcGluZ1twcm9wZXJ0eS5uYW1lXTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBwcm9wZXJ0eTsKICAgICAgfQoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBsaW5lID0gbGluZXNbaV07CiAgICAgICAgbGluZSA9IGxpbmUudHJpbSgpOwogICAgICAgIGlmIChsaW5lID09PSAnJykgY29udGludWU7CiAgICAgICAgbGluZVZhbHVlcyA9IGxpbmUuc3BsaXQoL1xzKy8pOwogICAgICAgIGxpbmVUeXBlID0gbGluZVZhbHVlcy5zaGlmdCgpOwogICAgICAgIGxpbmUgPSBsaW5lVmFsdWVzLmpvaW4oJyAnKTsKCiAgICAgICAgc3dpdGNoIChsaW5lVHlwZSkgewogICAgICAgICAgY2FzZSAnZm9ybWF0JzoKICAgICAgICAgICAgaGVhZGVyLmZvcm1hdCA9IGxpbmVWYWx1ZXNbMF07CiAgICAgICAgICAgIGhlYWRlci52ZXJzaW9uID0gbGluZVZhbHVlc1sxXTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAnY29tbWVudCc6CiAgICAgICAgICAgIGhlYWRlci5jb21tZW50cy5wdXNoKGxpbmUpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlICdlbGVtZW50JzoKICAgICAgICAgICAgaWYgKGN1cnJlbnRFbGVtZW50ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICBoZWFkZXIuZWxlbWVudHMucHVzaChjdXJyZW50RWxlbWVudCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGN1cnJlbnRFbGVtZW50ID0ge307CiAgICAgICAgICAgIGN1cnJlbnRFbGVtZW50Lm5hbWUgPSBsaW5lVmFsdWVzWzBdOwogICAgICAgICAgICBjdXJyZW50RWxlbWVudC5jb3VudCA9IHBhcnNlSW50KGxpbmVWYWx1ZXNbMV0pOwogICAgICAgICAgICBjdXJyZW50RWxlbWVudC5wcm9wZXJ0aWVzID0gW107CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgJ3Byb3BlcnR5JzoKICAgICAgICAgICAgY3VycmVudEVsZW1lbnQucHJvcGVydGllcy5wdXNoKG1ha2VfcGx5X2VsZW1lbnRfcHJvcGVydHkobGluZVZhbHVlcywgc2NvcGUucHJvcGVydHlOYW1lTWFwcGluZykpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICBjb25zb2xlLmxvZygndW5oYW5kbGVkJywgbGluZVR5cGUsIGxpbmVWYWx1ZXMpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKGN1cnJlbnRFbGVtZW50ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBoZWFkZXIuZWxlbWVudHMucHVzaChjdXJyZW50RWxlbWVudCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBoZWFkZXI7CiAgICB9CgogICAgZnVuY3Rpb24gcGFyc2VBU0NJSU51bWJlcihuLCB0eXBlKSB7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgJ2NoYXInOgogICAgICAgIGNhc2UgJ3VjaGFyJzoKICAgICAgICBjYXNlICdzaG9ydCc6CiAgICAgICAgY2FzZSAndXNob3J0JzoKICAgICAgICBjYXNlICdpbnQnOgogICAgICAgIGNhc2UgJ3VpbnQnOgogICAgICAgIGNhc2UgJ2ludDgnOgogICAgICAgIGNhc2UgJ3VpbnQ4JzoKICAgICAgICBjYXNlICdpbnQxNic6CiAgICAgICAgY2FzZSAndWludDE2JzoKICAgICAgICBjYXNlICdpbnQzMic6CiAgICAgICAgY2FzZSAndWludDMyJzoKICAgICAgICAgIHJldHVybiBwYXJzZUludChuKTsKCiAgICAgICAgY2FzZSAnZmxvYXQnOgogICAgICAgIGNhc2UgJ2RvdWJsZSc6CiAgICAgICAgY2FzZSAnZmxvYXQzMic6CiAgICAgICAgY2FzZSAnZmxvYXQ2NCc6CiAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChuKTsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHBhcnNlQVNDSUlFbGVtZW50KHByb3BlcnRpZXMsIGxpbmUpIHsKICAgICAgdmFyIHZhbHVlcyA9IGxpbmUuc3BsaXQoL1xzKy8pOwogICAgICB2YXIgZWxlbWVudCA9IHt9OwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHByb3BlcnRpZXNbaV0udHlwZSA9PT0gJ2xpc3QnKSB7CiAgICAgICAgICB2YXIgbGlzdCA9IFtdOwogICAgICAgICAgdmFyIG4gPSBwYXJzZUFTQ0lJTnVtYmVyKHZhbHVlcy5zaGlmdCgpLCBwcm9wZXJ0aWVzW2ldLmNvdW50VHlwZSk7CgogICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBuOyBqKyspIHsKICAgICAgICAgICAgbGlzdC5wdXNoKHBhcnNlQVNDSUlOdW1iZXIodmFsdWVzLnNoaWZ0KCksIHByb3BlcnRpZXNbaV0uaXRlbVR5cGUpKTsKICAgICAgICAgIH0KCiAgICAgICAgICBlbGVtZW50W3Byb3BlcnRpZXNbaV0ubmFtZV0gPSBsaXN0OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBlbGVtZW50W3Byb3BlcnRpZXNbaV0ubmFtZV0gPSBwYXJzZUFTQ0lJTnVtYmVyKHZhbHVlcy5zaGlmdCgpLCBwcm9wZXJ0aWVzW2ldLnR5cGUpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGVsZW1lbnQ7CiAgICB9CgogICAgZnVuY3Rpb24gcGFyc2VBU0NJSShkYXRhLCBoZWFkZXIpIHsKICAgICAgLy8gUExZIGFzY2lpIGZvcm1hdCBzcGVjaWZpY2F0aW9uLCBhcyBwZXIgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9QTFlfKGZpbGVfZm9ybWF0KQogICAgICB2YXIgYnVmZmVyID0gewogICAgICAgIGluZGljZXM6IFtdLAogICAgICAgIHZlcnRpY2VzOiBbXSwKICAgICAgICBub3JtYWxzOiBbXSwKICAgICAgICB1dnM6IFtdLAogICAgICAgIGZhY2VWZXJ0ZXhVdnM6IFtdLAogICAgICAgIGNvbG9yczogW10KICAgICAgfTsKICAgICAgdmFyIHJlc3VsdDsKICAgICAgdmFyIHBhdHRlcm5Cb2R5ID0gL2VuZF9oZWFkZXJccyhbXHNcU10qKSQvOwogICAgICB2YXIgYm9keSA9ICcnOwoKICAgICAgaWYgKChyZXN1bHQgPSBwYXR0ZXJuQm9keS5leGVjKGRhdGEpKSAhPT0gbnVsbCkgewogICAgICAgIGJvZHkgPSByZXN1bHRbMV07CiAgICAgIH0KCiAgICAgIHZhciBsaW5lcyA9IGJvZHkuc3BsaXQoJ1xuJyk7CiAgICAgIHZhciBjdXJyZW50RWxlbWVudCA9IDA7CiAgICAgIHZhciBjdXJyZW50RWxlbWVudENvdW50ID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgbGluZSA9IGxpbmVzW2ldOwogICAgICAgIGxpbmUgPSBsaW5lLnRyaW0oKTsKCiAgICAgICAgaWYgKGxpbmUgPT09ICcnKSB7CiAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CgogICAgICAgIGlmIChjdXJyZW50RWxlbWVudENvdW50ID49IGhlYWRlci5lbGVtZW50c1tjdXJyZW50RWxlbWVudF0uY291bnQpIHsKICAgICAgICAgIGN1cnJlbnRFbGVtZW50Kys7CiAgICAgICAgICBjdXJyZW50RWxlbWVudENvdW50ID0gMDsKICAgICAgICB9CgogICAgICAgIHZhciBlbGVtZW50ID0gcGFyc2VBU0NJSUVsZW1lbnQoaGVhZGVyLmVsZW1lbnRzW2N1cnJlbnRFbGVtZW50XS5wcm9wZXJ0aWVzLCBsaW5lKTsKICAgICAgICBoYW5kbGVFbGVtZW50KGJ1ZmZlciwgaGVhZGVyLmVsZW1lbnRzW2N1cnJlbnRFbGVtZW50XS5uYW1lLCBlbGVtZW50KTsKICAgICAgICBjdXJyZW50RWxlbWVudENvdW50Kys7CiAgICAgIH0KCiAgICAgIHJldHVybiBwb3N0UHJvY2VzcyhidWZmZXIpOwogICAgfQoKICAgIGZ1bmN0aW9uIHBvc3RQcm9jZXNzKGJ1ZmZlcikgewogICAgICB2YXIgZ2VvbWV0cnkgPSBuZXcgQnVmZmVyR2VvbWV0cnkoKTsgLy8gbWFuZGF0b3J5IGJ1ZmZlciBkYXRhCgogICAgICBpZiAoYnVmZmVyLmluZGljZXMubGVuZ3RoID4gMCkgewogICAgICAgIGdlb21ldHJ5LnNldEluZGV4KGJ1ZmZlci5pbmRpY2VzKTsKICAgICAgfQoKICAgICAgZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBGbG9hdDMyQnVmZmVyQXR0cmlidXRlKGJ1ZmZlci52ZXJ0aWNlcywgMykpOyAvLyBvcHRpb25hbCBidWZmZXIgZGF0YQoKICAgICAgaWYgKGJ1ZmZlci5ub3JtYWxzLmxlbmd0aCA+IDApIHsKICAgICAgICBnZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ25vcm1hbCcsIG5ldyBGbG9hdDMyQnVmZmVyQXR0cmlidXRlKGJ1ZmZlci5ub3JtYWxzLCAzKSk7CiAgICAgIH0KCiAgICAgIGlmIChidWZmZXIudXZzLmxlbmd0aCA+IDApIHsKICAgICAgICBnZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ3V2JywgbmV3IEZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUoYnVmZmVyLnV2cywgMikpOwogICAgICB9CgogICAgICBpZiAoYnVmZmVyLmNvbG9ycy5sZW5ndGggPiAwKSB7CiAgICAgICAgZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCdjb2xvcicsIG5ldyBGbG9hdDMyQnVmZmVyQXR0cmlidXRlKGJ1ZmZlci5jb2xvcnMsIDMpKTsKICAgICAgfQoKICAgICAgaWYgKGJ1ZmZlci5mYWNlVmVydGV4VXZzLmxlbmd0aCA+IDApIHsKICAgICAgICBnZW9tZXRyeSA9IGdlb21ldHJ5LnRvTm9uSW5kZXhlZCgpOwogICAgICAgIGdlb21ldHJ5LnNldEF0dHJpYnV0ZSgndXYnLCBuZXcgRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShidWZmZXIuZmFjZVZlcnRleFV2cywgMikpOwogICAgICB9CgogICAgICBnZW9tZXRyeS5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTsKICAgICAgcmV0dXJuIGdlb21ldHJ5OwogICAgfQoKICAgIGZ1bmN0aW9uIGhhbmRsZUVsZW1lbnQoYnVmZmVyLCBlbGVtZW50TmFtZSwgZWxlbWVudCkgewogICAgICBpZiAoZWxlbWVudE5hbWUgPT09ICd2ZXJ0ZXgnKSB7CiAgICAgICAgYnVmZmVyLnZlcnRpY2VzLnB1c2goZWxlbWVudC54LCBlbGVtZW50LnksIGVsZW1lbnQueik7CgogICAgICAgIGlmICgnbngnIGluIGVsZW1lbnQgJiYgJ255JyBpbiBlbGVtZW50ICYmICdueicgaW4gZWxlbWVudCkgewogICAgICAgICAgYnVmZmVyLm5vcm1hbHMucHVzaChlbGVtZW50Lm54LCBlbGVtZW50Lm55LCBlbGVtZW50Lm56KTsKICAgICAgICB9CgogICAgICAgIGlmICgncycgaW4gZWxlbWVudCAmJiAndCcgaW4gZWxlbWVudCkgewogICAgICAgICAgYnVmZmVyLnV2cy5wdXNoKGVsZW1lbnQucywgZWxlbWVudC50KTsKICAgICAgICB9CgogICAgICAgIGlmICgncmVkJyBpbiBlbGVtZW50ICYmICdncmVlbicgaW4gZWxlbWVudCAmJiAnYmx1ZScgaW4gZWxlbWVudCkgewogICAgICAgICAgYnVmZmVyLmNvbG9ycy5wdXNoKGVsZW1lbnQucmVkIC8gMjU1LjAsIGVsZW1lbnQuZ3JlZW4gLyAyNTUuMCwgZWxlbWVudC5ibHVlIC8gMjU1LjApOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZSA9PT0gJ2ZhY2UnKSB7CiAgICAgICAgdmFyIHZlcnRleF9pbmRpY2VzID0gZWxlbWVudC52ZXJ0ZXhfaW5kaWNlcyB8fCBlbGVtZW50LnZlcnRleF9pbmRleDsgLy8gaXNzdWUgIzkzMzgKCiAgICAgICAgdmFyIHRleGNvb3JkID0gZWxlbWVudC50ZXhjb29yZDsKCiAgICAgICAgaWYgKHZlcnRleF9pbmRpY2VzLmxlbmd0aCA9PT0gMykgewogICAgICAgICAgYnVmZmVyLmluZGljZXMucHVzaCh2ZXJ0ZXhfaW5kaWNlc1swXSwgdmVydGV4X2luZGljZXNbMV0sIHZlcnRleF9pbmRpY2VzWzJdKTsKCiAgICAgICAgICBpZiAodGV4Y29vcmQgJiYgdGV4Y29vcmQubGVuZ3RoID09PSA2KSB7CiAgICAgICAgICAgIGJ1ZmZlci5mYWNlVmVydGV4VXZzLnB1c2godGV4Y29vcmRbMF0sIHRleGNvb3JkWzFdKTsKICAgICAgICAgICAgYnVmZmVyLmZhY2VWZXJ0ZXhVdnMucHVzaCh0ZXhjb29yZFsyXSwgdGV4Y29vcmRbM10pOwogICAgICAgICAgICBidWZmZXIuZmFjZVZlcnRleFV2cy5wdXNoKHRleGNvb3JkWzRdLCB0ZXhjb29yZFs1XSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmICh2ZXJ0ZXhfaW5kaWNlcy5sZW5ndGggPT09IDQpIHsKICAgICAgICAgIGJ1ZmZlci5pbmRpY2VzLnB1c2godmVydGV4X2luZGljZXNbMF0sIHZlcnRleF9pbmRpY2VzWzFdLCB2ZXJ0ZXhfaW5kaWNlc1szXSk7CiAgICAgICAgICBidWZmZXIuaW5kaWNlcy5wdXNoKHZlcnRleF9pbmRpY2VzWzFdLCB2ZXJ0ZXhfaW5kaWNlc1syXSwgdmVydGV4X2luZGljZXNbM10pOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGJpbmFyeVJlYWQoZGF0YXZpZXcsIGF0LCB0eXBlLCBsaXR0bGVfZW5kaWFuKSB7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIC8vIGNvcmVzcG9uZGVuY2VzIGZvciBub24tc3BlY2lmaWMgbGVuZ3RoIHR5cGVzIGhlcmUgbWF0Y2ggcnBseToKICAgICAgICBjYXNlICdpbnQ4JzoKICAgICAgICBjYXNlICdjaGFyJzoKICAgICAgICAgIHJldHVybiBbZGF0YXZpZXcuZ2V0SW50OChhdCksIDFdOwoKICAgICAgICBjYXNlICd1aW50OCc6CiAgICAgICAgY2FzZSAndWNoYXInOgogICAgICAgICAgcmV0dXJuIFtkYXRhdmlldy5nZXRVaW50OChhdCksIDFdOwoKICAgICAgICBjYXNlICdpbnQxNic6CiAgICAgICAgY2FzZSAnc2hvcnQnOgogICAgICAgICAgcmV0dXJuIFtkYXRhdmlldy5nZXRJbnQxNihhdCwgbGl0dGxlX2VuZGlhbiksIDJdOwoKICAgICAgICBjYXNlICd1aW50MTYnOgogICAgICAgIGNhc2UgJ3VzaG9ydCc6CiAgICAgICAgICByZXR1cm4gW2RhdGF2aWV3LmdldFVpbnQxNihhdCwgbGl0dGxlX2VuZGlhbiksIDJdOwoKICAgICAgICBjYXNlICdpbnQzMic6CiAgICAgICAgY2FzZSAnaW50JzoKICAgICAgICAgIHJldHVybiBbZGF0YXZpZXcuZ2V0SW50MzIoYXQsIGxpdHRsZV9lbmRpYW4pLCA0XTsKCiAgICAgICAgY2FzZSAndWludDMyJzoKICAgICAgICBjYXNlICd1aW50JzoKICAgICAgICAgIHJldHVybiBbZGF0YXZpZXcuZ2V0VWludDMyKGF0LCBsaXR0bGVfZW5kaWFuKSwgNF07CgogICAgICAgIGNhc2UgJ2Zsb2F0MzInOgogICAgICAgIGNhc2UgJ2Zsb2F0JzoKICAgICAgICAgIHJldHVybiBbZGF0YXZpZXcuZ2V0RmxvYXQzMihhdCwgbGl0dGxlX2VuZGlhbiksIDRdOwoKICAgICAgICBjYXNlICdmbG9hdDY0JzoKICAgICAgICBjYXNlICdkb3VibGUnOgogICAgICAgICAgcmV0dXJuIFtkYXRhdmlldy5nZXRGbG9hdDY0KGF0LCBsaXR0bGVfZW5kaWFuKSwgOF07CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBiaW5hcnlSZWFkRWxlbWVudChkYXRhdmlldywgYXQsIHByb3BlcnRpZXMsIGxpdHRsZV9lbmRpYW4pIHsKICAgICAgdmFyIGVsZW1lbnQgPSB7fTsKICAgICAgdmFyIHJlc3VsdCwKICAgICAgICAgIHJlYWQgPSAwOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wZXJ0aWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHByb3BlcnRpZXNbaV0udHlwZSA9PT0gJ2xpc3QnKSB7CiAgICAgICAgICB2YXIgbGlzdCA9IFtdOwogICAgICAgICAgcmVzdWx0ID0gYmluYXJ5UmVhZChkYXRhdmlldywgYXQgKyByZWFkLCBwcm9wZXJ0aWVzW2ldLmNvdW50VHlwZSwgbGl0dGxlX2VuZGlhbik7CiAgICAgICAgICB2YXIgbiA9IHJlc3VsdFswXTsKICAgICAgICAgIHJlYWQgKz0gcmVzdWx0WzFdOwoKICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbjsgaisrKSB7CiAgICAgICAgICAgIHJlc3VsdCA9IGJpbmFyeVJlYWQoZGF0YXZpZXcsIGF0ICsgcmVhZCwgcHJvcGVydGllc1tpXS5pdGVtVHlwZSwgbGl0dGxlX2VuZGlhbik7CiAgICAgICAgICAgIGxpc3QucHVzaChyZXN1bHRbMF0pOwogICAgICAgICAgICByZWFkICs9IHJlc3VsdFsxXTsKICAgICAgICAgIH0KCiAgICAgICAgICBlbGVtZW50W3Byb3BlcnRpZXNbaV0ubmFtZV0gPSBsaXN0OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXN1bHQgPSBiaW5hcnlSZWFkKGRhdGF2aWV3LCBhdCArIHJlYWQsIHByb3BlcnRpZXNbaV0udHlwZSwgbGl0dGxlX2VuZGlhbik7CiAgICAgICAgICBlbGVtZW50W3Byb3BlcnRpZXNbaV0ubmFtZV0gPSByZXN1bHRbMF07CiAgICAgICAgICByZWFkICs9IHJlc3VsdFsxXTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBbZWxlbWVudCwgcmVhZF07CiAgICB9CgogICAgZnVuY3Rpb24gcGFyc2VCaW5hcnkoZGF0YSwgaGVhZGVyKSB7CiAgICAgIHZhciBidWZmZXIgPSB7CiAgICAgICAgaW5kaWNlczogW10sCiAgICAgICAgdmVydGljZXM6IFtdLAogICAgICAgIG5vcm1hbHM6IFtdLAogICAgICAgIHV2czogW10sCiAgICAgICAgZmFjZVZlcnRleFV2czogW10sCiAgICAgICAgY29sb3JzOiBbXQogICAgICB9OwogICAgICB2YXIgbGl0dGxlX2VuZGlhbiA9IGhlYWRlci5mb3JtYXQgPT09ICdiaW5hcnlfbGl0dGxlX2VuZGlhbic7CiAgICAgIHZhciBib2R5ID0gbmV3IERhdGFWaWV3KGRhdGEsIGhlYWRlci5oZWFkZXJMZW5ndGgpOwogICAgICB2YXIgcmVzdWx0LAogICAgICAgICAgbG9jID0gMDsKCiAgICAgIGZvciAodmFyIGN1cnJlbnRFbGVtZW50ID0gMDsgY3VycmVudEVsZW1lbnQgPCBoZWFkZXIuZWxlbWVudHMubGVuZ3RoOyBjdXJyZW50RWxlbWVudCsrKSB7CiAgICAgICAgZm9yICh2YXIgY3VycmVudEVsZW1lbnRDb3VudCA9IDA7IGN1cnJlbnRFbGVtZW50Q291bnQgPCBoZWFkZXIuZWxlbWVudHNbY3VycmVudEVsZW1lbnRdLmNvdW50OyBjdXJyZW50RWxlbWVudENvdW50KyspIHsKICAgICAgICAgIHJlc3VsdCA9IGJpbmFyeVJlYWRFbGVtZW50KGJvZHksIGxvYywgaGVhZGVyLmVsZW1lbnRzW2N1cnJlbnRFbGVtZW50XS5wcm9wZXJ0aWVzLCBsaXR0bGVfZW5kaWFuKTsKICAgICAgICAgIGxvYyArPSByZXN1bHRbMV07CiAgICAgICAgICB2YXIgZWxlbWVudCA9IHJlc3VsdFswXTsKICAgICAgICAgIGhhbmRsZUVsZW1lbnQoYnVmZmVyLCBoZWFkZXIuZWxlbWVudHNbY3VycmVudEVsZW1lbnRdLm5hbWUsIGVsZW1lbnQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHBvc3RQcm9jZXNzKGJ1ZmZlcik7CiAgICB9IC8vCgoKICAgIHZhciBnZW9tZXRyeTsKICAgIHZhciBzY29wZSA9IHRoaXM7CgogICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikgewogICAgICB2YXIgdGV4dCA9IExvYWRlclV0aWxzLmRlY29kZVRleHQobmV3IFVpbnQ4QXJyYXkoZGF0YSkpOwogICAgICB2YXIgaGVhZGVyID0gcGFyc2VIZWFkZXIodGV4dCk7CiAgICAgIGdlb21ldHJ5ID0gaGVhZGVyLmZvcm1hdCA9PT0gJ2FzY2lpJyA/IHBhcnNlQVNDSUkodGV4dCwgaGVhZGVyKSA6IHBhcnNlQmluYXJ5KGRhdGEsIGhlYWRlcik7CiAgICB9IGVsc2UgewogICAgICBnZW9tZXRyeSA9IHBhcnNlQVNDSUkoZGF0YSwgcGFyc2VIZWFkZXIoZGF0YSkpOwogICAgfQoKICAgIHJldHVybiBnZW9tZXRyeTsKICB9Cn0pOwpleHBvcnQgeyBQTFlMb2FkZXIgfTs="},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/PLYLoader.js"],"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Loader","LoaderUtils","PLYLoader","manager","call","propertyNameMapping","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","text","parse","setPropertyNameMapping","mapping","data","parseHeader","patternHeader","headerText","headerLength","result","exec","length","header","comments","elements","lines","split","currentElement","lineType","lineValues","make_ply_element_property","propertValues","property","type","name","countType","itemType","i","line","trim","shift","join","format","version","push","undefined","count","parseInt","properties","console","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","parseASCII","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","patternBody","body","currentElementCount","handleElement","postProcess","geometry","setIndex","setAttribute","toNonIndexed","computeBoundingSphere","elementName","x","y","z","nx","ny","nz","s","t","red","green","blue","vertex_indices","vertex_index","texcoord","binaryRead","dataview","at","little_endian","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","binaryReadElement","read","parseBinary","DataView","loc","ArrayBuffer","decodeText","Uint8Array"],"mappings":"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","sourcesContent":["/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tvar loader = new PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\nimport {\n    BufferGeometry,\n    FileLoader,\n    Float32BufferAttribute,\n    Loader,\n    LoaderUtils\n} from \"../../js/three.module.js\";\n\n\nvar PLYLoader = function (manager) {\n\n    Loader.call(this, manager);\n\n    this.propertyNameMapping = {};\n\n};\n\nPLYLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\n    constructor: PLYLoader,\n\n    load: function (url, onLoad, onProgress, onError) {\n\n        var scope = this;\n\n        var loader = new FileLoader(this.manager);\n        loader.setPath(this.path);\n        loader.setResponseType('arraybuffer');\n        loader.load(url, function (text) {\n\n            onLoad(scope.parse(text));\n\n        }, onProgress, onError);\n\n    },\n\n    setPropertyNameMapping: function (mapping) {\n\n        this.propertyNameMapping = mapping;\n\n    },\n\n    parse: function (data) {\n\n        function parseHeader(data) {\n\n            var patternHeader = /ply([\\s\\S]*)end_header\\r?\\n/;\n            var headerText = '';\n            var headerLength = 0;\n            var result = patternHeader.exec(data);\n\n            if (result !== null) {\n\n                headerText = result[1];\n                headerLength = result[0].length;\n\n            }\n\n            var header = {\n                comments: [],\n                elements: [],\n                headerLength: headerLength\n            };\n\n            var lines = headerText.split('\\n');\n            var currentElement;\n            var lineType, lineValues;\n\n            function make_ply_element_property(propertValues, propertyNameMapping) {\n\n                var property = { type: propertValues[0] };\n\n                if (property.type === 'list') {\n\n                    property.name = propertValues[3];\n                    property.countType = propertValues[1];\n                    property.itemType = propertValues[2];\n\n                } else {\n\n                    property.name = propertValues[1];\n\n                }\n\n                if (property.name in propertyNameMapping) {\n\n                    property.name = propertyNameMapping[property.name];\n\n                }\n\n                return property;\n\n            }\n\n            for (var i = 0; i < lines.length; i++) {\n\n                var line = lines[i];\n                line = line.trim();\n\n                if (line === '') continue;\n\n                lineValues = line.split(/\\s+/);\n                lineType = lineValues.shift();\n                line = lineValues.join(' ');\n\n                switch (lineType) {\n\n                    case 'format':\n\n                        header.format = lineValues[0];\n                        header.version = lineValues[1];\n\n                        break;\n\n                    case 'comment':\n\n                        header.comments.push(line);\n\n                        break;\n\n                    case 'element':\n\n                        if (currentElement !== undefined) {\n\n                            header.elements.push(currentElement);\n\n                        }\n\n                        currentElement = {};\n                        currentElement.name = lineValues[0];\n                        currentElement.count = parseInt(lineValues[1]);\n                        currentElement.properties = [];\n\n                        break;\n\n                    case 'property':\n\n                        currentElement.properties.push(make_ply_element_property(lineValues, scope.propertyNameMapping));\n\n                        break;\n\n\n                    default:\n\n                        console.log('unhandled', lineType, lineValues);\n\n                }\n\n            }\n\n            if (currentElement !== undefined) {\n\n                header.elements.push(currentElement);\n\n            }\n\n            return header;\n\n        }\n\n        function parseASCIINumber(n, type) {\n\n            switch (type) {\n\n                case 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n                case 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n                    return parseInt(n);\n\n                case 'float': case 'double': case 'float32': case 'float64':\n\n                    return parseFloat(n);\n\n            }\n\n        }\n\n        function parseASCIIElement(properties, line) {\n\n            var values = line.split(/\\s+/);\n\n            var element = {};\n\n            for (var i = 0; i < properties.length; i++) {\n\n                if (properties[i].type === 'list') {\n\n                    var list = [];\n                    var n = parseASCIINumber(values.shift(), properties[i].countType);\n\n                    for (var j = 0; j < n; j++) {\n\n                        list.push(parseASCIINumber(values.shift(), properties[i].itemType));\n\n                    }\n\n                    element[properties[i].name] = list;\n\n                } else {\n\n                    element[properties[i].name] = parseASCIINumber(values.shift(), properties[i].type);\n\n                }\n\n            }\n\n            return element;\n\n        }\n\n        function parseASCII(data, header) {\n\n            // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n            var buffer = {\n                indices: [],\n                vertices: [],\n                normals: [],\n                uvs: [],\n                faceVertexUvs: [],\n                colors: []\n            };\n\n            var result;\n\n            var patternBody = /end_header\\s([\\s\\S]*)$/;\n            var body = '';\n            if ((result = patternBody.exec(data)) !== null) {\n\n                body = result[1];\n\n            }\n\n            var lines = body.split('\\n');\n            var currentElement = 0;\n            var currentElementCount = 0;\n\n            for (var i = 0; i < lines.length; i++) {\n\n                var line = lines[i];\n                line = line.trim();\n                if (line === '') {\n\n                    continue;\n\n                }\n\n                if (currentElementCount >= header.elements[currentElement].count) {\n\n                    currentElement++;\n                    currentElementCount = 0;\n\n                }\n\n                var element = parseASCIIElement(header.elements[currentElement].properties, line);\n\n                handleElement(buffer, header.elements[currentElement].name, element);\n\n                currentElementCount++;\n\n            }\n\n            return postProcess(buffer);\n\n        }\n\n        function postProcess(buffer) {\n\n            var geometry = new BufferGeometry();\n\n            // mandatory buffer data\n\n            if (buffer.indices.length > 0) {\n\n                geometry.setIndex(buffer.indices);\n\n            }\n\n            geometry.setAttribute('position', new Float32BufferAttribute(buffer.vertices, 3));\n\n            // optional buffer data\n\n            if (buffer.normals.length > 0) {\n\n                geometry.setAttribute('normal', new Float32BufferAttribute(buffer.normals, 3));\n\n            }\n\n            if (buffer.uvs.length > 0) {\n\n                geometry.setAttribute('uv', new Float32BufferAttribute(buffer.uvs, 2));\n\n            }\n\n            if (buffer.colors.length > 0) {\n\n                geometry.setAttribute('color', new Float32BufferAttribute(buffer.colors, 3));\n\n            }\n\n            if (buffer.faceVertexUvs.length > 0) {\n\n                geometry = geometry.toNonIndexed();\n                geometry.setAttribute('uv', new Float32BufferAttribute(buffer.faceVertexUvs, 2));\n\n            }\n\n            geometry.computeBoundingSphere();\n\n            return geometry;\n\n        }\n\n        function handleElement(buffer, elementName, element) {\n\n            if (elementName === 'vertex') {\n\n                buffer.vertices.push(element.x, element.y, element.z);\n\n                if ('nx' in element && 'ny' in element && 'nz' in element) {\n\n                    buffer.normals.push(element.nx, element.ny, element.nz);\n\n                }\n\n                if ('s' in element && 't' in element) {\n\n                    buffer.uvs.push(element.s, element.t);\n\n                }\n\n                if ('red' in element && 'green' in element && 'blue' in element) {\n\n                    buffer.colors.push(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\n\n                }\n\n            } else if (elementName === 'face') {\n\n                var vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n                var texcoord = element.texcoord;\n\n                if (vertex_indices.length === 3) {\n\n                    buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[2]);\n\n                    if (texcoord && texcoord.length === 6) {\n\n                        buffer.faceVertexUvs.push(texcoord[0], texcoord[1]);\n                        buffer.faceVertexUvs.push(texcoord[2], texcoord[3]);\n                        buffer.faceVertexUvs.push(texcoord[4], texcoord[5]);\n\n                    }\n\n                } else if (vertex_indices.length === 4) {\n\n                    buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[3]);\n                    buffer.indices.push(vertex_indices[1], vertex_indices[2], vertex_indices[3]);\n\n                }\n\n            }\n\n        }\n\n        function binaryRead(dataview, at, type, little_endian) {\n\n            switch (type) {\n\n                // corespondences for non-specific length types here match rply:\n                case 'int8': case 'char': return [dataview.getInt8(at), 1];\n                case 'uint8': case 'uchar': return [dataview.getUint8(at), 1];\n                case 'int16': case 'short': return [dataview.getInt16(at, little_endian), 2];\n                case 'uint16': case 'ushort': return [dataview.getUint16(at, little_endian), 2];\n                case 'int32': case 'int': return [dataview.getInt32(at, little_endian), 4];\n                case 'uint32': case 'uint': return [dataview.getUint32(at, little_endian), 4];\n                case 'float32': case 'float': return [dataview.getFloat32(at, little_endian), 4];\n                case 'float64': case 'double': return [dataview.getFloat64(at, little_endian), 8];\n\n            }\n\n        }\n\n        function binaryReadElement(dataview, at, properties, little_endian) {\n\n            var element = {};\n            var result, read = 0;\n\n            for (var i = 0; i < properties.length; i++) {\n\n                if (properties[i].type === 'list') {\n\n                    var list = [];\n\n                    result = binaryRead(dataview, at + read, properties[i].countType, little_endian);\n                    var n = result[0];\n                    read += result[1];\n\n                    for (var j = 0; j < n; j++) {\n\n                        result = binaryRead(dataview, at + read, properties[i].itemType, little_endian);\n                        list.push(result[0]);\n                        read += result[1];\n\n                    }\n\n                    element[properties[i].name] = list;\n\n                } else {\n\n                    result = binaryRead(dataview, at + read, properties[i].type, little_endian);\n                    element[properties[i].name] = result[0];\n                    read += result[1];\n\n                }\n\n            }\n\n            return [element, read];\n\n        }\n\n        function parseBinary(data, header) {\n\n            var buffer = {\n                indices: [],\n                vertices: [],\n                normals: [],\n                uvs: [],\n                faceVertexUvs: [],\n                colors: []\n            };\n\n            var little_endian = (header.format === 'binary_little_endian');\n            var body = new DataView(data, header.headerLength);\n            var result, loc = 0;\n\n            for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\n\n                for (var currentElementCount = 0; currentElementCount < header.elements[currentElement].count; currentElementCount++) {\n\n                    result = binaryReadElement(body, loc, header.elements[currentElement].properties, little_endian);\n                    loc += result[1];\n                    var element = result[0];\n\n                    handleElement(buffer, header.elements[currentElement].name, element);\n\n                }\n\n            }\n\n            return postProcess(buffer);\n\n        }\n\n        //\n\n        var geometry;\n        var scope = this;\n\n        if (data instanceof ArrayBuffer) {\n\n            var text = LoaderUtils.decodeText(new Uint8Array(data));\n            var header = parseHeader(text);\n\n            geometry = header.format === 'ascii' ? parseASCII(text, header) : parseBinary(data, header);\n\n        } else {\n\n            geometry = parseASCII(data, parseHeader(data));\n\n        }\n\n        return geometry;\n\n    }\n\n});\n\nexport { PLYLoader };\n"]}]}