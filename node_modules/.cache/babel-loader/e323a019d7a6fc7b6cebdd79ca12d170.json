{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\DRACOLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\DRACOLoader.js","mtime":1581174917870},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/DRACOLoader.js"],"names":["BufferAttribute","BufferGeometry","FileLoader","Loader","DRACOLoader","manager","call","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","position","normal","color","uv","defaultAttributeTypes","prototype","Object","assign","create","constructor","setDecoderPath","path","setDecoderConfig","config","setWorkerLimit","setVerbosity","console","warn","setDrawMode","setSkipDequantization","load","url","onLoad","onProgress","onError","loader","setPath","setResponseType","crossOrigin","setWithCredentials","buffer","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","then","catch","decodeDracoFile","callback","attribute","type","BYTES_PER_ELEMENT","undefined","name","taskKey","JSON","stringify","taskCache","has","cachedTask","get","key","promise","byteLength","Error","worker","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","geometry","finally","_releaseTask","set","geometryData","index","setIndex","array","i","attributes","length","itemSize","setAttribute","_loadLibrary","responseType","preload","_initDecoder","useJS","WebAssembly","librariesPending","push","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","_taskLoad","onmessage","e","data","error","sort","a","b","debug","log","map","dispose","terminate","onModuleLoaded","draco","DracoDecoderModule","module","decoder","Decoder","decoderBuffer","DecoderBuffer","Init","Int8Array","buffers","attr","self","destroy","dracoGeometry","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","ptr","error_msg","attributeName","attributeType","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","decodeAttribute","numFaces","num_faces","numIndices","Uint32Array","indexArray","DracoInt32Array","GetFaceFromMesh","j","GetValue","numComponents","num_components","numPoints","num_points","numValues","dracoArray","Float32Array","DracoFloat32Array","GetAttributeFloatForAllPoints","DracoInt8Array","GetAttributeInt8ForAllPoints","Int16Array","DracoInt16Array","GetAttributeInt16ForAllPoints","Int32Array","GetAttributeInt32ForAllPoints","Uint8Array","DracoUInt8Array","GetAttributeUInt8ForAllPoints","Uint16Array","DracoUInt16Array","GetAttributeUInt16ForAllPoints","DracoUInt32Array","GetAttributeUInt32ForAllPoints","WeakMap","releaseDecoderModule","getDecoderModule"],"mappings":"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","sourcesContent":["/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n    BufferAttribute,\n    BufferGeometry,\n    FileLoader,\n    Loader\n} from \"../../js/three.module.js\";\n\nvar DRACOLoader = function (manager) {\n\n    Loader.call(this, manager);\n\n    this.decoderPath = '';\n    this.decoderConfig = {};\n    this.decoderBinary = null;\n    this.decoderPending = null;\n\n    this.workerLimit = 4;\n    this.workerPool = [];\n    this.workerNextTaskID = 1;\n    this.workerSourceURL = '';\n\n    this.defaultAttributeIDs = {\n        position: 'POSITION',\n        normal: 'NORMAL',\n        color: 'COLOR',\n        uv: 'TEX_COORD'\n    };\n    this.defaultAttributeTypes = {\n        position: 'Float32Array',\n        normal: 'Float32Array',\n        color: 'Float32Array',\n        uv: 'Float32Array'\n    };\n\n};\n\nDRACOLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\n    constructor: DRACOLoader,\n\n    setDecoderPath: function (path) {\n\n        this.decoderPath = path;\n\n        return this;\n\n    },\n\n    setDecoderConfig: function (config) {\n\n        this.decoderConfig = config;\n\n        return this;\n\n    },\n\n    setWorkerLimit: function (workerLimit) {\n\n        this.workerLimit = workerLimit;\n\n        return this;\n\n    },\n\n    /** @deprecated */\n    setVerbosity: function () {\n\n        console.warn('THREE.DRACOLoader: The .setVerbosity() method has been removed.');\n\n    },\n\n    /** @deprecated */\n    setDrawMode: function () {\n\n        console.warn('THREE.DRACOLoader: The .setDrawMode() method has been removed.');\n\n    },\n\n    /** @deprecated */\n    setSkipDequantization: function () {\n\n        console.warn('THREE.DRACOLoader: The .setSkipDequantization() method has been removed.');\n\n    },\n\n    load: function (url, onLoad, onProgress, onError) {\n\n        var loader = new FileLoader(this.manager);\n\n        loader.setPath(this.path);\n        loader.setResponseType('arraybuffer');\n\n        if (this.crossOrigin === 'use-credentials') {\n\n            loader.setWithCredentials(true);\n\n        }\n\n        loader.load(url, (buffer) => {\n\n            var taskConfig = {\n                attributeIDs: this.defaultAttributeIDs,\n                attributeTypes: this.defaultAttributeTypes,\n                useUniqueIDs: false\n            };\n\n            this.decodeGeometry(buffer, taskConfig)\n                .then(onLoad)\n                .catch(onError);\n\n        }, onProgress, onError);\n\n    },\n\n    /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n    decodeDracoFile: function (buffer, callback, attributeIDs, attributeTypes) {\n\n        var taskConfig = {\n            attributeIDs: attributeIDs || this.defaultAttributeIDs,\n            attributeTypes: attributeTypes || this.defaultAttributeTypes,\n            useUniqueIDs: !!attributeIDs\n        };\n\n        this.decodeGeometry(buffer, taskConfig).then(callback);\n\n    },\n\n    decodeGeometry: function (buffer, taskConfig) {\n\n        // TODO: For backward-compatibility, support 'attributeTypes' objects containing\n        // references (rather than names) to typed array constructors. These must be\n        // serialized before sending them to the worker.\n        for (var attribute in taskConfig.attributeTypes) {\n\n            var type = taskConfig.attributeTypes[attribute];\n\n            if (type.BYTES_PER_ELEMENT !== undefined) {\n\n                taskConfig.attributeTypes[attribute] = type.name;\n\n            }\n\n        }\n\n        //\n\n        var taskKey = JSON.stringify(taskConfig);\n\n        // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n        // again from this thread.\n        if (DRACOLoader.taskCache.has(buffer)) {\n\n            var cachedTask = DRACOLoader.taskCache.get(buffer);\n\n            if (cachedTask.key === taskKey) {\n\n                return cachedTask.promise;\n\n            } else if (buffer.byteLength === 0) {\n\n                // Technically, it would be possible to wait for the previous task to complete,\n                // transfer the buffer back, and decode again with the second configuration. That\n                // is complex, and I don't know of any reason to decode a Draco buffer twice in\n                // different ways, so this is left unimplemented.\n                throw new Error(\n\n                    'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\n                    'settings. Buffer has already been transferred.'\n\n                );\n\n            }\n\n        }\n\n        //\n\n        var worker;\n        var taskID = this.workerNextTaskID++;\n        var taskCost = buffer.byteLength;\n\n        // Obtain a worker and assign a task, and construct a geometry instance\n        // when the task completes.\n        var geometryPending = this._getWorker(taskID, taskCost)\n            .then((_worker) => {\n\n                worker = _worker;\n\n                return new Promise((resolve, reject) => {\n\n                    worker._callbacks[taskID] = { resolve, reject };\n\n                    worker.postMessage({ type: 'decode', id: taskID, taskConfig, buffer }, [buffer]);\n\n                    // this.debug();\n\n                });\n\n            })\n            .then((message) => this._createGeometry(message.geometry));\n\n        // Remove task from the task list.\n        geometryPending\n            .finally(() => {\n\n                if (worker && taskID) {\n\n                    this._releaseTask(worker, taskID);\n\n                    // this.debug();\n\n                }\n\n            });\n\n        // Cache the task result.\n        DRACOLoader.taskCache.set(buffer, {\n\n            key: taskKey,\n            promise: geometryPending\n\n        });\n\n        return geometryPending;\n\n    },\n\n    _createGeometry: function (geometryData) {\n\n        var geometry = new BufferGeometry();\n\n        if (geometryData.index) {\n\n            geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n\n        }\n\n        for (var i = 0; i < geometryData.attributes.length; i++) {\n\n            var attribute = geometryData.attributes[i];\n            var name = attribute.name;\n            var array = attribute.array;\n            var itemSize = attribute.itemSize;\n\n            geometry.setAttribute(name, new BufferAttribute(array, itemSize));\n\n        }\n\n        return geometry;\n\n    },\n\n    _loadLibrary: function (url, responseType) {\n\n        var loader = new FileLoader(this.manager);\n        loader.setPath(this.decoderPath);\n        loader.setResponseType(responseType);\n\n        return new Promise((resolve, reject) => {\n\n            loader.load(url, resolve, undefined, reject);\n\n        });\n\n    },\n\n    preload: function () {\n\n        this._initDecoder();\n\n        return this;\n\n    },\n\n    _initDecoder: function () {\n\n        if (this.decoderPending) return this.decoderPending;\n\n        var useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n        var librariesPending = [];\n\n        if (useJS) {\n\n            librariesPending.push(this._loadLibrary('draco_decoder.js', 'text'));\n\n        } else {\n\n            librariesPending.push(this._loadLibrary('draco_wasm_wrapper.js', 'text'));\n            librariesPending.push(this._loadLibrary('draco_decoder.wasm', 'arraybuffer'));\n\n        }\n\n        this.decoderPending = Promise.all(librariesPending)\n            .then((libraries) => {\n\n                var jsContent = libraries[0];\n\n                if (!useJS) {\n\n                    this.decoderConfig.wasmBinary = libraries[1];\n\n                }\n\n                var fn = DRACOLoader.DRACOWorker.toString();\n\n                var body = [\n                    '/* draco decoder */',\n                    jsContent,\n                    '',\n                    '/* worker */',\n                    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n                ].join('\\n');\n\n                this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n\n            });\n\n        return this.decoderPending;\n\n    },\n\n    _getWorker: function (taskID, taskCost) {\n\n        return this._initDecoder().then(() => {\n\n            if (this.workerPool.length < this.workerLimit) {\n\n                var worker = new Worker(this.workerSourceURL);\n\n                worker._callbacks = {};\n                worker._taskCosts = {};\n                worker._taskLoad = 0;\n\n                worker.postMessage({ type: 'init', decoderConfig: this.decoderConfig });\n\n                worker.onmessage = function (e) {\n\n                    var message = e.data;\n\n                    switch (message.type) {\n\n                        case 'decode':\n                            worker._callbacks[message.id].resolve(message);\n                            break;\n\n                        case 'error':\n                            worker._callbacks[message.id].reject(message);\n                            break;\n\n                        default:\n                            console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n\n                    }\n\n                };\n\n                this.workerPool.push(worker);\n\n            } else {\n\n                this.workerPool.sort(function (a, b) {\n\n                    return a._taskLoad > b._taskLoad ? - 1 : 1;\n\n                });\n\n            }\n\n            var worker = this.workerPool[this.workerPool.length - 1];\n            worker._taskCosts[taskID] = taskCost;\n            worker._taskLoad += taskCost;\n            return worker;\n\n        });\n\n    },\n\n    _releaseTask: function (worker, taskID) {\n\n        worker._taskLoad -= worker._taskCosts[taskID];\n        delete worker._callbacks[taskID];\n        delete worker._taskCosts[taskID];\n\n    },\n\n    debug: function () {\n\n        console.log('Task load: ', this.workerPool.map((worker) => worker._taskLoad));\n\n    },\n\n    dispose: function () {\n\n        for (var i = 0; i < this.workerPool.length; ++i) {\n\n            this.workerPool[i].terminate();\n\n        }\n\n        this.workerPool.length = 0;\n\n        return this;\n\n    }\n\n});\n\n/* WEB WORKER */\n\nDRACOLoader.DRACOWorker = function () {\n\n    var decoderConfig;\n    var decoderPending;\n\n    onmessage = function (e) {\n\n        var message = e.data;\n\n        switch (message.type) {\n\n            case 'init':\n                decoderConfig = message.decoderConfig;\n                decoderPending = new Promise(function (resolve/*, reject*/) {\n\n                    decoderConfig.onModuleLoaded = function (draco) {\n\n                        // Module is Promise-like. Wrap before resolving to avoid loop.\n                        resolve({ draco: draco });\n\n                    };\n\n                    DracoDecoderModule(decoderConfig);\n\n                });\n                break;\n\n            case 'decode':\n                var buffer = message.buffer;\n                var taskConfig = message.taskConfig;\n                decoderPending.then((module) => {\n\n                    var draco = module.draco;\n                    var decoder = new draco.Decoder();\n                    var decoderBuffer = new draco.DecoderBuffer();\n                    decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n\n                    try {\n\n                        var geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n\n                        var buffers = geometry.attributes.map((attr) => attr.array.buffer);\n\n                        if (geometry.index) buffers.push(geometry.index.array.buffer);\n\n                        self.postMessage({ type: 'decode', id: message.id, geometry }, buffers);\n\n                    } catch (error) {\n\n                        console.error(error);\n\n                        self.postMessage({ type: 'error', id: message.id, error: error.message });\n\n                    } finally {\n\n                        draco.destroy(decoderBuffer);\n                        draco.destroy(decoder);\n\n                    }\n\n                });\n                break;\n\n        }\n\n    };\n\n    function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n\n        var attributeIDs = taskConfig.attributeIDs;\n        var attributeTypes = taskConfig.attributeTypes;\n\n        var dracoGeometry;\n        var decodingStatus;\n\n        var geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n\n        if (geometryType === draco.TRIANGULAR_MESH) {\n\n            dracoGeometry = new draco.Mesh();\n            decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n\n        } else if (geometryType === draco.POINT_CLOUD) {\n\n            dracoGeometry = new draco.PointCloud();\n            decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n\n        } else {\n\n            throw new Error('THREE.DRACOLoader: Unexpected geometry type.');\n\n        }\n\n        if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n\n            throw new Error('THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg());\n\n        }\n\n        var geometry = { index: null, attributes: [] };\n\n        // Gather all vertex attributes.\n        for (var attributeName in attributeIDs) {\n\n            var attributeType = self[attributeTypes[attributeName]];\n\n            var attribute;\n            var attributeID;\n\n            // A Draco file may be created with default vertex attributes, whose attribute IDs\n            // are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n            // a Draco file may contain a custom set of attributes, identified by known unique\n            // IDs. glTF files always do the latter, and `.drc` files typically do the former.\n            if (taskConfig.useUniqueIDs) {\n\n                attributeID = attributeIDs[attributeName];\n                attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n\n            } else {\n\n                attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n\n                if (attributeID === - 1) continue;\n\n                attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n\n            }\n\n            geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n\n        }\n\n        // Add index.\n        if (geometryType === draco.TRIANGULAR_MESH) {\n\n            // Generate mesh faces.\n            var numFaces = dracoGeometry.num_faces();\n            var numIndices = numFaces * 3;\n            var index = new Uint32Array(numIndices);\n            var indexArray = new draco.DracoInt32Array();\n\n            for (var i = 0; i < numFaces; ++i) {\n\n                decoder.GetFaceFromMesh(dracoGeometry, i, indexArray);\n\n                for (var j = 0; j < 3; ++j) {\n\n                    index[i * 3 + j] = indexArray.GetValue(j);\n\n                }\n\n            }\n\n            geometry.index = { array: index, itemSize: 1 };\n\n            draco.destroy(indexArray);\n\n        }\n\n        draco.destroy(dracoGeometry);\n\n        return geometry;\n\n    }\n\n    function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n\n        var numComponents = attribute.num_components();\n        var numPoints = dracoGeometry.num_points();\n        var numValues = numPoints * numComponents;\n        var dracoArray;\n\n        var array;\n\n        switch (attributeType) {\n\n            case Float32Array:\n                dracoArray = new draco.DracoFloat32Array();\n                decoder.GetAttributeFloatForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Float32Array(numValues);\n                break;\n\n            case Int8Array:\n                dracoArray = new draco.DracoInt8Array();\n                decoder.GetAttributeInt8ForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Int8Array(numValues);\n                break;\n\n            case Int16Array:\n                dracoArray = new draco.DracoInt16Array();\n                decoder.GetAttributeInt16ForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Int16Array(numValues);\n                break;\n\n            case Int32Array:\n                dracoArray = new draco.DracoInt32Array();\n                decoder.GetAttributeInt32ForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Int32Array(numValues);\n                break;\n\n            case Uint8Array:\n                dracoArray = new draco.DracoUInt8Array();\n                decoder.GetAttributeUInt8ForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Uint8Array(numValues);\n                break;\n\n            case Uint16Array:\n                dracoArray = new draco.DracoUInt16Array();\n                decoder.GetAttributeUInt16ForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Uint16Array(numValues);\n                break;\n\n            case Uint32Array:\n                dracoArray = new draco.DracoUInt32Array();\n                decoder.GetAttributeUInt32ForAllPoints(dracoGeometry, attribute, dracoArray);\n                array = new Uint32Array(numValues);\n                break;\n\n            default:\n                throw new Error('THREE.DRACOLoader: Unexpected attribute type.');\n\n        }\n\n        for (var i = 0; i < numValues; i++) {\n\n            array[i] = dracoArray.GetValue(i);\n\n        }\n\n        draco.destroy(dracoArray);\n\n        return {\n            name: attributeName,\n            array: array,\n            itemSize: numComponents\n        };\n\n    }\n\n};\n\nDRACOLoader.taskCache = new WeakMap();\n\n/** Deprecated static methods */\n\n/** @deprecated */\nDRACOLoader.setDecoderPath = function () {\n\n    console.warn('THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.');\n\n};\n\n/** @deprecated */\nDRACOLoader.setDecoderConfig = function () {\n\n    console.warn('THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.');\n\n};\n\n/** @deprecated */\nDRACOLoader.releaseDecoderModule = function () {\n\n    console.warn('THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.');\n\n};\n\n/** @deprecated */\nDRACOLoader.getDecoderModule = function () {\n\n    console.warn('THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.');\n\n};\n\nexport { DRACOLoader };\n"]}]}