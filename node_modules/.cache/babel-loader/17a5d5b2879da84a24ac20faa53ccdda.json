{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\FBXLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\FBXLoader.js","mtime":1579613441794},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/FBXLoader.js"],"names":["AmbientLight","AnimationClip","Bone","BufferAttribute","BufferGeometry","ClampToEdgeWrapping","Color","DirectionalLight","EquirectangularReflectionMapping","Euler","FileLoader","Float32BufferAttribute","Group","Line","LineBasicMaterial","Loader","LoaderUtils","MathUtils","Matrix3","Matrix4","Mesh","MeshLambertMaterial","MeshPhongMaterial","NumberKeyframeTrack","Object3D","OrthographicCamera","PerspectiveCamera","PointLight","PropertyBinding","Quaternion","QuaternionKeyframeTrack","RepeatWrapping","Skeleton","SkinnedMesh","SpotLight","Texture","TextureLoader","Uint16BufferAttribute","Vector3","Vector4","VectorKeyframeTrack","VertexColors","sRGBEncoding","Zlib","NURBSCurve","FBXLoader","fbxTree","connections","sceneGraph","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","self","path","extractUrlBase","loader","setPath","setResponseType","buffer","parse","error","setTimeout","itemError","FBXBuffer","isFbxFormatBinary","BinaryParser","FBXText","convertArrayBufferToString","isFbxFormatASCII","Error","getFbxVersion","TextParser","textureLoader","resourcePath","setCrossOrigin","crossOrigin","FBXTreeParser","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","GeometryParser","parseScene","connectionMap","Map","rawConnections","Connections","forEach","rawConnection","fromID","toID","relationship","has","set","parents","children","parentRelationship","ID","get","push","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","parseInt","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","byteLength","base64Content","image","parseImage","filename","undefined","split","pop","content","fileName","extension","slice","lastIndexOf","toLowerCase","type","getHandler","console","warn","array","Uint8Array","window","URL","createObjectURL","Blob","textureMap","textureNodes","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","wrapT","values","Scaling","repeat","x","y","currentPath","length","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","setValues","BumpFactor","bumpScale","Diffuse","color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","displacementMap","emissiveMap","normalMap","envMap","mapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","TransformLink","a","Indexes","Weights","bones","rawMorphTargets","i","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","parentConnections","connection","parent","add","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix","animations","AnimationParser","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","copy","cameraAttribute","attr","NodeAttribute","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","setFocalLength","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","decay","angle","Math","PI","InnerAngle","degToRad","penumbra","OuterAngle","max","CastShadows","castShadow","geometry","attributes","vertexColors","FBX_Deformer","skinning","normalizeSkinWeights","reduce","geo","linewidth","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","target","position","lookAt","bindMatrices","parsePoseNodes","geoRelationships","geoConnParent","bind","BindPoseNode","Pose","poseNodes","PoseNode","Array","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","r","g","b","isMesh","morphAttributes","setupMorphMaterial","index","uuid","matUuid","sharedMat","mat","clonedMat","clone","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","vertex","applyMatrix4","setAttribute","colors","weightsIndices","vertexWeights","normal","normalMatrix","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","j","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","degree","knots","KnotVector","controlPoints","pointsValues","Points","l","startKnot","endKnot","Form","curve","vertices","getPoints","positions","toArray","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","match","curveNode","curves","rawCurves","animationCurve","times","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","z","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","decompose","setFromQuaternion","T","keys","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","interpolateRotations","setFromEuler","inverse","quaternion","euler","quaternionValues","premultiply","multiply","val","morphNum","getObjectByName","morphTargetDictionary","sort","elem","prevValue","xIndex","yIndex","zIndex","time","xValue","yValue","zValue","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","timeSpan","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","text","allNodes","FBXTree","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","parentName","parseNodeSpecialProperty","connProps","from","to","rest","append","parseNumberArray","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","BinaryReader","skip","version","getUint32","log","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","propertyListLen","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","inflate","Inflate","reader2","decompress","littleEndian","dv","DataView","offset","low","high","nullByte","decodeText","CORRECT","cursor","read","result","num","versionRegExp","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lParentTM","lLSM","lParentGSM","lParentGRSM","copyPosition","getInverse","lGlobalRS","lParentLSM","lParentGSM_noLocal","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"mappings":"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","sourcesContent":["/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\nimport {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tVertexColors,\n\tsRGBEncoding\n} from \"../../js/three.module.js\";\nimport { Zlib } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n\n\nvar FBXLoader = (function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader(manager) {\n\n\t\tLoader.call(this, manager);\n\n\t}\n\n\tFBXLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function (url, onLoad, onProgress, onError) {\n\n\t\t\tvar self = this;\n\n\t\t\tvar path = (self.path === '') ? LoaderUtils.extractUrlBase(url) : self.path;\n\n\t\t\tvar loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(self.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\n\t\t\tloader.load(url, function (buffer) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad(self.parse(buffer, path));\n\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\t\tif (onError) onError(error);\n\n\t\t\t\t\t\tself.manager.itemError(url);\n\n\t\t\t\t\t}, 0);\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError);\n\n\t\t},\n\n\t\tparse: function (FBXBuffer, path) {\n\n\t\t\tif (isFbxFormatBinary(FBXBuffer)) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse(FBXBuffer);\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString(FBXBuffer);\n\n\t\t\t\tif (!isFbxFormatASCII(FBXText)) {\n\n\t\t\t\t\tthrow new Error('THREE.FBXLoader: Unknown format.');\n\n\t\t\t\t}\n\n\t\t\t\tif (getFbxVersion(FBXText) < 7000) {\n\n\t\t\t\t\tthrow new Error('THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion(FBXText));\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse(FBXText);\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader(this.manager).setPath(this.resourcePath || path).setCrossOrigin(this.crossOrigin);\n\n\t\t\treturn new FBXTreeParser(textureLoader, this.manager).parse(fbxTree);\n\n\t\t}\n\n\t});\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser(textureLoader, manager) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures(images);\n\t\t\tvar materials = this.parseMaterials(textures);\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse(deformers);\n\n\t\t\tthis.parseScene(deformers, geometryMap, materials);\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ('Connections' in fbxTree) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach(function (rawConnection) {\n\n\t\t\t\t\tvar fromID = rawConnection[0];\n\t\t\t\t\tvar toID = rawConnection[1];\n\t\t\t\t\tvar relationship = rawConnection[2];\n\n\t\t\t\t\tif (!connectionMap.has(fromID)) {\n\n\t\t\t\t\t\tconnectionMap.set(fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get(fromID).parents.push(parentRelationship);\n\n\t\t\t\t\tif (!connectionMap.has(toID)) {\n\n\t\t\t\t\t\tconnectionMap.set(toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get(toID).children.push(childRelationship);\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ('Video' in fbxTree.Objects) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor (var nodeID in videoNodes) {\n\n\t\t\t\t\tvar videoNode = videoNodes[nodeID];\n\n\t\t\t\t\tvar id = parseInt(nodeID);\n\n\t\t\t\t\timages[id] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ('Content' in videoNode) {\n\n\t\t\t\t\t\tvar arrayBufferContent = (videoNode.Content instanceof ArrayBuffer) && (videoNode.Content.byteLength > 0);\n\t\t\t\t\t\tvar base64Content = (typeof videoNode.Content === 'string') && (videoNode.Content !== '');\n\n\t\t\t\t\t\tif (arrayBufferContent || base64Content) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage(videoNodes[nodeID]);\n\n\t\t\t\t\t\t\tblobs[videoNode.RelativeFilename || videoNode.Filename] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor (var id in images) {\n\n\t\t\t\tvar filename = images[id];\n\n\t\t\t\tif (blobs[filename] !== undefined) images[id] = blobs[filename];\n\t\t\t\telse images[id] = images[id].split('\\\\').pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function (videoNode) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch (extension) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif (this.manager.getHandler('.tga') === null) {\n\n\t\t\t\t\t\tconsole.warn('FBXLoader: TGA loader not found, skipping ', fileName);\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn('FBXLoader: Image type \"' + extension + '\" is not supported.');\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif (typeof content === 'string') { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array(content);\n\t\t\t\treturn window.URL.createObjectURL(new Blob([array], { type: type }));\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function (images) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ('Texture' in fbxTree.Objects) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor (var nodeID in textureNodes) {\n\n\t\t\t\t\tvar texture = this.parseTexture(textureNodes[nodeID], images);\n\t\t\t\t\ttextureMap.set(parseInt(nodeID), texture);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function (textureNode, images) {\n\n\t\t\tvar texture = this.loadTexture(textureNode, images);\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ('Scaling' in textureNode) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[0];\n\t\t\t\ttexture.repeat.y = values[1];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function (textureNode, images) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get(textureNode.id).children;\n\n\t\t\tif (children !== undefined && children.length > 0 && images[children[0].ID] !== undefined) {\n\n\t\t\t\tfileName = images[children[0].ID];\n\n\t\t\t\tif (fileName.indexOf('blob:') === 0 || fileName.indexOf('data:') === 0) {\n\n\t\t\t\t\tthis.textureLoader.setPath(undefined);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice(- 3).toLowerCase();\n\n\t\t\tif (extension === 'tga') {\n\n\t\t\t\tvar loader = this.manager.getHandler('.tga');\n\n\t\t\t\tif (loader === null) {\n\n\t\t\t\t\tconsole.warn('FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename);\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load(fileName);\n\n\t\t\t\t}\n\n\t\t\t} else if (extension === 'psd') {\n\n\t\t\t\tconsole.warn('FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename);\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load(fileName);\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath(currentPath);\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function (textureMap) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ('Material' in fbxTree.Objects) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor (var nodeID in materialNodes) {\n\n\t\t\t\t\tvar material = this.parseMaterial(materialNodes[nodeID], textureMap);\n\n\t\t\t\t\tif (material !== null) materialMap.set(parseInt(nodeID), material);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function (materialNode, textureMap) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif (typeof type === 'object') {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif (!connections.has(ID)) return null;\n\n\t\t\tvar parameters = this.parseParameters(materialNode, textureMap, ID);\n\n\t\t\tvar material;\n\n\t\t\tswitch (type.toLowerCase()) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type);\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues(parameters);\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function (materialNode, textureMap, ID) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif (materialNode.BumpFactor) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\t\t\tif (materialNode.Diffuse) {\n\n\t\t\t\tparameters.color = new Color().fromArray(materialNode.Diffuse.value);\n\n\t\t\t} else if (materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color') {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray(materialNode.DiffuseColor.value);\n\n\t\t\t}\n\n\t\t\tif (materialNode.DisplacementFactor) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif (materialNode.Emissive) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray(materialNode.Emissive.value);\n\n\t\t\t} else if (materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color') {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray(materialNode.EmissiveColor.value);\n\n\t\t\t}\n\n\t\t\tif (materialNode.EmissiveFactor) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat(materialNode.EmissiveFactor.value);\n\n\t\t\t}\n\n\t\t\tif (materialNode.Opacity) {\n\n\t\t\t\tparameters.opacity = parseFloat(materialNode.Opacity.value);\n\n\t\t\t}\n\n\t\t\tif (parameters.opacity < 1.0) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif (materialNode.ReflectionFactor) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif (materialNode.Shininess) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif (materialNode.Specular) {\n\n\t\t\t\tparameters.specular = new Color().fromArray(materialNode.Specular.value);\n\n\t\t\t} else if (materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color') {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray(materialNode.SpecularColor.value);\n\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tconnections.get(ID).children.forEach(function (child) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch (type) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\t\tparameters.alphaMap = self.getTexture(textureMap, child.ID);\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn('THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function (textureMap, id) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ('LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture) {\n\n\t\t\t\tconsole.warn('THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.');\n\t\t\t\tid = connections.get(id).children[0].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get(id);\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ('Deformer' in fbxTree.Objects) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor (var nodeID in DeformerNodes) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[nodeID];\n\n\t\t\t\t\tvar relationships = connections.get(parseInt(nodeID));\n\n\t\t\t\t\tif (deformerNode.attrType === 'Skin') {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton(relationships, DeformerNodes);\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif (relationships.parents.length > 1) console.warn('THREE.FBXLoader: skeleton attached to more than one geometry is not supported.');\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[0].ID;\n\n\t\t\t\t\t\tskeletons[nodeID] = skeleton;\n\n\t\t\t\t\t} else if (deformerNode.attrType === 'BlendShape') {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets(relationships, DeformerNodes);\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif (relationships.parents.length > 1) console.warn('THREE.FBXLoader: morph target attached to more than one geometry is not supported.');\n\n\t\t\t\t\t\tmorphTargets[nodeID] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function (relationships, deformerNodes) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach(function (child) {\n\n\t\t\t\tvar boneNode = deformerNodes[child.ID];\n\n\t\t\t\tif (boneNode.attrType !== 'Cluster') return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray(boneNode.TransformLink.a),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ('Indexes' in boneNode) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push(rawBone);\n\n\t\t\t});\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function (relationships, deformerNodes) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor (var i = 0; i < relationships.children.length; i++) {\n\n\t\t\t\tvar child = relationships.children[i];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[child.ID];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif (morphTargetNode.attrType !== 'BlendShapeChannel') return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get(parseInt(child.ID)).children.filter(function (child) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t})[0].ID;\n\n\t\t\t\trawMorphTargets.push(rawMorphTarget);\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function (deformers, geometryMap, materialMap) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels(deformers.skeletons, geometryMap, materialMap);\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar self = this;\n\t\t\tmodelMap.forEach(function (model) {\n\n\t\t\t\tvar modelNode = modelNodes[model.ID];\n\t\t\t\tself.setLookAtProperties(model, modelNode);\n\n\t\t\t\tvar parentConnections = connections.get(model.ID).parents;\n\n\t\t\t\tparentConnections.forEach(function (connection) {\n\n\t\t\t\t\tvar parent = modelMap.get(connection.ID);\n\t\t\t\t\tif (parent !== undefined) parent.add(model);\n\n\t\t\t\t});\n\n\t\t\t\tif (model.parent === null) {\n\n\t\t\t\t\tsceneGraph.add(model);\n\n\t\t\t\t}\n\n\n\t\t\t});\n\n\t\t\tthis.bindSkeleton(deformers.skeletons, geometryMap, modelMap);\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse(function (node) {\n\n\t\t\t\tif (node.userData.transformData) {\n\n\t\t\t\t\tif (node.parent) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform(node.userData.transformData);\n\n\t\t\t\t\tnode.applyMatrix(transform);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif (sceneGraph.children.length === 1 && sceneGraph.children[0].isGroup) {\n\n\t\t\t\tsceneGraph.children[0].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[0];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function (skeletons, geometryMap, materialMap) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor (var nodeID in modelNodes) {\n\n\t\t\t\tvar id = parseInt(nodeID);\n\t\t\t\tvar node = modelNodes[nodeID];\n\t\t\t\tvar relationships = connections.get(id);\n\n\t\t\t\tvar model = this.buildSkeleton(relationships, skeletons, id, node.attrName);\n\n\t\t\t\tif (!model) {\n\n\t\t\t\t\tswitch (node.attrType) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera(relationships);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight(relationships);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh(relationships, geometryMap, materialMap);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve(relationships, geometryMap);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName(node.attrName) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData(model, node);\n\t\t\t\tmodelMap.set(id, model);\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function (relationships, skeletons, id, name) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach(function (parent) {\n\n\t\t\t\tfor (var ID in skeletons) {\n\n\t\t\t\t\tvar skeleton = skeletons[ID];\n\n\t\t\t\t\tskeleton.rawBones.forEach(function (rawBone, i) {\n\n\t\t\t\t\t\tif (rawBone.ID === parent.ID) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy(rawBone.transformLink);\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName(name) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[i] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif (subBone !== null) {\n\n\t\t\t\t\t\t\t\tbone.add(subBone);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function (relationships) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach(function (child) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[child.ID];\n\n\t\t\t\tif (attr !== undefined) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tif (cameraAttribute === undefined) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif (cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif (cameraAttribute.NearPlane !== undefined) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif (cameraAttribute.FarPlane !== undefined) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif (cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif (cameraAttribute.FieldOfView !== undefined) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch (type) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera(fov, aspect, nearClippingPlane, farClippingPlane);\n\t\t\t\t\t\tif (focalLength !== null) model.setFocalLength(focalLength);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera(- width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn('THREE.FBXLoader: Unknown camera type ' + type + '.');\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function (relationships) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach(function (child) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[child.ID];\n\n\t\t\t\tif (attr !== undefined) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tif (lightAttribute === undefined) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif (lightAttribute.LightType === undefined) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif (lightAttribute.Color !== undefined) {\n\n\t\t\t\t\tcolor = new Color().fromArray(lightAttribute.Color.value);\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = (lightAttribute.Intensity === undefined) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif (lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif (lightAttribute.FarAttenuationEnd !== undefined) {\n\n\t\t\t\t\tif (lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch (type) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight(color, intensity, distance, decay);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight(color, intensity);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif (lightAttribute.InnerAngle !== undefined) {\n\n\t\t\t\t\t\t\tangle = MathUtils.degToRad(lightAttribute.InnerAngle.value);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif (lightAttribute.OuterAngle !== undefined) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad(lightAttribute.OuterAngle.value);\n\t\t\t\t\t\t\tpenumbra = Math.max(penumbra, 1);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight(color, intensity, distance, angle, penumbra, decay);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn('THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.');\n\t\t\t\t\t\tmodel = new PointLight(color, intensity);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif (lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function (relationships, geometryMap, materialMap) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach(function (child) {\n\n\t\t\t\tif (geometryMap.has(child.ID)) {\n\n\t\t\t\t\tgeometry = geometryMap.get(child.ID);\n\n\t\t\t\t}\n\n\t\t\t\tif (materialMap.has(child.ID)) {\n\n\t\t\t\t\tmaterials.push(materialMap.get(child.ID));\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tif (materials.length > 1) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if (materials.length > 0) {\n\n\t\t\t\tmaterial = materials[0];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial({ color: 0xcccccc });\n\t\t\t\tmaterials.push(material);\n\n\t\t\t}\n\n\t\t\tif ('color' in geometry.attributes) {\n\n\t\t\t\tmaterials.forEach(function (material) {\n\n\t\t\t\t\tmaterial.vertexColors = VertexColors;\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tif (geometry.FBX_Deformer) {\n\n\t\t\t\tmaterials.forEach(function (material) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t});\n\n\t\t\t\tmodel = new SkinnedMesh(geometry, material);\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh(geometry, material);\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function (relationships, geometryMap) {\n\n\t\t\tvar geometry = relationships.children.reduce(function (geo, child) {\n\n\t\t\t\tif (geometryMap.has(child.ID)) geo = geometryMap.get(child.ID);\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null);\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial({ color: 0x3300ff, linewidth: 1 });\n\t\t\treturn new Line(geometry, material);\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function (model, modelNode) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ('InheritType' in modelNode) transformData.inheritType = parseInt(modelNode.InheritType.value);\n\n\t\t\tif ('RotationOrder' in modelNode) transformData.eulerOrder = getEulerOrder(modelNode.RotationOrder.value);\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ('Lcl_Translation' in modelNode) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ('PreRotation' in modelNode) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ('Lcl_Rotation' in modelNode) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ('PostRotation' in modelNode) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ('Lcl_Scaling' in modelNode) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ('ScalingOffset' in modelNode) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ('ScalingPivot' in modelNode) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ('RotationOffset' in modelNode) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ('RotationPivot' in modelNode) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function (model, modelNode) {\n\n\t\t\tif ('LookAtProperty' in modelNode) {\n\n\t\t\t\tvar children = connections.get(model.ID).children;\n\n\t\t\t\tchildren.forEach(function (child) {\n\n\t\t\t\t\tif (child.relationship === 'LookAtProperty') {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[child.ID];\n\n\t\t\t\t\t\tif ('Lcl_Translation' in lookAtTarget) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif (model.target !== undefined) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray(pos);\n\t\t\t\t\t\t\t\tsceneGraph.add(model.target);\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt(new Vector3().fromArray(pos));\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function (skeletons, geometryMap, modelMap) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor (var ID in skeletons) {\n\n\t\t\t\tvar skeleton = skeletons[ID];\n\n\t\t\t\tvar parents = connections.get(parseInt(skeleton.ID)).parents;\n\n\t\t\t\tparents.forEach(function (parent) {\n\n\t\t\t\t\tif (geometryMap.has(parent.ID)) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get(geoID);\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach(function (geoConnParent) {\n\n\t\t\t\t\t\t\tif (modelMap.has(geoConnParent.ID)) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get(geoConnParent.ID);\n\n\t\t\t\t\t\t\t\tmodel.bind(new Skeleton(skeleton.bones), bindMatrices[geoConnParent.ID]);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ('Pose' in fbxTree.Objects) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor (var nodeID in BindPoseNode) {\n\n\t\t\t\t\tif (BindPoseNode[nodeID].attrType === 'BindPose') {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[nodeID].PoseNode;\n\n\t\t\t\t\t\tif (Array.isArray(poseNodes)) {\n\n\t\t\t\t\t\t\tposeNodes.forEach(function (poseNode) {\n\n\t\t\t\t\t\t\t\tbindMatrices[poseNode.Node] = new Matrix4().fromArray(poseNode.Matrix.a);\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[poseNodes.Node] = new Matrix4().fromArray(poseNodes.Matrix.a);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ('GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[0];\n\t\t\t\tvar g = ambientColor[1];\n\t\t\t\tvar b = ambientColor[2];\n\n\t\t\t\tif (r !== 0 || g !== 0 || b !== 0) {\n\n\t\t\t\t\tvar color = new Color(r, g, b);\n\t\t\t\t\tsceneGraph.add(new AmbientLight(color, 1));\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar self = this;\n\t\t\tsceneGraph.traverse(function (child) {\n\n\t\t\t\tif (child.isMesh) {\n\n\t\t\t\t\tif (child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length) {\n\n\t\t\t\t\t\tif (Array.isArray(child.material)) {\n\n\t\t\t\t\t\t\tchild.material.forEach(function (material, i) {\n\n\t\t\t\t\t\t\t\tself.setupMorphMaterial(child, material, i);\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tself.setupMorphMaterial(child, child.material);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t},\n\n\t\tsetupMorphMaterial: function (child, material, index) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse(function (node) {\n\n\t\t\t\tif (node.isMesh) {\n\n\t\t\t\t\tif (Array.isArray(node.material)) {\n\n\t\t\t\t\t\tnode.material.forEach(function (mat) {\n\n\t\t\t\t\t\t\tif (mat.uuid === matUuid && node.uuid !== uuid) sharedMat = true;\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else if (node.material.uuid === matUuid && node.uuid !== uuid) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tif (sharedMat === true) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif (index === undefined) child.material = clonedMat;\n\t\t\t\telse child.material[index] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() { }\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function (deformers) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ('Geometry' in fbxTree.Objects) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor (var nodeID in geoNodes) {\n\n\t\t\t\t\tvar relationships = connections.get(parseInt(nodeID));\n\t\t\t\t\tvar geo = this.parseGeometry(relationships, geoNodes[nodeID], deformers);\n\n\t\t\t\t\tgeometryMap.set(parseInt(nodeID), geo);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function (relationships, geoNode, deformers) {\n\n\t\t\tswitch (geoNode.attrType) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry(relationships, geoNode, deformers);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry(geoNode);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function (relationships, geoNode, deformers) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map(function (parent) {\n\n\t\t\t\treturn fbxTree.Objects.Model[parent.ID];\n\n\t\t\t});\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif (modelNodes.length === 0) return;\n\n\t\t\tvar skeleton = relationships.children.reduce(function (skeleton, child) {\n\n\t\t\t\tif (skeletons[child.ID] !== undefined) skeleton = skeletons[child.ID];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null);\n\n\t\t\trelationships.children.forEach(function (child) {\n\n\t\t\t\tif (deformers.morphTargets[child.ID] !== undefined) {\n\n\t\t\t\t\tmorphTargets.push(deformers.morphTargets[child.ID]);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[0];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ('RotationOrder' in modelNode) transformData.eulerOrder = getEulerOrder(modelNode.RotationOrder.value);\n\t\t\tif ('InheritType' in modelNode) transformData.inheritType = parseInt(modelNode.InheritType.value);\n\n\t\t\tif ('GeometricTranslation' in modelNode) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ('GeometricRotation' in modelNode) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ('GeometricScaling' in modelNode) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform(transformData);\n\n\t\t\treturn this.genGeometry(geoNode, skeleton, morphTargets, transform);\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function (geoNode, skeleton, morphTargets, preTransform) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif (geoNode.attrName) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode(geoNode, skeleton);\n\t\t\tvar buffers = this.genBuffers(geoInfo);\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute(buffers.vertex, 3);\n\n\t\t\tpositionAttribute.applyMatrix4(preTransform);\n\n\t\t\tgeo.setAttribute('position', positionAttribute);\n\n\t\t\tif (buffers.colors.length > 0) {\n\n\t\t\t\tgeo.setAttribute('color', new Float32BufferAttribute(buffers.colors, 3));\n\n\t\t\t}\n\n\t\t\tif (skeleton) {\n\n\t\t\t\tgeo.setAttribute('skinIndex', new Uint16BufferAttribute(buffers.weightsIndices, 4));\n\n\t\t\t\tgeo.setAttribute('skinWeight', new Float32BufferAttribute(buffers.vertexWeights, 4));\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif (buffers.normal.length > 0) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix(preTransform);\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute(buffers.normal, 3);\n\t\t\t\tnormalAttribute.applyNormalMatrix(normalMatrix);\n\n\t\t\t\tgeo.setAttribute('normal', normalAttribute);\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach(function (uvBuffer, i) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + (i + 1).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif (i === 0) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute(name, new Float32BufferAttribute(buffers.uvs[i], 2));\n\n\t\t\t});\n\n\t\t\tif (geoInfo.material && geoInfo.material.mappingType !== 'AllSame') {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[0];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach(function (currentIndex, i) {\n\n\t\t\t\t\tif (currentIndex !== prevMaterialIndex) {\n\n\t\t\t\t\t\tgeo.addGroup(startIndex, i - startIndex, prevMaterialIndex);\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif (geo.groups.length > 0) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[geo.groups.length - 1];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif (lastIndex !== buffers.materialIndex.length) {\n\n\t\t\t\t\t\tgeo.addGroup(lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif (geo.groups.length === 0) {\n\n\t\t\t\t\tgeo.addGroup(0, buffers.materialIndex.length, buffers.materialIndex[0]);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets(geo, geoNode, morphTargets, preTransform);\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function (geoNode, skeleton) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = (geoNode.Vertices !== undefined) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = (geoNode.PolygonVertexIndex !== undefined) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif (geoNode.LayerElementColor) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors(geoNode.LayerElementColor[0]);\n\n\t\t\t}\n\n\t\t\tif (geoNode.LayerElementMaterial) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices(geoNode.LayerElementMaterial[0]);\n\n\t\t\t}\n\n\t\t\tif (geoNode.LayerElementNormal) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals(geoNode.LayerElementNormal[0]);\n\n\t\t\t}\n\n\t\t\tif (geoNode.LayerElementUV) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile (geoNode.LayerElementUV[i]) {\n\n\t\t\t\t\tgeoInfo.uv.push(this.parseUVs(geoNode.LayerElementUV[i]));\n\t\t\t\t\ti++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif (skeleton !== null) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach(function (rawBone, i) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach(function (index, j) {\n\n\t\t\t\t\t\tif (geoInfo.weightTable[index] === undefined) geoInfo.weightTable[index] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[index].push({\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[j],\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t});\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function (geoInfo) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar self = this;\n\t\t\tgeoInfo.vertexIndices.forEach(function (vertexIndex, polygonVertexIndex) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif (vertexIndex < 0) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push(vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2);\n\n\t\t\t\tif (geoInfo.color) {\n\n\t\t\t\t\tvar data = getData(polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color);\n\n\t\t\t\t\tfaceColors.push(data[0], data[1], data[2]);\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.skeleton) {\n\n\t\t\t\t\tif (geoInfo.weightTable[vertexIndex] !== undefined) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[vertexIndex].forEach(function (wt) {\n\n\t\t\t\t\t\t\tweights.push(wt.weight);\n\t\t\t\t\t\t\tweightIndices.push(wt.id);\n\n\t\t\t\t\t\t});\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (weights.length > 4) {\n\n\t\t\t\t\t\tif (!displayedWeightsWarning) {\n\n\t\t\t\t\t\t\tconsole.warn('THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.');\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [0, 0, 0, 0];\n\t\t\t\t\t\tvar Weight = [0, 0, 0, 0];\n\n\t\t\t\t\t\tweights.forEach(function (weight, weightIndex) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[weightIndex];\n\n\t\t\t\t\t\t\tWeight.forEach(function (comparedWeight, comparedWeightIndex, comparedWeightArray) {\n\n\t\t\t\t\t\t\t\tif (currentWeight > comparedWeight) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[comparedWeightIndex] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[comparedWeightIndex];\n\t\t\t\t\t\t\t\t\twIndex[comparedWeightIndex] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile (weights.length < 4) {\n\n\t\t\t\t\t\tweights.push(0);\n\t\t\t\t\t\tweightIndices.push(0);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < 4; ++i) {\n\n\t\t\t\t\t\tfaceWeights.push(weights[i]);\n\t\t\t\t\t\tfaceWeightIndices.push(weightIndices[i]);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.normal) {\n\n\t\t\t\t\tvar data = getData(polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal);\n\n\t\t\t\t\tfaceNormals.push(data[0], data[1], data[2]);\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.material && geoInfo.material.mappingType !== 'AllSame') {\n\n\t\t\t\t\tvar materialIndex = getData(polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material)[0];\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.uv) {\n\n\t\t\t\t\tgeoInfo.uv.forEach(function (uv, i) {\n\n\t\t\t\t\t\tvar data = getData(polygonVertexIndex, polygonIndex, vertexIndex, uv);\n\n\t\t\t\t\t\tif (faceUVs[i] === undefined) {\n\n\t\t\t\t\t\t\tfaceUVs[i] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[i].push(data[0]);\n\t\t\t\t\t\tfaceUVs[i].push(data[1]);\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength++;\n\n\t\t\t\tif (endOfFace) {\n\n\t\t\t\t\tself.genFace(buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength);\n\n\t\t\t\t\tpolygonIndex++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function (buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength) {\n\n\t\t\tfor (var i = 2; i < faceLength; i++) {\n\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[0]]);\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[1]]);\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[2]]);\n\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[(i - 1) * 3]]);\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[(i - 1) * 3 + 1]]);\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[(i - 1) * 3 + 2]]);\n\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[i * 3]]);\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[i * 3 + 1]]);\n\t\t\t\tbuffers.vertex.push(geoInfo.vertexPositions[facePositionIndexes[i * 3 + 2]]);\n\n\t\t\t\tif (geoInfo.skeleton) {\n\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[0]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[1]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[2]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[3]);\n\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[(i - 1) * 4]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[(i - 1) * 4 + 1]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[(i - 1) * 4 + 2]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[(i - 1) * 4 + 3]);\n\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[i * 4]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[i * 4 + 1]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[i * 4 + 2]);\n\t\t\t\t\tbuffers.vertexWeights.push(faceWeights[i * 4 + 3]);\n\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[0]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[1]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[2]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[3]);\n\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4 + 1]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4 + 2]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[(i - 1) * 4 + 3]);\n\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[i * 4]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[i * 4 + 1]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[i * 4 + 2]);\n\t\t\t\t\tbuffers.weightsIndices.push(faceWeightIndices[i * 4 + 3]);\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.color) {\n\n\t\t\t\t\tbuffers.colors.push(faceColors[0]);\n\t\t\t\t\tbuffers.colors.push(faceColors[1]);\n\t\t\t\t\tbuffers.colors.push(faceColors[2]);\n\n\t\t\t\t\tbuffers.colors.push(faceColors[(i - 1) * 3]);\n\t\t\t\t\tbuffers.colors.push(faceColors[(i - 1) * 3 + 1]);\n\t\t\t\t\tbuffers.colors.push(faceColors[(i - 1) * 3 + 2]);\n\n\t\t\t\t\tbuffers.colors.push(faceColors[i * 3]);\n\t\t\t\t\tbuffers.colors.push(faceColors[i * 3 + 1]);\n\t\t\t\t\tbuffers.colors.push(faceColors[i * 3 + 2]);\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.material && geoInfo.material.mappingType !== 'AllSame') {\n\n\t\t\t\t\tbuffers.materialIndex.push(materialIndex);\n\t\t\t\t\tbuffers.materialIndex.push(materialIndex);\n\t\t\t\t\tbuffers.materialIndex.push(materialIndex);\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.normal) {\n\n\t\t\t\t\tbuffers.normal.push(faceNormals[0]);\n\t\t\t\t\tbuffers.normal.push(faceNormals[1]);\n\t\t\t\t\tbuffers.normal.push(faceNormals[2]);\n\n\t\t\t\t\tbuffers.normal.push(faceNormals[(i - 1) * 3]);\n\t\t\t\t\tbuffers.normal.push(faceNormals[(i - 1) * 3 + 1]);\n\t\t\t\t\tbuffers.normal.push(faceNormals[(i - 1) * 3 + 2]);\n\n\t\t\t\t\tbuffers.normal.push(faceNormals[i * 3]);\n\t\t\t\t\tbuffers.normal.push(faceNormals[i * 3 + 1]);\n\t\t\t\t\tbuffers.normal.push(faceNormals[i * 3 + 2]);\n\n\t\t\t\t}\n\n\t\t\t\tif (geoInfo.uv) {\n\n\t\t\t\t\tgeoInfo.uv.forEach(function (uv, j) {\n\n\t\t\t\t\t\tif (buffers.uvs[j] === undefined) buffers.uvs[j] = [];\n\n\t\t\t\t\t\tbuffers.uvs[j].push(faceUVs[j][0]);\n\t\t\t\t\t\tbuffers.uvs[j].push(faceUVs[j][1]);\n\n\t\t\t\t\t\tbuffers.uvs[j].push(faceUVs[j][(i - 1) * 2]);\n\t\t\t\t\t\tbuffers.uvs[j].push(faceUVs[j][(i - 1) * 2 + 1]);\n\n\t\t\t\t\t\tbuffers.uvs[j].push(faceUVs[j][i * 2]);\n\t\t\t\t\t\tbuffers.uvs[j].push(faceUVs[j][i * 2 + 1]);\n\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function (parentGeo, parentGeoNode, morphTargets, preTransform) {\n\n\t\t\tif (morphTargets.length === 0) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar self = this;\n\t\t\tmorphTargets.forEach(function (morphTarget) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach(function (rawTarget) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[rawTarget.geoID];\n\n\t\t\t\t\tif (morphGeoNode !== undefined) {\n\n\t\t\t\t\t\tself.genMorphGeometry(parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name);\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function (parentGeo, parentGeoNode, morphGeoNode, preTransform, name) {\n\n\t\t\tvar vertexIndices = (parentGeoNode.PolygonVertexIndex !== undefined) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = (morphGeoNode.Vertices !== undefined) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = (morphGeoNode.Indexes !== undefined) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array(length);\n\n\t\t\tfor (var i = 0; i < indices.length; i++) {\n\n\t\t\t\tvar morphIndex = indices[i] * 3;\n\n\t\t\t\tmorphPositions[morphIndex] = morphPositionsSparse[i * 3];\n\t\t\t\tmorphPositions[morphIndex + 1] = morphPositionsSparse[i * 3 + 1];\n\t\t\t\tmorphPositions[morphIndex + 2] = morphPositionsSparse[i * 3 + 2];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers(morphGeoInfo);\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute(morphBuffers.vertex, 3);\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4(preTransform);\n\n\t\t\tparentGeo.morphAttributes.position.push(positionAttribute);\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function (NormalNode) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif (referenceType === 'IndexToDirect') {\n\n\t\t\t\tif ('NormalIndex' in NormalNode) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ('NormalsIndex' in NormalNode) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function (UVNode) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif (referenceType === 'IndexToDirect') {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function (ColorNode) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif (referenceType === 'IndexToDirect') {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function (MaterialNode) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif (mappingType === 'NoMappingInformation') {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [0],\n\t\t\t\t\tindices: [0],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor (var i = 0; i < materialIndexBuffer.length; ++i) {\n\n\t\t\t\tmaterialIndices.push(i);\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function (geoNode) {\n\n\t\t\tif (NURBSCurve === undefined) {\n\n\t\t\t\tconsole.error('THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.');\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt(geoNode.Order);\n\n\t\t\tif (isNaN(order)) {\n\n\t\t\t\tconsole.error('THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id);\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor (var i = 0, l = pointsValues.length; i < l; i += 4) {\n\n\t\t\t\tcontrolPoints.push(new Vector4().fromArray(pointsValues, i));\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif (geoNode.Form === 'Closed') {\n\n\t\t\t\tcontrolPoints.push(controlPoints[0]);\n\n\t\t\t} else if (geoNode.Form === 'Periodic') {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor (var i = 0; i < degree; ++i) {\n\n\t\t\t\t\tcontrolPoints.push(controlPoints[i]);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve(degree, knots, controlPoints, startKnot, endKnot);\n\t\t\tvar vertices = curve.getPoints(controlPoints.length * 7);\n\n\t\t\tvar positions = new Float32Array(vertices.length * 3);\n\n\t\t\tvertices.forEach(function (vertex, i) {\n\n\t\t\t\tvertex.toArray(positions, i * 3);\n\n\t\t\t});\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() { }\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif (rawClips !== undefined) {\n\n\t\t\t\tfor (var key in rawClips) {\n\n\t\t\t\t\tvar rawClip = rawClips[key];\n\n\t\t\t\t\tvar clip = this.addClip(rawClip);\n\n\t\t\t\t\tanimationClips.push(clip);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif (fbxTree.Objects.AnimationCurve === undefined) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves(curveNodesMap);\n\n\t\t\tvar layersMap = this.parseAnimationLayers(curveNodesMap);\n\t\t\tvar rawClips = this.parseAnimStacks(layersMap);\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor (var nodeID in rawCurveNodes) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[nodeID];\n\n\t\t\t\tif (rawCurveNode.attrName.match(/S|R|T|DeformPercent/) !== null) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set(curveNode.id, curveNode);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function (curveNodesMap) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor (var nodeID in rawCurves) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[nodeID].id,\n\t\t\t\t\ttimes: rawCurves[nodeID].KeyTime.a.map(convertFBXTimeToSeconds),\n\t\t\t\t\tvalues: rawCurves[nodeID].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get(animationCurve.id);\n\n\t\t\t\tif (relationships !== undefined) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[0].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[0].relationship;\n\n\t\t\t\t\tif (animationCurveRelationship.match(/X/)) {\n\n\t\t\t\t\t\tcurveNodesMap.get(animationCurveID).curves['x'] = animationCurve;\n\n\t\t\t\t\t} else if (animationCurveRelationship.match(/Y/)) {\n\n\t\t\t\t\t\tcurveNodesMap.get(animationCurveID).curves['y'] = animationCurve;\n\n\t\t\t\t\t} else if (animationCurveRelationship.match(/Z/)) {\n\n\t\t\t\t\t\tcurveNodesMap.get(animationCurveID).curves['z'] = animationCurve;\n\n\t\t\t\t\t} else if (animationCurveRelationship.match(/d|DeformPercent/) && curveNodesMap.has(animationCurveID)) {\n\n\t\t\t\t\t\tcurveNodesMap.get(animationCurveID).curves['morph'] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function (curveNodesMap) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor (var nodeID in rawLayers) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get(parseInt(nodeID));\n\n\t\t\t\tif (connection !== undefined) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach(function (child, i) {\n\n\t\t\t\t\t\tif (curveNodesMap.has(child.ID)) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get(child.ID);\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif (curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined) {\n\n\t\t\t\t\t\t\t\tif (layerCurveNodes[i] === undefined) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get(child.ID).parents.filter(function (parent) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t})[0].ID;\n\n\t\t\t\t\t\t\t\t\tif (modelID !== undefined) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[modelID.toString()];\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName(rawModel.attrName) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [0, 0, 0],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [0, 0, 0],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [1, 1, 1],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse(function (child) {\n\n\t\t\t\t\t\t\t\t\t\t\tif (child.ID === rawModel.id) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (child.userData.transformData) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tif (!node.transform) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ('PreRotation' in rawModel) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ('PostRotation' in rawModel) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[i] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (layerCurveNodes[i]) layerCurveNodes[i][curveNode.attr] = curveNode;\n\n\t\t\t\t\t\t\t} else if (curveNode.curves.morph !== undefined) {\n\n\t\t\t\t\t\t\t\tif (layerCurveNodes[i] === undefined) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get(child.ID).parents.filter(function (parent) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t})[0].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get(deformerID).parents[0].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get(morpherID).parents[0].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get(geoID).parents[0].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[modelID];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName(rawModel.attrName) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[deformerID].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[i] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[i][curveNode.attr] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\tlayersMap.set(parseInt(nodeID), layerCurveNodes);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function (layersMap) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor (var nodeID in rawStacks) {\n\n\t\t\t\tvar children = connections.get(parseInt(nodeID)).children;\n\n\t\t\t\tif (children.length > 1) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn('THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.');\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get(children[0].ID);\n\n\t\t\t\trawClips[nodeID] = {\n\n\t\t\t\t\tname: rawStacks[nodeID].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function (rawClip) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar self = this;\n\t\t\trawClip.layer.forEach(function (rawTracks) {\n\n\t\t\t\ttracks = tracks.concat(self.generateTracks(rawTracks));\n\n\t\t\t});\n\n\t\t\treturn new AnimationClip(rawClip.name, - 1, tracks);\n\n\t\t},\n\n\t\tgenerateTracks: function (rawTracks) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif (rawTracks.transform) rawTracks.transform.decompose(initialPosition, initialRotation, initialScale);\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion(initialRotation, rawTracks.eulerOrder).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif (rawTracks.T !== undefined && Object.keys(rawTracks.T.curves).length > 0) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack(rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position');\n\t\t\t\tif (positionTrack !== undefined) tracks.push(positionTrack);\n\n\t\t\t}\n\n\t\t\tif (rawTracks.R !== undefined && Object.keys(rawTracks.R.curves).length > 0) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack(rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder);\n\t\t\t\tif (rotationTrack !== undefined) tracks.push(rotationTrack);\n\n\t\t\t}\n\n\t\t\tif (rawTracks.S !== undefined && Object.keys(rawTracks.S.curves).length > 0) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack(rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale');\n\t\t\t\tif (scaleTrack !== undefined) tracks.push(scaleTrack);\n\n\t\t\t}\n\n\t\t\tif (rawTracks.DeformPercent !== undefined) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack(rawTracks);\n\t\t\t\tif (morphTrack !== undefined) tracks.push(morphTrack);\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function (modelName, curves, initialValue, type) {\n\n\t\t\tvar times = this.getTimesForAllAxes(curves);\n\t\t\tvar values = this.getKeyframeTrackValues(times, curves, initialValue);\n\n\t\t\treturn new VectorKeyframeTrack(modelName + '.' + type, times, values);\n\n\t\t},\n\n\t\tgenerateRotationTrack: function (modelName, curves, initialValue, preRotation, postRotation, eulerOrder) {\n\n\t\t\tif (curves.x !== undefined) {\n\n\t\t\t\tthis.interpolateRotations(curves.x);\n\t\t\t\tcurves.x.values = curves.x.values.map(MathUtils.degToRad);\n\n\t\t\t}\n\t\t\tif (curves.y !== undefined) {\n\n\t\t\t\tthis.interpolateRotations(curves.y);\n\t\t\t\tcurves.y.values = curves.y.values.map(MathUtils.degToRad);\n\n\t\t\t}\n\t\t\tif (curves.z !== undefined) {\n\n\t\t\t\tthis.interpolateRotations(curves.z);\n\t\t\t\tcurves.z.values = curves.z.values.map(MathUtils.degToRad);\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes(curves);\n\t\t\tvar values = this.getKeyframeTrackValues(times, curves, initialValue);\n\n\t\t\tif (preRotation !== undefined) {\n\n\t\t\t\tpreRotation = preRotation.map(MathUtils.degToRad);\n\t\t\t\tpreRotation.push(eulerOrder);\n\n\t\t\t\tpreRotation = new Euler().fromArray(preRotation);\n\t\t\t\tpreRotation = new Quaternion().setFromEuler(preRotation);\n\n\t\t\t}\n\n\t\t\tif (postRotation !== undefined) {\n\n\t\t\t\tpostRotation = postRotation.map(MathUtils.degToRad);\n\t\t\t\tpostRotation.push(eulerOrder);\n\n\t\t\t\tpostRotation = new Euler().fromArray(postRotation);\n\t\t\t\tpostRotation = new Quaternion().setFromEuler(postRotation).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor (var i = 0; i < values.length; i += 3) {\n\n\t\t\t\teuler.set(values[i], values[i + 1], values[i + 2], eulerOrder);\n\n\t\t\t\tquaternion.setFromEuler(euler);\n\n\t\t\t\tif (preRotation !== undefined) quaternion.premultiply(preRotation);\n\t\t\t\tif (postRotation !== undefined) quaternion.multiply(postRotation);\n\n\t\t\t\tquaternion.toArray(quaternionValues, (i / 3) * 4);\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack(modelName + '.quaternion', times, quaternionValues);\n\n\t\t},\n\n\t\tgenerateMorphTrack: function (rawTracks) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map(function (val) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t});\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName(rawTracks.modelName).morphTargetDictionary[rawTracks.morphName];\n\n\t\t\treturn new NumberKeyframeTrack(rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values);\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function (curves) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif (curves.x !== undefined) times = times.concat(curves.x.times);\n\t\t\tif (curves.y !== undefined) times = times.concat(curves.y.times);\n\t\t\tif (curves.z !== undefined) times = times.concat(curves.z.times);\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort(function (a, b) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t}).filter(function (elem, index, array) {\n\n\t\t\t\treturn array.indexOf(elem) == index;\n\n\t\t\t});\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function (times, curves, initialValue) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach(function (time) {\n\n\t\t\t\tif (curves.x) xIndex = curves.x.times.indexOf(time);\n\t\t\t\tif (curves.y) yIndex = curves.y.times.indexOf(time);\n\t\t\t\tif (curves.z) zIndex = curves.z.times.indexOf(time);\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif (xIndex !== - 1) {\n\n\t\t\t\t\tvar xValue = curves.x.values[xIndex];\n\t\t\t\t\tvalues.push(xValue);\n\t\t\t\t\tprevValue[0] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push(prevValue[0]);\n\n\t\t\t\t}\n\n\t\t\t\tif (yIndex !== - 1) {\n\n\t\t\t\t\tvar yValue = curves.y.values[yIndex];\n\t\t\t\t\tvalues.push(yValue);\n\t\t\t\t\tprevValue[1] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push(prevValue[1]);\n\n\t\t\t\t}\n\n\t\t\t\tif (zIndex !== - 1) {\n\n\t\t\t\t\tvar zValue = curves.z.values[zIndex];\n\t\t\t\t\tvalues.push(zValue);\n\t\t\t\t\tprevValue[2] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push(prevValue[2]);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function (curve) {\n\n\t\t\tfor (var i = 1; i < curve.values.length; i++) {\n\n\t\t\t\tvar initialValue = curve.values[i - 1];\n\t\t\t\tvar valuesSpan = curve.values[i] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs(valuesSpan);\n\n\t\t\t\tif (absoluteSpan >= 180) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[i - 1];\n\t\t\t\t\tvar timeSpan = curve.times[i] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile (nextTime < curve.times[i]) {\n\n\t\t\t\t\t\tinterpolatedTimes.push(nextTime);\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push(nextValue);\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject(curve.times, i, interpolatedTimes);\n\t\t\t\t\tcurve.values = inject(curve.values, i, interpolatedValues);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() { }\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[this.currentIndent - 2];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[this.currentIndent - 1];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function (node) {\n\n\t\t\tthis.nodeStack.push(node);\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function (val, name) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function (text) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar self = this;\n\n\t\t\tvar split = text.split(/[\\r\\n]+/);\n\n\t\t\tsplit.forEach(function (line, i) {\n\n\t\t\t\tvar matchComment = line.match(/^[\\s\\t]*;/);\n\t\t\t\tvar matchEmpty = line.match(/^[\\s\\t]*$/);\n\n\t\t\t\tif (matchComment || matchEmpty) return;\n\n\t\t\t\tvar matchBeginning = line.match('^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '');\n\t\t\t\tvar matchProperty = line.match('^\\\\t{' + (self.currentIndent) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)');\n\t\t\t\tvar matchEnd = line.match('^\\\\t{' + (self.currentIndent - 1) + '}}');\n\n\t\t\t\tif (matchBeginning) {\n\n\t\t\t\t\tself.parseNodeBegin(line, matchBeginning);\n\n\t\t\t\t} else if (matchProperty) {\n\n\t\t\t\t\tself.parseNodeProperty(line, matchProperty, split[++i]);\n\n\t\t\t\t} else if (matchEnd) {\n\n\t\t\t\t\tself.popStack();\n\n\t\t\t\t} else if (line.match(/^[^\\s\\t}]/)) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tself.parseNodePropertyContinued(line);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function (line, property) {\n\n\t\t\tvar nodeName = property[1].trim().replace(/^\"/, '').replace(/\"$/, '');\n\n\t\t\tvar nodeAttrs = property[2].split(',').map(function (attr) {\n\n\t\t\t\treturn attr.trim().replace(/^\"/, '').replace(/\"$/, '');\n\n\t\t\t});\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr(nodeAttrs);\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif (this.currentIndent === 0) {\n\n\t\t\t\tthis.allNodes.add(nodeName, node);\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif (nodeName in currentNode) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif (nodeName === 'PoseNode') {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push(node);\n\n\t\t\t\t\t} else if (currentNode[nodeName].id !== undefined) {\n\n\t\t\t\t\t\tcurrentNode[nodeName] = {};\n\t\t\t\t\t\tcurrentNode[nodeName][currentNode[nodeName].id] = currentNode[nodeName];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attrs.id !== '') currentNode[nodeName][attrs.id] = node;\n\n\t\t\t\t} else if (typeof attrs.id === 'number') {\n\n\t\t\t\t\tcurrentNode[nodeName] = {};\n\t\t\t\t\tcurrentNode[nodeName][attrs.id] = node;\n\n\t\t\t\t} else if (nodeName !== 'Properties70') {\n\n\t\t\t\t\tif (nodeName === 'PoseNode') currentNode[nodeName] = [node];\n\t\t\t\t\telse currentNode[nodeName] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (typeof attrs.id === 'number') node.id = attrs.id;\n\t\t\tif (attrs.name !== '') node.attrName = attrs.name;\n\t\t\tif (attrs.type !== '') node.attrType = attrs.type;\n\n\t\t\tthis.pushStack(node);\n\n\t\t},\n\n\t\tparseNodeAttr: function (attrs) {\n\n\t\t\tvar id = attrs[0];\n\n\t\t\tif (attrs[0] !== '') {\n\n\t\t\t\tid = parseInt(attrs[0]);\n\n\t\t\t\tif (isNaN(id)) {\n\n\t\t\t\t\tid = attrs[0];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif (attrs.length > 1) {\n\n\t\t\t\tname = attrs[1].replace(/^(\\w+)::/, '');\n\t\t\t\ttype = attrs[2];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function (line, property, contentLine) {\n\n\t\t\tvar propName = property[1].replace(/^\"/, '').replace(/\"$/, '').trim();\n\t\t\tvar propValue = property[2].replace(/^\"/, '').replace(/\"$/, '').trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif (propName === 'Content' && propValue === ',') {\n\n\t\t\t\tpropValue = contentLine.replace(/\"/g, '').replace(/,$/, '').trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif (parentName === 'Properties70') {\n\n\t\t\t\tthis.parseNodeSpecialProperty(line, propName, propValue);\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif (propName === 'C') {\n\n\t\t\t\tvar connProps = propValue.split(',').slice(1);\n\t\t\t\tvar from = parseInt(connProps[0]);\n\t\t\t\tvar to = parseInt(connProps[1]);\n\n\t\t\t\tvar rest = propValue.split(',').slice(3);\n\n\t\t\t\trest = rest.map(function (elem) {\n\n\t\t\t\t\treturn elem.trim().replace(/^\"/, '');\n\n\t\t\t\t});\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [from, to];\n\t\t\t\tappend(propValue, rest);\n\n\t\t\t\tif (currentNode[propName] === undefined) {\n\n\t\t\t\t\tcurrentNode[propName] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif (propName === 'Node') currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif (propName in currentNode && Array.isArray(currentNode[propName])) {\n\n\t\t\t\tcurrentNode[propName].push(propValue);\n\n\t\t\t} else {\n\n\t\t\t\tif (propName !== 'a') currentNode[propName] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp(currentNode, propName);\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif (propName === 'a' && propValue.slice(- 1) !== ',') {\n\n\t\t\t\tcurrentNode.a = parseNumberArray(propValue);\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function (line) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif (line.slice(- 1) !== ',') {\n\n\t\t\t\tcurrentNode.a = parseNumberArray(currentNode.a);\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function (line, propName, propValue) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split('\",').map(function (prop) {\n\n\t\t\t\treturn prop.trim().replace(/^\\\"/, '').replace(/\\s/, '_');\n\n\t\t\t});\n\n\t\t\tvar innerPropName = props[0];\n\t\t\tvar innerPropType1 = props[1];\n\t\t\tvar innerPropType2 = props[2];\n\t\t\tvar innerPropFlag = props[3];\n\t\t\tvar innerPropValue = props[4];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch (innerPropType1) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat(innerPropValue);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray(innerPropValue);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[innerPropName] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp(this.getPrevNode(), innerPropName);\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() { }\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function (buffer) {\n\n\t\t\tvar reader = new BinaryReader(buffer);\n\t\t\treader.skip(23); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tconsole.log('THREE.FBXLoader: FBX binary version: ' + version);\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile (!this.endOfContent(reader)) {\n\n\t\t\t\tvar node = this.parseNode(reader, version);\n\t\t\t\tif (node !== null) allNodes.add(node.name, node);\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function (reader) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif (reader.size() % 16 === 0) {\n\n\t\t\t\treturn ((reader.getOffset() + 160 + 16) & ~0xf) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function (reader, version) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = (version >= 7500) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = (version >= 7500) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t// note: do not remove this even if you get a linter warning as it moves the buffer forward\n\t\t\tvar propertyListLen = (version >= 7500) ? reader.getUint64() : reader.getUint32();\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString(nameLen);\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif (endOffset === 0) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor (var i = 0; i < numProperties; i++) {\n\n\t\t\t\tpropertyList.push(this.parseProperty(reader));\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[0] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[1] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[2] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = (numProperties === 1 && reader.getOffset() === endOffset) ? true : false;\n\n\t\t\twhile (endOffset > reader.getOffset()) {\n\n\t\t\t\tvar subNode = this.parseNode(reader, version);\n\n\t\t\t\tif (subNode !== null) this.parseSubNode(name, node, subNode);\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif (typeof id === 'number') node.id = id;\n\t\t\tif (attrName !== '') node.attrName = attrName;\n\t\t\tif (attrType !== '') node.attrType = attrType;\n\t\t\tif (name !== '') node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function (name, node, subNode) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif (subNode.singleProperty === true) {\n\n\t\t\t\tvar value = subNode.propertyList[0];\n\n\t\t\t\tif (Array.isArray(value)) {\n\n\t\t\t\t\tnode[subNode.name] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[subNode.name] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if (name === 'Connections' && subNode.name === 'C') {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach(function (property, i) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif (i !== 0) array.push(property);\n\n\t\t\t\t});\n\n\t\t\t\tif (node.connections === undefined) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push(array);\n\n\t\t\t} else if (subNode.name === 'Properties70') {\n\n\t\t\t\tvar keys = Object.keys(subNode);\n\n\t\t\t\tkeys.forEach(function (key) {\n\n\t\t\t\t\tnode[key] = subNode[key];\n\n\t\t\t\t});\n\n\t\t\t} else if (name === 'Properties70' && subNode.name === 'P') {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[0];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[1];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[2];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[3];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif (innerPropName.indexOf('Lcl ') === 0) innerPropName = innerPropName.replace('Lcl ', 'Lcl_');\n\t\t\t\tif (innerPropType1.indexOf('Lcl ') === 0) innerPropType1 = innerPropType1.replace('Lcl ', 'Lcl_');\n\n\t\t\t\tif (innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf('Lcl_') === 0) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[4],\n\t\t\t\t\t\tsubNode.propertyList[5],\n\t\t\t\t\t\tsubNode.propertyList[6]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[4];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[innerPropName] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if (node[subNode.name] === undefined) {\n\n\t\t\t\tif (typeof subNode.id === 'number') {\n\n\t\t\t\t\tnode[subNode.name] = {};\n\t\t\t\t\tnode[subNode.name][subNode.id] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[subNode.name] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif (subNode.name === 'PoseNode') {\n\n\t\t\t\t\tif (!Array.isArray(node[subNode.name])) {\n\n\t\t\t\t\t\tnode[subNode.name] = [node[subNode.name]];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[subNode.name].push(subNode);\n\n\t\t\t\t} else if (node[subNode.name][subNode.id] === undefined) {\n\n\t\t\t\t\tnode[subNode.name][subNode.id] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function (reader) {\n\n\t\t\tvar type = reader.getString(1);\n\n\t\t\tswitch (type) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer(length);\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString(length);\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif (encoding === 0) {\n\n\t\t\t\t\t\tswitch (type) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray(arrayLength);\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array(arrayLength);\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array(arrayLength);\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array(arrayLength);\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array(arrayLength);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof Zlib === 'undefined') {\n\n\t\t\t\t\t\tconsole.error('THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js');\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Zlib.Inflate(new Uint8Array(reader.getArrayBuffer(compressedLength))); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader(inflate.decompress().buffer);\n\n\t\t\t\t\tswitch (type) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray(arrayLength);\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array(arrayLength);\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array(arrayLength);\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array(arrayLength);\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array(arrayLength);\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('THREE.FBXLoader: Unknown property type ' + type);\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader(buffer, littleEndian) {\n\n\t\tthis.dv = new DataView(buffer);\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = (littleEndian !== undefined) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function (length) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn (this.getUint8() & 1) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function (size) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0; i < size; i++) {\n\n\t\t\t\ta.push(this.getBoolean());\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8(this.offset);\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16(this.offset, this.littleEndian);\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32(this.offset, this.littleEndian);\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function (size) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0; i < size; i++) {\n\n\t\t\t\ta.push(this.getInt32());\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32(this.offset, this.littleEndian);\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif (this.littleEndian) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif (high & 0x80000000) {\n\n\t\t\t\thigh = ~high & 0xFFFFFFFF;\n\t\t\t\tlow = ~low & 0xFFFFFFFF;\n\n\t\t\t\tif (low === 0xFFFFFFFF) high = (high + 1) & 0xFFFFFFFF;\n\n\t\t\t\tlow = (low + 1) & 0xFFFFFFFF;\n\n\t\t\t\treturn - (high * 0x100000000 + low);\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function (size) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0; i < size; i++) {\n\n\t\t\t\ta.push(this.getInt64());\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif (this.littleEndian) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32(this.offset, this.littleEndian);\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function (size) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0; i < size; i++) {\n\n\t\t\t\ta.push(this.getFloat32());\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64(this.offset, this.littleEndian);\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function (size) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0; i < size; i++) {\n\n\t\t\t\ta.push(this.getFloat64());\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function (size) {\n\n\t\t\tvar value = this.dv.buffer.slice(this.offset, this.offset + size);\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function (size) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0; i < size; i++) {\n\n\t\t\t\ta[i] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf(0);\n\t\t\tif (nullByte >= 0) a = a.slice(0, nullByte);\n\n\t\t\treturn LoaderUtils.decodeText(new Uint8Array(a));\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() { }\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function (key, val) {\n\n\t\t\tthis[key] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary(buffer) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString(buffer, 0, CORRECT.length);\n\n\t}\n\n\tfunction isFbxFormatASCII(text) {\n\n\t\tvar CORRECT = ['K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\'];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read(offset) {\n\n\t\t\tvar result = text[offset - 1];\n\t\t\ttext = text.slice(cursor + offset);\n\t\t\tcursor++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor (var i = 0; i < CORRECT.length; ++i) {\n\n\t\t\tvar num = read(1);\n\t\t\tif (num === CORRECT[i]) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion(text) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match(versionRegExp);\n\t\tif (match) {\n\n\t\t\tvar version = parseInt(match[1]);\n\t\t\treturn version;\n\n\t\t}\n\t\tthrow new Error('THREE.FBXLoader: Cannot find the version number for the file given.');\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds(time) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData(polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n\n\t\tvar index;\n\n\t\tswitch (infoObject.mappingType) {\n\n\t\t\tcase 'ByPolygonVertex':\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon':\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice':\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame':\n\t\t\t\tindex = infoObject.indices[0];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType);\n\n\t\t}\n\n\t\tif (infoObject.referenceType === 'IndexToDirect') index = infoObject.indices[index];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice(dataArray, infoObject.buffer, from, to);\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform(transformData) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = (transformData.inheritType) ? transformData.inheritType : 0;\n\n\t\tif (transformData.translation) lTranslationM.setPosition(tempVec.fromArray(transformData.translation));\n\n\t\tif (transformData.preRotation) {\n\n\t\t\tvar array = transformData.preRotation.map(MathUtils.degToRad);\n\t\t\tarray.push(transformData.eulerOrder);\n\t\t\tlPreRotationM.makeRotationFromEuler(tempEuler.fromArray(array));\n\n\t\t}\n\n\t\tif (transformData.rotation) {\n\n\t\t\tvar array = transformData.rotation.map(MathUtils.degToRad);\n\t\t\tarray.push(transformData.eulerOrder);\n\t\t\tlRotationM.makeRotationFromEuler(tempEuler.fromArray(array));\n\n\t\t}\n\n\t\tif (transformData.postRotation) {\n\n\t\t\tvar array = transformData.postRotation.map(MathUtils.degToRad);\n\t\t\tarray.push(transformData.eulerOrder);\n\t\t\tlPostRotationM.makeRotationFromEuler(tempEuler.fromArray(array));\n\n\t\t}\n\n\t\tif (transformData.scale) lScalingM.scale(tempVec.fromArray(transformData.scale));\n\n\t\t// Pivots and offsets\n\t\tif (transformData.scalingOffset) lScalingOffsetM.setPosition(tempVec.fromArray(transformData.scalingOffset));\n\t\tif (transformData.scalingPivot) lScalingPivotM.setPosition(tempVec.fromArray(transformData.scalingPivot));\n\t\tif (transformData.rotationOffset) lRotationOffsetM.setPosition(tempVec.fromArray(transformData.rotationOffset));\n\t\tif (transformData.rotationPivot) lRotationPivotM.setPosition(tempVec.fromArray(transformData.rotationPivot));\n\n\t\t// parent transform\n\t\tif (transformData.parentMatrixWorld) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply(lRotationM).multiply(lPostRotationM);\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation(lParentGRM);\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tvar lLSM;\n\t\tvar lParentGSM;\n\t\tvar lParentGRSM;\n\n\t\tlParentTM.copyPosition(lParentGX);\n\t\tlParentGRSM = lParentTM.getInverse(lParentTM).multiply(lParentGX);\n\t\tlParentGSM = lParentGRM.getInverse(lParentGRM).multiply(lParentGRSM);\n\t\tlLSM = lScalingM;\n\n\t\tvar lGlobalRS;\n\t\tif (inheritType === 0) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply(lLRM).multiply(lParentGSM).multiply(lLSM);\n\n\t\t} else if (inheritType === 1) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply(lParentGSM).multiply(lLRM).multiply(lLSM);\n\n\t\t} else {\n\n\t\t\tvar lParentLSM = new Matrix4().copy(lScalingM);\n\n\t\t\tvar lParentGSM_noLocal = lParentGSM.multiply(lParentLSM.getInverse(lParentLSM));\n\n\t\t\tlGlobalRS = lParentGRM.multiply(lLRM).multiply(lParentGSM_noLocal).multiply(lLSM);\n\n\t\t}\n\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = lTranslationM.multiply(lRotationOffsetM).multiply(lRotationPivotM).multiply(lPreRotationM).multiply(lRotationM).multiply(lPostRotationM).multiply(lRotationPivotM.getInverse(lRotationPivotM)).multiply(lScalingOffsetM).multiply(lScalingPivotM).multiply(lScalingM).multiply(lScalingPivotM.getInverse(lScalingPivotM));\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition(lTransform);\n\n\t\tvar lGlobalTranslation = lParentGX.multiply(lLocalTWithAllPivotAndOffsetInfo);\n\t\tlGlobalT.copyPosition(lGlobalTranslation);\n\n\t\tlTransform = lGlobalT.multiply(lGlobalRS);\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder(order) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif (order === 6) {\n\n\t\t\tconsole.warn('THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.');\n\t\t\treturn enums[0];\n\n\t\t}\n\n\t\treturn enums[order];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray(value) {\n\n\t\tvar array = value.split(',').map(function (val) {\n\n\t\t\treturn parseFloat(val);\n\n\t\t});\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString(buffer, from, to) {\n\n\t\tif (from === undefined) from = 0;\n\t\tif (to === undefined) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText(new Uint8Array(buffer, from, to));\n\n\t}\n\n\tfunction append(a, b) {\n\n\t\tfor (var i = 0, j = a.length, l = b.length; i < l; i++ , j++) {\n\n\t\t\ta[j] = b[i];\n\n\t\t}\n\n\t}\n\n\tfunction slice(a, b, from, to) {\n\n\t\tfor (var i = from, j = 0; i < to; i++ , j++) {\n\n\t\t\ta[j] = b[i];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject(a1, index, a2) {\n\n\t\treturn a1.slice(0, index).concat(a2).concat(a1.slice(index));\n\n\t}\n\n\treturn FBXLoader;\n\n})();\n\nexport { FBXLoader };\n"]}]}