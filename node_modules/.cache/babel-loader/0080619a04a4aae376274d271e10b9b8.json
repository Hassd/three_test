{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\PCDLoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\jsm\\loaders\\PCDLoader.js","mtime":1579613441734},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJldmVyc2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LWJ1ZmZlci5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGEtdmlldyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtZmxvYXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1pbnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDMyLWFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZyI7CgovKioKICogQGF1dGhvciBGaWxpcGUgQ2FpeGV0YSAvIGh0dHA6Ly9maWxpcGVjYWl4ZXRhLmNvbS5icgogKiBAYXV0aG9yIE11Z2VuODcgLyBodHRwczovL2dpdGh1Yi5jb20vTXVnZW44NwogKgogKiBEZXNjcmlwdGlvbjogQSBUSFJFRSBsb2FkZXIgZm9yIFBDRCBhc2NpaSBhbmQgYmluYXJ5IGZpbGVzLgogKi8KaW1wb3J0IHsgQnVmZmVyR2VvbWV0cnksIEZpbGVMb2FkZXIsIEZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUsIExvYWRlciwgTG9hZGVyVXRpbHMsIFBvaW50cywgUG9pbnRzTWF0ZXJpYWwsIFZlcnRleENvbG9ycyB9IGZyb20gIi4uLy4uLy4uL2J1aWxkL3RocmVlLm1vZHVsZS5qcyI7Cgp2YXIgUENETG9hZGVyID0gZnVuY3Rpb24gUENETG9hZGVyKG1hbmFnZXIpIHsKICBMb2FkZXIuY2FsbCh0aGlzLCBtYW5hZ2VyKTsKICB0aGlzLmxpdHRsZUVuZGlhbiA9IHRydWU7Cn07CgpQQ0RMb2FkZXIucHJvdG90eXBlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKExvYWRlci5wcm90b3R5cGUpLCB7CiAgY29uc3RydWN0b3I6IFBDRExvYWRlciwKICBsb2FkOiBmdW5jdGlvbiBsb2FkKHVybCwgb25Mb2FkLCBvblByb2dyZXNzLCBvbkVycm9yKSB7CiAgICB2YXIgc2NvcGUgPSB0aGlzOwogICAgdmFyIGxvYWRlciA9IG5ldyBGaWxlTG9hZGVyKHNjb3BlLm1hbmFnZXIpOwogICAgbG9hZGVyLnNldFBhdGgoc2NvcGUucGF0aCk7CiAgICBsb2FkZXIuc2V0UmVzcG9uc2VUeXBlKCdhcnJheWJ1ZmZlcicpOwogICAgbG9hZGVyLmxvYWQodXJsLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICB0cnkgewogICAgICAgIG9uTG9hZChzY29wZS5wYXJzZShkYXRhLCB1cmwpKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGlmIChvbkVycm9yKSB7CiAgICAgICAgICBvbkVycm9yKGUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aHJvdyBlOwogICAgICAgIH0KICAgICAgfQogICAgfSwgb25Qcm9ncmVzcywgb25FcnJvcik7CiAgfSwKICBwYXJzZTogZnVuY3Rpb24gcGFyc2UoZGF0YSwgdXJsKSB7CiAgICAvLyBmcm9tIGh0dHBzOi8vZ2l0bGFiLmNvbS90YWtldHdvL3RocmVlLXBjZC1sb2FkZXIvYmxvYi9tYXN0ZXIvZGVjb21wcmVzcy1semYuanMKICAgIGZ1bmN0aW9uIGRlY29tcHJlc3NMWkYoaW5EYXRhLCBvdXRMZW5ndGgpIHsKICAgICAgdmFyIGluTGVuZ3RoID0gaW5EYXRhLmxlbmd0aDsKICAgICAgdmFyIG91dERhdGEgPSBuZXcgVWludDhBcnJheShvdXRMZW5ndGgpOwogICAgICB2YXIgaW5QdHIgPSAwOwogICAgICB2YXIgb3V0UHRyID0gMDsKICAgICAgdmFyIGN0cmw7CiAgICAgIHZhciBsZW47CiAgICAgIHZhciByZWY7CgogICAgICBkbyB7CiAgICAgICAgY3RybCA9IGluRGF0YVtpblB0cisrXTsKCiAgICAgICAgaWYgKGN0cmwgPCAxIDw8IDUpIHsKICAgICAgICAgIGN0cmwrKzsKICAgICAgICAgIGlmIChvdXRQdHIgKyBjdHJsID4gb3V0TGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ091dHB1dCBidWZmZXIgaXMgbm90IGxhcmdlIGVub3VnaCcpOwogICAgICAgICAgaWYgKGluUHRyICsgY3RybCA+IGluTGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY29tcHJlc3NlZCBkYXRhJyk7CgogICAgICAgICAgZG8gewogICAgICAgICAgICBvdXREYXRhW291dFB0cisrXSA9IGluRGF0YVtpblB0cisrXTsKICAgICAgICAgIH0gd2hpbGUgKC0tY3RybCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxlbiA9IGN0cmwgPj4gNTsKICAgICAgICAgIHJlZiA9IG91dFB0ciAtICgoY3RybCAmIDB4MWYpIDw8IDgpIC0gMTsKICAgICAgICAgIGlmIChpblB0ciA+PSBpbkxlbmd0aCkgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNvbXByZXNzZWQgZGF0YScpOwoKICAgICAgICAgIGlmIChsZW4gPT09IDcpIHsKICAgICAgICAgICAgbGVuICs9IGluRGF0YVtpblB0cisrXTsKICAgICAgICAgICAgaWYgKGluUHRyID49IGluTGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY29tcHJlc3NlZCBkYXRhJyk7CiAgICAgICAgICB9CgogICAgICAgICAgcmVmIC09IGluRGF0YVtpblB0cisrXTsKICAgICAgICAgIGlmIChvdXRQdHIgKyBsZW4gKyAyID4gb3V0TGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ091dHB1dCBidWZmZXIgaXMgbm90IGxhcmdlIGVub3VnaCcpOwogICAgICAgICAgaWYgKHJlZiA8IDApIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb21wcmVzc2VkIGRhdGEnKTsKICAgICAgICAgIGlmIChyZWYgPj0gb3V0UHRyKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY29tcHJlc3NlZCBkYXRhJyk7CgogICAgICAgICAgZG8gewogICAgICAgICAgICBvdXREYXRhW291dFB0cisrXSA9IG91dERhdGFbcmVmKytdOwogICAgICAgICAgfSB3aGlsZSAoLS1sZW4gKyAyKTsKICAgICAgICB9CiAgICAgIH0gd2hpbGUgKGluUHRyIDwgaW5MZW5ndGgpOwoKICAgICAgcmV0dXJuIG91dERhdGE7CiAgICB9CgogICAgZnVuY3Rpb24gcGFyc2VIZWFkZXIoZGF0YSkgewogICAgICB2YXIgUENEaGVhZGVyID0ge307CiAgICAgIHZhciByZXN1bHQxID0gZGF0YS5zZWFyY2goL1tcclxuXURBVEFccyhcUyopXHMvaSk7CiAgICAgIHZhciByZXN1bHQyID0gL1tcclxuXURBVEFccyhcUyopXHMvaS5leGVjKGRhdGEuc3Vic3RyKHJlc3VsdDEgLSAxKSk7CiAgICAgIFBDRGhlYWRlci5kYXRhID0gcmVzdWx0MlsxXTsKICAgICAgUENEaGVhZGVyLmhlYWRlckxlbiA9IHJlc3VsdDJbMF0ubGVuZ3RoICsgcmVzdWx0MTsKICAgICAgUENEaGVhZGVyLnN0ciA9IGRhdGEuc3Vic3RyKDAsIFBDRGhlYWRlci5oZWFkZXJMZW4pOyAvLyByZW1vdmUgY29tbWVudHMKCiAgICAgIFBDRGhlYWRlci5zdHIgPSBQQ0RoZWFkZXIuc3RyLnJlcGxhY2UoL1wjLiovZ2ksICcnKTsgLy8gcGFyc2UKCiAgICAgIFBDRGhlYWRlci52ZXJzaW9uID0gL1ZFUlNJT04gKC4qKS9pLmV4ZWMoUENEaGVhZGVyLnN0cik7CiAgICAgIFBDRGhlYWRlci5maWVsZHMgPSAvRklFTERTICguKikvaS5leGVjKFBDRGhlYWRlci5zdHIpOwogICAgICBQQ0RoZWFkZXIuc2l6ZSA9IC9TSVpFICguKikvaS5leGVjKFBDRGhlYWRlci5zdHIpOwogICAgICBQQ0RoZWFkZXIudHlwZSA9IC9UWVBFICguKikvaS5leGVjKFBDRGhlYWRlci5zdHIpOwogICAgICBQQ0RoZWFkZXIuY291bnQgPSAvQ09VTlQgKC4qKS9pLmV4ZWMoUENEaGVhZGVyLnN0cik7CiAgICAgIFBDRGhlYWRlci53aWR0aCA9IC9XSURUSCAoLiopL2kuZXhlYyhQQ0RoZWFkZXIuc3RyKTsKICAgICAgUENEaGVhZGVyLmhlaWdodCA9IC9IRUlHSFQgKC4qKS9pLmV4ZWMoUENEaGVhZGVyLnN0cik7CiAgICAgIFBDRGhlYWRlci52aWV3cG9pbnQgPSAvVklFV1BPSU5UICguKikvaS5leGVjKFBDRGhlYWRlci5zdHIpOwogICAgICBQQ0RoZWFkZXIucG9pbnRzID0gL1BPSU5UUyAoLiopL2kuZXhlYyhQQ0RoZWFkZXIuc3RyKTsgLy8gZXZhbHVhdGUKCiAgICAgIGlmIChQQ0RoZWFkZXIudmVyc2lvbiAhPT0gbnVsbCkgUENEaGVhZGVyLnZlcnNpb24gPSBwYXJzZUZsb2F0KFBDRGhlYWRlci52ZXJzaW9uWzFdKTsKICAgICAgaWYgKFBDRGhlYWRlci5maWVsZHMgIT09IG51bGwpIFBDRGhlYWRlci5maWVsZHMgPSBQQ0RoZWFkZXIuZmllbGRzWzFdLnNwbGl0KCcgJyk7CiAgICAgIGlmIChQQ0RoZWFkZXIudHlwZSAhPT0gbnVsbCkgUENEaGVhZGVyLnR5cGUgPSBQQ0RoZWFkZXIudHlwZVsxXS5zcGxpdCgnICcpOwogICAgICBpZiAoUENEaGVhZGVyLndpZHRoICE9PSBudWxsKSBQQ0RoZWFkZXIud2lkdGggPSBwYXJzZUludChQQ0RoZWFkZXIud2lkdGhbMV0pOwogICAgICBpZiAoUENEaGVhZGVyLmhlaWdodCAhPT0gbnVsbCkgUENEaGVhZGVyLmhlaWdodCA9IHBhcnNlSW50KFBDRGhlYWRlci5oZWlnaHRbMV0pOwogICAgICBpZiAoUENEaGVhZGVyLnZpZXdwb2ludCAhPT0gbnVsbCkgUENEaGVhZGVyLnZpZXdwb2ludCA9IFBDRGhlYWRlci52aWV3cG9pbnRbMV07CiAgICAgIGlmIChQQ0RoZWFkZXIucG9pbnRzICE9PSBudWxsKSBQQ0RoZWFkZXIucG9pbnRzID0gcGFyc2VJbnQoUENEaGVhZGVyLnBvaW50c1sxXSwgMTApOwogICAgICBpZiAoUENEaGVhZGVyLnBvaW50cyA9PT0gbnVsbCkgUENEaGVhZGVyLnBvaW50cyA9IFBDRGhlYWRlci53aWR0aCAqIFBDRGhlYWRlci5oZWlnaHQ7CgogICAgICBpZiAoUENEaGVhZGVyLnNpemUgIT09IG51bGwpIHsKICAgICAgICBQQ0RoZWFkZXIuc2l6ZSA9IFBDRGhlYWRlci5zaXplWzFdLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoeCwgMTApOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAoUENEaGVhZGVyLmNvdW50ICE9PSBudWxsKSB7CiAgICAgICAgUENEaGVhZGVyLmNvdW50ID0gUENEaGVhZGVyLmNvdW50WzFdLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoeCwgMTApOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIFBDRGhlYWRlci5jb3VudCA9IFtdOwoKICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IFBDRGhlYWRlci5maWVsZHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgICBQQ0RoZWFkZXIuY291bnQucHVzaCgxKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIFBDRGhlYWRlci5vZmZzZXQgPSB7fTsKICAgICAgdmFyIHNpemVTdW0gPSAwOwoKICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBQQ0RoZWFkZXIuZmllbGRzLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgIGlmIChQQ0RoZWFkZXIuZGF0YSA9PT0gJ2FzY2lpJykgewogICAgICAgICAgUENEaGVhZGVyLm9mZnNldFtQQ0RoZWFkZXIuZmllbGRzW2ldXSA9IGk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIFBDRGhlYWRlci5vZmZzZXRbUENEaGVhZGVyLmZpZWxkc1tpXV0gPSBzaXplU3VtOwogICAgICAgICAgc2l6ZVN1bSArPSBQQ0RoZWFkZXIuc2l6ZVtpXTsKICAgICAgICB9CiAgICAgIH0gLy8gZm9yIGJpbmFyeSBvbmx5CgoKICAgICAgUENEaGVhZGVyLnJvd1NpemUgPSBzaXplU3VtOwogICAgICByZXR1cm4gUENEaGVhZGVyOwogICAgfQoKICAgIHZhciB0ZXh0RGF0YSA9IExvYWRlclV0aWxzLmRlY29kZVRleHQobmV3IFVpbnQ4QXJyYXkoZGF0YSkpOyAvLyBwYXJzZSBoZWFkZXIgKGFsd2F5cyBhc2NpaSBmb3JtYXQpCgogICAgdmFyIFBDRGhlYWRlciA9IHBhcnNlSGVhZGVyKHRleHREYXRhKTsgLy8gcGFyc2UgZGF0YQoKICAgIHZhciBwb3NpdGlvbiA9IFtdOwogICAgdmFyIG5vcm1hbCA9IFtdOwogICAgdmFyIGNvbG9yID0gW107IC8vIGFzY2lpCgogICAgaWYgKFBDRGhlYWRlci5kYXRhID09PSAnYXNjaWknKSB7CiAgICAgIHZhciBvZmZzZXQgPSBQQ0RoZWFkZXIub2Zmc2V0OwogICAgICB2YXIgcGNkRGF0YSA9IHRleHREYXRhLnN1YnN0cihQQ0RoZWFkZXIuaGVhZGVyTGVuKTsKICAgICAgdmFyIGxpbmVzID0gcGNkRGF0YS5zcGxpdCgnXG4nKTsKCiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gbGluZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICAgICAgaWYgKGxpbmVzW2ldID09PSAnJykgY29udGludWU7CiAgICAgICAgdmFyIGxpbmUgPSBsaW5lc1tpXS5zcGxpdCgnICcpOwoKICAgICAgICBpZiAob2Zmc2V0LnggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgcG9zaXRpb24ucHVzaChwYXJzZUZsb2F0KGxpbmVbb2Zmc2V0LnhdKSk7CiAgICAgICAgICBwb3NpdGlvbi5wdXNoKHBhcnNlRmxvYXQobGluZVtvZmZzZXQueV0pKTsKICAgICAgICAgIHBvc2l0aW9uLnB1c2gocGFyc2VGbG9hdChsaW5lW29mZnNldC56XSkpOwogICAgICAgIH0KCiAgICAgICAgaWYgKG9mZnNldC5yZ2IgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgdmFyIHJnYiA9IHBhcnNlRmxvYXQobGluZVtvZmZzZXQucmdiXSk7CiAgICAgICAgICB2YXIgciA9IHJnYiA+PiAxNiAmIDB4MDAwMGZmOwogICAgICAgICAgdmFyIGcgPSByZ2IgPj4gOCAmIDB4MDAwMGZmOwogICAgICAgICAgdmFyIGIgPSByZ2IgPj4gMCAmIDB4MDAwMGZmOwogICAgICAgICAgY29sb3IucHVzaChyIC8gMjU1LCBnIC8gMjU1LCBiIC8gMjU1KTsKICAgICAgICB9CgogICAgICAgIGlmIChvZmZzZXQubm9ybWFsX3ggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgbm9ybWFsLnB1c2gocGFyc2VGbG9hdChsaW5lW29mZnNldC5ub3JtYWxfeF0pKTsKICAgICAgICAgIG5vcm1hbC5wdXNoKHBhcnNlRmxvYXQobGluZVtvZmZzZXQubm9ybWFsX3ldKSk7CiAgICAgICAgICBub3JtYWwucHVzaChwYXJzZUZsb2F0KGxpbmVbb2Zmc2V0Lm5vcm1hbF96XSkpOwogICAgICAgIH0KICAgICAgfQogICAgfSAvLyBiaW5hcnktY29tcHJlc3NlZAogICAgLy8gbm9ybWFsbHkgZGF0YSBpbiBQQ0QgZmlsZXMgYXJlIG9yZ2FuaXplZCBhcyBhcnJheSBvZiBzdHJ1Y3R1cmVzOiBYWVpSR0JYWVpSR0IKICAgIC8vIGJpbmFyeSBjb21wcmVzc2VkIFBDRCBmaWxlcyBvcmdhbml6ZSB0aGVpciBkYXRhIGFzIHN0cnVjdHVyZSBvZiBhcnJheXM6IFhYWVlaWlJHQlJHQgogICAgLy8gdGhhdCByZXF1aXJlcyBhIHRvdGFsbHkgZGlmZmVyZW50IHBhcnNpbmcgYXBwcm9hY2ggY29tcGFyZWQgdG8gbm9uLWNvbXByZXNzZWQgZGF0YQoKCiAgICBpZiAoUENEaGVhZGVyLmRhdGEgPT09ICdiaW5hcnlfY29tcHJlc3NlZCcpIHsKICAgICAgdmFyIHNpemVzID0gbmV3IFVpbnQzMkFycmF5KGRhdGEuc2xpY2UoUENEaGVhZGVyLmhlYWRlckxlbiwgUENEaGVhZGVyLmhlYWRlckxlbiArIDgpKTsKICAgICAgdmFyIGNvbXByZXNzZWRTaXplID0gc2l6ZXNbMF07CiAgICAgIHZhciBkZWNvbXByZXNzZWRTaXplID0gc2l6ZXNbMV07CiAgICAgIHZhciBkZWNvbXByZXNzZWQgPSBkZWNvbXByZXNzTFpGKG5ldyBVaW50OEFycmF5KGRhdGEsIFBDRGhlYWRlci5oZWFkZXJMZW4gKyA4LCBjb21wcmVzc2VkU2l6ZSksIGRlY29tcHJlc3NlZFNpemUpOwogICAgICB2YXIgZGF0YXZpZXcgPSBuZXcgRGF0YVZpZXcoZGVjb21wcmVzc2VkLmJ1ZmZlcik7CiAgICAgIHZhciBvZmZzZXQgPSBQQ0RoZWFkZXIub2Zmc2V0OwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBQQ0RoZWFkZXIucG9pbnRzOyBpKyspIHsKICAgICAgICBpZiAob2Zmc2V0LnggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgcG9zaXRpb24ucHVzaChkYXRhdmlldy5nZXRGbG9hdDMyKFBDRGhlYWRlci5wb2ludHMgKiBvZmZzZXQueCArIFBDRGhlYWRlci5zaXplWzBdICogaSwgdGhpcy5saXR0bGVFbmRpYW4pKTsKICAgICAgICAgIHBvc2l0aW9uLnB1c2goZGF0YXZpZXcuZ2V0RmxvYXQzMihQQ0RoZWFkZXIucG9pbnRzICogb2Zmc2V0LnkgKyBQQ0RoZWFkZXIuc2l6ZVsxXSAqIGksIHRoaXMubGl0dGxlRW5kaWFuKSk7CiAgICAgICAgICBwb3NpdGlvbi5wdXNoKGRhdGF2aWV3LmdldEZsb2F0MzIoUENEaGVhZGVyLnBvaW50cyAqIG9mZnNldC56ICsgUENEaGVhZGVyLnNpemVbMl0gKiBpLCB0aGlzLmxpdHRsZUVuZGlhbikpOwogICAgICAgIH0KCiAgICAgICAgaWYgKG9mZnNldC5yZ2IgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgY29sb3IucHVzaChkYXRhdmlldy5nZXRVaW50OChQQ0RoZWFkZXIucG9pbnRzICogb2Zmc2V0LnJnYiArIFBDRGhlYWRlci5zaXplWzNdICogaSArIDApIC8gMjU1LjApOwogICAgICAgICAgY29sb3IucHVzaChkYXRhdmlldy5nZXRVaW50OChQQ0RoZWFkZXIucG9pbnRzICogb2Zmc2V0LnJnYiArIFBDRGhlYWRlci5zaXplWzNdICogaSArIDEpIC8gMjU1LjApOwogICAgICAgICAgY29sb3IucHVzaChkYXRhdmlldy5nZXRVaW50OChQQ0RoZWFkZXIucG9pbnRzICogb2Zmc2V0LnJnYiArIFBDRGhlYWRlci5zaXplWzNdICogaSArIDIpIC8gMjU1LjApOwogICAgICAgIH0KCiAgICAgICAgaWYgKG9mZnNldC5ub3JtYWxfeCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBub3JtYWwucHVzaChkYXRhdmlldy5nZXRGbG9hdDMyKFBDRGhlYWRlci5wb2ludHMgKiBvZmZzZXQubm9ybWFsX3ggKyBQQ0RoZWFkZXIuc2l6ZVs0XSAqIGksIHRoaXMubGl0dGxlRW5kaWFuKSk7CiAgICAgICAgICBub3JtYWwucHVzaChkYXRhdmlldy5nZXRGbG9hdDMyKFBDRGhlYWRlci5wb2ludHMgKiBvZmZzZXQubm9ybWFsX3kgKyBQQ0RoZWFkZXIuc2l6ZVs1XSAqIGksIHRoaXMubGl0dGxlRW5kaWFuKSk7CiAgICAgICAgICBub3JtYWwucHVzaChkYXRhdmlldy5nZXRGbG9hdDMyKFBDRGhlYWRlci5wb2ludHMgKiBvZmZzZXQubm9ybWFsX3ogKyBQQ0RoZWFkZXIuc2l6ZVs2XSAqIGksIHRoaXMubGl0dGxlRW5kaWFuKSk7CiAgICAgICAgfQogICAgICB9CiAgICB9IC8vIGJpbmFyeQoKCiAgICBpZiAoUENEaGVhZGVyLmRhdGEgPT09ICdiaW5hcnknKSB7CiAgICAgIHZhciBkYXRhdmlldyA9IG5ldyBEYXRhVmlldyhkYXRhLCBQQ0RoZWFkZXIuaGVhZGVyTGVuKTsKICAgICAgdmFyIG9mZnNldCA9IFBDRGhlYWRlci5vZmZzZXQ7CgogICAgICBmb3IgKHZhciBpID0gMCwgcm93ID0gMDsgaSA8IFBDRGhlYWRlci5wb2ludHM7IGkrKywgcm93ICs9IFBDRGhlYWRlci5yb3dTaXplKSB7CiAgICAgICAgaWYgKG9mZnNldC54ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHBvc2l0aW9uLnB1c2goZGF0YXZpZXcuZ2V0RmxvYXQzMihyb3cgKyBvZmZzZXQueCwgdGhpcy5saXR0bGVFbmRpYW4pKTsKICAgICAgICAgIHBvc2l0aW9uLnB1c2goZGF0YXZpZXcuZ2V0RmxvYXQzMihyb3cgKyBvZmZzZXQueSwgdGhpcy5saXR0bGVFbmRpYW4pKTsKICAgICAgICAgIHBvc2l0aW9uLnB1c2goZGF0YXZpZXcuZ2V0RmxvYXQzMihyb3cgKyBvZmZzZXQueiwgdGhpcy5saXR0bGVFbmRpYW4pKTsKICAgICAgICB9CgogICAgICAgIGlmIChvZmZzZXQucmdiICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGNvbG9yLnB1c2goZGF0YXZpZXcuZ2V0VWludDgocm93ICsgb2Zmc2V0LnJnYiArIDIpIC8gMjU1LjApOwogICAgICAgICAgY29sb3IucHVzaChkYXRhdmlldy5nZXRVaW50OChyb3cgKyBvZmZzZXQucmdiICsgMSkgLyAyNTUuMCk7CiAgICAgICAgICBjb2xvci5wdXNoKGRhdGF2aWV3LmdldFVpbnQ4KHJvdyArIG9mZnNldC5yZ2IgKyAwKSAvIDI1NS4wKTsKICAgICAgICB9CgogICAgICAgIGlmIChvZmZzZXQubm9ybWFsX3ggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgbm9ybWFsLnB1c2goZGF0YXZpZXcuZ2V0RmxvYXQzMihyb3cgKyBvZmZzZXQubm9ybWFsX3gsIHRoaXMubGl0dGxlRW5kaWFuKSk7CiAgICAgICAgICBub3JtYWwucHVzaChkYXRhdmlldy5nZXRGbG9hdDMyKHJvdyArIG9mZnNldC5ub3JtYWxfeSwgdGhpcy5saXR0bGVFbmRpYW4pKTsKICAgICAgICAgIG5vcm1hbC5wdXNoKGRhdGF2aWV3LmdldEZsb2F0MzIocm93ICsgb2Zmc2V0Lm5vcm1hbF96LCB0aGlzLmxpdHRsZUVuZGlhbikpOwogICAgICAgIH0KICAgICAgfQogICAgfSAvLyBidWlsZCBnZW9tZXRyeQoKCiAgICB2YXIgZ2VvbWV0cnkgPSBuZXcgQnVmZmVyR2VvbWV0cnkoKTsKICAgIGlmIChwb3NpdGlvbi5sZW5ndGggPiAwKSBnZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IEZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUocG9zaXRpb24sIDMpKTsKICAgIGlmIChub3JtYWwubGVuZ3RoID4gMCkgZ2VvbWV0cnkuc2V0QXR0cmlidXRlKCdub3JtYWwnLCBuZXcgRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShub3JtYWwsIDMpKTsKICAgIGlmIChjb2xvci5sZW5ndGggPiAwKSBnZW9tZXRyeS5zZXRBdHRyaWJ1dGUoJ2NvbG9yJywgbmV3IEZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUoY29sb3IsIDMpKTsKICAgIGdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpOyAvLyBidWlsZCBtYXRlcmlhbAoKICAgIHZhciBtYXRlcmlhbCA9IG5ldyBQb2ludHNNYXRlcmlhbCh7CiAgICAgIHNpemU6IDAuMDA1CiAgICB9KTsKCiAgICBpZiAoY29sb3IubGVuZ3RoID4gMCkgewogICAgICBtYXRlcmlhbC52ZXJ0ZXhDb2xvcnMgPSBWZXJ0ZXhDb2xvcnM7CiAgICB9IGVsc2UgewogICAgICBtYXRlcmlhbC5jb2xvci5zZXRIZXgoTWF0aC5yYW5kb20oKSAqIDB4ZmZmZmZmKTsKICAgIH0gLy8gYnVpbGQgcG9pbnQgY2xvdWQKCgogICAgdmFyIG1lc2ggPSBuZXcgUG9pbnRzKGdlb21ldHJ5LCBtYXRlcmlhbCk7CiAgICB2YXIgbmFtZSA9IHVybC5zcGxpdCgnJykucmV2ZXJzZSgpLmpvaW4oJycpOwogICAgbmFtZSA9IC8oW15cL10qKS8uZXhlYyhuYW1lKTsKICAgIG5hbWUgPSBuYW1lWzFdLnNwbGl0KCcnKS5yZXZlcnNlKCkuam9pbignJyk7CiAgICBtZXNoLm5hbWUgPSBuYW1lOwogICAgcmV0dXJuIG1lc2g7CiAgfQp9KTsKZXhwb3J0IHsgUENETG9hZGVyIH07"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/jsm/loaders/PCDLoader.js"],"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Loader","LoaderUtils","Points","PointsMaterial","VertexColors","PCDLoader","manager","call","littleEndian","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","data","parse","e","decompressLZF","inData","outLength","inLength","length","outData","Uint8Array","inPtr","outPtr","ctrl","len","ref","Error","parseHeader","PCDheader","result1","search","result2","exec","substr","headerLen","str","replace","version","fields","size","type","count","width","height","viewpoint","points","parseFloat","split","parseInt","map","x","i","l","push","offset","sizeSum","rowSize","textData","decodeText","position","normal","color","pcdData","lines","line","undefined","y","z","rgb","r","g","b","normal_x","normal_y","normal_z","sizes","Uint32Array","slice","compressedSize","decompressedSize","decompressed","dataview","DataView","buffer","getFloat32","getUint8","row","geometry","setAttribute","computeBoundingSphere","material","vertexColors","setHex","Math","random","mesh","name","reverse","join"],"mappings":"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","sourcesContent":["/**\n * @author Filipe Caixeta / http://filipecaixeta.com.br\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Description: A THREE loader for PCD ascii and binary files.\n */\n\nimport {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tLoaderUtils,\n\tPoints,\n\tPointsMaterial,\n\tVertexColors\n} from \"../../../build/three.module.js\";\n\nvar PCDLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.littleEndian = true;\n\n};\n\n\nPCDLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: PCDLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( data ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( data, url ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow e;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( data, url ) {\n\n\t\t// from https://gitlab.com/taketwo/three-pcd-loader/blob/master/decompress-lzf.js\n\n\t\tfunction decompressLZF( inData, outLength ) {\n\n\t\t\tvar inLength = inData.length;\n\t\t\tvar outData = new Uint8Array( outLength );\n\t\t\tvar inPtr = 0;\n\t\t\tvar outPtr = 0;\n\t\t\tvar ctrl;\n\t\t\tvar len;\n\t\t\tvar ref;\n\t\t\tdo {\n\n\t\t\t\tctrl = inData[ inPtr ++ ];\n\t\t\t\tif ( ctrl < ( 1 << 5 ) ) {\n\n\t\t\t\t\tctrl ++;\n\t\t\t\t\tif ( outPtr + ctrl > outLength ) throw new Error( 'Output buffer is not large enough' );\n\t\t\t\t\tif ( inPtr + ctrl > inLength ) throw new Error( 'Invalid compressed data' );\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\toutData[ outPtr ++ ] = inData[ inPtr ++ ];\n\n\t\t\t\t\t} while ( -- ctrl );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlen = ctrl >> 5;\n\t\t\t\t\tref = outPtr - ( ( ctrl & 0x1f ) << 8 ) - 1;\n\t\t\t\t\tif ( inPtr >= inLength ) throw new Error( 'Invalid compressed data' );\n\t\t\t\t\tif ( len === 7 ) {\n\n\t\t\t\t\t\tlen += inData[ inPtr ++ ];\n\t\t\t\t\t\tif ( inPtr >= inLength ) throw new Error( 'Invalid compressed data' );\n\n\t\t\t\t\t}\n\t\t\t\t\tref -= inData[ inPtr ++ ];\n\t\t\t\t\tif ( outPtr + len + 2 > outLength ) throw new Error( 'Output buffer is not large enough' );\n\t\t\t\t\tif ( ref < 0 ) throw new Error( 'Invalid compressed data' );\n\t\t\t\t\tif ( ref >= outPtr ) throw new Error( 'Invalid compressed data' );\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\toutData[ outPtr ++ ] = outData[ ref ++ ];\n\n\t\t\t\t\t} while ( -- len + 2 );\n\n\t\t\t\t}\n\n\t\t\t} while ( inPtr < inLength );\n\n\t\t\treturn outData;\n\n\t\t}\n\n\t\tfunction parseHeader( data ) {\n\n\t\t\tvar PCDheader = {};\n\t\t\tvar result1 = data.search( /[\\r\\n]DATA\\s(\\S*)\\s/i );\n\t\t\tvar result2 = /[\\r\\n]DATA\\s(\\S*)\\s/i.exec( data.substr( result1 - 1 ) );\n\n\t\t\tPCDheader.data = result2[ 1 ];\n\t\t\tPCDheader.headerLen = result2[ 0 ].length + result1;\n\t\t\tPCDheader.str = data.substr( 0, PCDheader.headerLen );\n\n\t\t\t// remove comments\n\n\t\t\tPCDheader.str = PCDheader.str.replace( /\\#.*/gi, '' );\n\n\t\t\t// parse\n\n\t\t\tPCDheader.version = /VERSION (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.fields = /FIELDS (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.size = /SIZE (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.type = /TYPE (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.count = /COUNT (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.width = /WIDTH (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.height = /HEIGHT (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.viewpoint = /VIEWPOINT (.*)/i.exec( PCDheader.str );\n\t\t\tPCDheader.points = /POINTS (.*)/i.exec( PCDheader.str );\n\n\t\t\t// evaluate\n\n\t\t\tif ( PCDheader.version !== null )\n\t\t\t\tPCDheader.version = parseFloat( PCDheader.version[ 1 ] );\n\n\t\t\tif ( PCDheader.fields !== null )\n\t\t\t\tPCDheader.fields = PCDheader.fields[ 1 ].split( ' ' );\n\n\t\t\tif ( PCDheader.type !== null )\n\t\t\t\tPCDheader.type = PCDheader.type[ 1 ].split( ' ' );\n\n\t\t\tif ( PCDheader.width !== null )\n\t\t\t\tPCDheader.width = parseInt( PCDheader.width[ 1 ] );\n\n\t\t\tif ( PCDheader.height !== null )\n\t\t\t\tPCDheader.height = parseInt( PCDheader.height[ 1 ] );\n\n\t\t\tif ( PCDheader.viewpoint !== null )\n\t\t\t\tPCDheader.viewpoint = PCDheader.viewpoint[ 1 ];\n\n\t\t\tif ( PCDheader.points !== null )\n\t\t\t\tPCDheader.points = parseInt( PCDheader.points[ 1 ], 10 );\n\n\t\t\tif ( PCDheader.points === null )\n\t\t\t\tPCDheader.points = PCDheader.width * PCDheader.height;\n\n\t\t\tif ( PCDheader.size !== null ) {\n\n\t\t\t\tPCDheader.size = PCDheader.size[ 1 ].split( ' ' ).map( function ( x ) {\n\n\t\t\t\t\treturn parseInt( x, 10 );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( PCDheader.count !== null ) {\n\n\t\t\t\tPCDheader.count = PCDheader.count[ 1 ].split( ' ' ).map( function ( x ) {\n\n\t\t\t\t\treturn parseInt( x, 10 );\n\n\t\t\t\t} );\n\n\t\t\t} else {\n\n\t\t\t\tPCDheader.count = [];\n\n\t\t\t\tfor ( var i = 0, l = PCDheader.fields.length; i < l; i ++ ) {\n\n\t\t\t\t\tPCDheader.count.push( 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tPCDheader.offset = {};\n\n\t\t\tvar sizeSum = 0;\n\n\t\t\tfor ( var i = 0, l = PCDheader.fields.length; i < l; i ++ ) {\n\n\t\t\t\tif ( PCDheader.data === 'ascii' ) {\n\n\t\t\t\t\tPCDheader.offset[ PCDheader.fields[ i ] ] = i;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tPCDheader.offset[ PCDheader.fields[ i ] ] = sizeSum;\n\t\t\t\t\tsizeSum += PCDheader.size[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// for binary only\n\n\t\t\tPCDheader.rowSize = sizeSum;\n\n\t\t\treturn PCDheader;\n\n\t\t}\n\n\t\tvar textData = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t// parse header (always ascii format)\n\n\t\tvar PCDheader = parseHeader( textData );\n\n\t\t// parse data\n\n\t\tvar position = [];\n\t\tvar normal = [];\n\t\tvar color = [];\n\n\t\t// ascii\n\n\t\tif ( PCDheader.data === 'ascii' ) {\n\n\t\t\tvar offset = PCDheader.offset;\n\t\t\tvar pcdData = textData.substr( PCDheader.headerLen );\n\t\t\tvar lines = pcdData.split( '\\n' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tif ( lines[ i ] === '' ) continue;\n\n\t\t\t\tvar line = lines[ i ].split( ' ' );\n\n\t\t\t\tif ( offset.x !== undefined ) {\n\n\t\t\t\t\tposition.push( parseFloat( line[ offset.x ] ) );\n\t\t\t\t\tposition.push( parseFloat( line[ offset.y ] ) );\n\t\t\t\t\tposition.push( parseFloat( line[ offset.z ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset.rgb !== undefined ) {\n\n\t\t\t\t\tvar rgb = parseFloat( line[ offset.rgb ] );\n\t\t\t\t\tvar r = ( rgb >> 16 ) & 0x0000ff;\n\t\t\t\t\tvar g = ( rgb >> 8 ) & 0x0000ff;\n\t\t\t\t\tvar b = ( rgb >> 0 ) & 0x0000ff;\n\t\t\t\t\tcolor.push( r / 255, g / 255, b / 255 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset.normal_x !== undefined ) {\n\n\t\t\t\t\tnormal.push( parseFloat( line[ offset.normal_x ] ) );\n\t\t\t\t\tnormal.push( parseFloat( line[ offset.normal_y ] ) );\n\t\t\t\t\tnormal.push( parseFloat( line[ offset.normal_z ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// binary-compressed\n\n\t\t// normally data in PCD files are organized as array of structures: XYZRGBXYZRGB\n\t\t// binary compressed PCD files organize their data as structure of arrays: XXYYZZRGBRGB\n\t\t// that requires a totally different parsing approach compared to non-compressed data\n\n\t\tif ( PCDheader.data === 'binary_compressed' ) {\n\n\t\t\tvar sizes = new Uint32Array( data.slice( PCDheader.headerLen, PCDheader.headerLen + 8 ) );\n\t\t\tvar compressedSize = sizes[ 0 ];\n\t\t\tvar decompressedSize = sizes[ 1 ];\n\t\t\tvar decompressed = decompressLZF( new Uint8Array( data, PCDheader.headerLen + 8, compressedSize ), decompressedSize );\n\t\t\tvar dataview = new DataView( decompressed.buffer );\n\n\t\t\tvar offset = PCDheader.offset;\n\n\t\t\tfor ( var i = 0; i < PCDheader.points; i ++ ) {\n\n\t\t\t\tif ( offset.x !== undefined ) {\n\n\t\t\t\t\tposition.push( dataview.getFloat32( ( PCDheader.points * offset.x ) + PCDheader.size[ 0 ] * i, this.littleEndian ) );\n\t\t\t\t\tposition.push( dataview.getFloat32( ( PCDheader.points * offset.y ) + PCDheader.size[ 1 ] * i, this.littleEndian ) );\n\t\t\t\t\tposition.push( dataview.getFloat32( ( PCDheader.points * offset.z ) + PCDheader.size[ 2 ] * i, this.littleEndian ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset.rgb !== undefined ) {\n\n\t\t\t\t\tcolor.push( dataview.getUint8( ( PCDheader.points * offset.rgb ) + PCDheader.size[ 3 ] * i + 0 ) / 255.0 );\n\t\t\t\t\tcolor.push( dataview.getUint8( ( PCDheader.points * offset.rgb ) + PCDheader.size[ 3 ] * i + 1 ) / 255.0 );\n\t\t\t\t\tcolor.push( dataview.getUint8( ( PCDheader.points * offset.rgb ) + PCDheader.size[ 3 ] * i + 2 ) / 255.0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset.normal_x !== undefined ) {\n\n\t\t\t\t\tnormal.push( dataview.getFloat32( ( PCDheader.points * offset.normal_x ) + PCDheader.size[ 4 ] * i, this.littleEndian ) );\n\t\t\t\t\tnormal.push( dataview.getFloat32( ( PCDheader.points * offset.normal_y ) + PCDheader.size[ 5 ] * i, this.littleEndian ) );\n\t\t\t\t\tnormal.push( dataview.getFloat32( ( PCDheader.points * offset.normal_z ) + PCDheader.size[ 6 ] * i, this.littleEndian ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// binary\n\n\t\tif ( PCDheader.data === 'binary' ) {\n\n\t\t\tvar dataview = new DataView( data, PCDheader.headerLen );\n\t\t\tvar offset = PCDheader.offset;\n\n\t\t\tfor ( var i = 0, row = 0; i < PCDheader.points; i ++, row += PCDheader.rowSize ) {\n\n\t\t\t\tif ( offset.x !== undefined ) {\n\n\t\t\t\t\tposition.push( dataview.getFloat32( row + offset.x, this.littleEndian ) );\n\t\t\t\t\tposition.push( dataview.getFloat32( row + offset.y, this.littleEndian ) );\n\t\t\t\t\tposition.push( dataview.getFloat32( row + offset.z, this.littleEndian ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset.rgb !== undefined ) {\n\n\t\t\t\t\tcolor.push( dataview.getUint8( row + offset.rgb + 2 ) / 255.0 );\n\t\t\t\t\tcolor.push( dataview.getUint8( row + offset.rgb + 1 ) / 255.0 );\n\t\t\t\t\tcolor.push( dataview.getUint8( row + offset.rgb + 0 ) / 255.0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset.normal_x !== undefined ) {\n\n\t\t\t\t\tnormal.push( dataview.getFloat32( row + offset.normal_x, this.littleEndian ) );\n\t\t\t\t\tnormal.push( dataview.getFloat32( row + offset.normal_y, this.littleEndian ) );\n\t\t\t\t\tnormal.push( dataview.getFloat32( row + offset.normal_z, this.littleEndian ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tif ( position.length > 0 ) geometry.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\t\tif ( normal.length > 0 ) geometry.setAttribute( 'normal', new Float32BufferAttribute( normal, 3 ) );\n\t\tif ( color.length > 0 ) geometry.setAttribute( 'color', new Float32BufferAttribute( color, 3 ) );\n\n\t\tgeometry.computeBoundingSphere();\n\n\t\t// build material\n\n\t\tvar material = new PointsMaterial( { size: 0.005 } );\n\n\t\tif ( color.length > 0 ) {\n\n\t\t\tmaterial.vertexColors = VertexColors;\n\n\t\t} else {\n\n\t\t\tmaterial.color.setHex( Math.random() * 0xffffff );\n\n\t\t}\n\n\t\t// build point cloud\n\n\t\tvar mesh = new Points( geometry, material );\n\t\tvar name = url.split( '' ).reverse().join( '' );\n\t\tname = /([^\\/]*)/.exec( name );\n\t\tname = name[ 1 ].split( '' ).reverse().join( '' );\n\t\tmesh.name = name;\n\n\t\treturn mesh;\n\n\t}\n\n} );\n\nexport { PCDLoader };\n"]}]}