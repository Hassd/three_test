{"remainingRequest":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\TGALoader.js","dependencies":[{"path":"E:\\自己的项目\\three_test\\src\\assets\\examples\\jsm\\loaders\\TGALoader.js","mtime":1561737412000},{"path":"E:\\自己的项目\\three_test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的项目\\three_test\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/自己的项目/three_test/src/assets/examples/jsm/loaders/TGALoader.js"],"names":["DefaultLoadingManager","FileLoader","Texture","TGALoader","manager","undefined","prototype","constructor","load","url","onLoad","onProgress","onError","scope","texture","loader","setResponseType","setPath","path","buffer","image","parse","needsUpdate","tgaCheckHeader","header","image_type","TGA_TYPE_INDEXED","TGA_TYPE_RLE_INDEXED","colormap_length","colormap_size","colormap_type","console","error","TGA_TYPE_RGB","TGA_TYPE_GREY","TGA_TYPE_RLE_RGB","TGA_TYPE_RLE_GREY","TGA_TYPE_NO_DATA","width","height","pixel_size","tgaParse","use_rle","use_pal","offset","data","pixel_data","pixel_total","palettes","subarray","Uint8Array","c","count","i","shift","pixels","set","tgaGetImageData8bits","imageData","y_start","y_step","y_end","x_start","x_step","x_end","colormap","color","x","y","tgaGetImageData16bits","tgaGetImageData24bits","tgaGetImageData32bits","tgaGetImageDataGrey8bits","tgaGetImageDataGrey16bits","getTgaRGBA","palette","flags","TGA_ORIGIN_MASK","TGA_ORIGIN_SHIFT","TGA_ORIGIN_UL","TGA_ORIGIN_BL","TGA_ORIGIN_UR","TGA_ORIGIN_BR","use_grey","length","content","id_length","colormap_index","origin","useOffscreen","OffscreenCanvas","canvas","document","createElement","context","getContext","createImageData","result","rgbaData","putImageData","transferToImageBitmap","value"],"mappings":"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","sourcesContent":["/*\n * @author Daosheng Mu / https://github.com/DaoshengMu/\n * @author mrdoob / http://mrdoob.com/\n * @author takahirox / https://github.com/takahirox/\n */\n\nimport {\n\tDefaultLoadingManager,\n\tFileLoader,\n\tTexture\n} from \"../../../build/three.module.js\";\n\nvar TGALoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n};\n\nTGALoader.prototype = {\n\n\tconstructor: TGALoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttexture.image = scope.parse( buffer );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tparse: function ( buffer ) {\n\n\t\t// reference from vthibault, https://github.com/vthibault/roBrowser/blob/master/src/Loaders/Targa.js\n\n\t\tfunction tgaCheckHeader( header ) {\n\n\t\t\tswitch ( header.image_type ) {\n\n\t\t\t\t// check indexed type\n\n\t\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\t\tif ( header.colormap_length > 256 || header.colormap_size !== 24 || header.colormap_type !== 1 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid type colormap data for indexed type.' );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// check colormap type\n\n\t\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\t\tif ( header.colormap_type ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid type colormap data for colormap type.' );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// What the need of a file without data ?\n\n\t\t\t\tcase TGA_TYPE_NO_DATA:\n\t\t\t\t\tconsole.error( 'THREE.TGALoader: No data.' );\n\n\t\t\t\t// Invalid type ?\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid type \"%s\".', header.image_type );\n\n\t\t\t}\n\n\t\t\t// check image width and height\n\n\t\t\tif ( header.width <= 0 || header.height <= 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid image size.' );\n\n\t\t\t}\n\n\t\t\t// check image pixel size\n\n\t\t\tif ( header.pixel_size !== 8 && header.pixel_size !== 16 &&\n\t\t\t\theader.pixel_size !== 24 && header.pixel_size !== 32 ) {\n\n\t\t\t\tconsole.error( 'THREE.TGALoader: Invalid pixel size \"%s\".', header.pixel_size );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// parse tga image buffer\n\n\t\tfunction tgaParse( use_rle, use_pal, header, offset, data ) {\n\n\t\t\tvar pixel_data,\n\t\t\t\tpixel_size,\n\t\t\t\tpixel_total,\n\t\t\t\tpalettes;\n\n\t\t\tpixel_size = header.pixel_size >> 3;\n\t\t\tpixel_total = header.width * header.height * pixel_size;\n\n\t\t\t // read palettes\n\n\t\t\t if ( use_pal ) {\n\n\t\t\t\t palettes = data.subarray( offset, offset += header.colormap_length * ( header.colormap_size >> 3 ) );\n\n\t\t\t }\n\n\t\t\t // read RLE\n\n\t\t\t if ( use_rle ) {\n\n\t\t\t\t pixel_data = new Uint8Array( pixel_total );\n\n\t\t\t\tvar c, count, i;\n\t\t\t\tvar shift = 0;\n\t\t\t\tvar pixels = new Uint8Array( pixel_size );\n\n\t\t\t\twhile ( shift < pixel_total ) {\n\n\t\t\t\t\tc = data[ offset ++ ];\n\t\t\t\t\tcount = ( c & 0x7f ) + 1;\n\n\t\t\t\t\t// RLE pixels\n\n\t\t\t\t\tif ( c & 0x80 ) {\n\n\t\t\t\t\t\t// bind pixel tmp array\n\n\t\t\t\t\t\tfor ( i = 0; i < pixel_size; ++ i ) {\n\n\t\t\t\t\t\t\tpixels[ i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// copy pixel array\n\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data.set( pixels, shift + i * pixel_size );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshift += pixel_size * count;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// raw pixels\n\n\t\t\t\t\t\tcount *= pixel_size;\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data[ shift + i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshift += count;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t } else {\n\n\t\t\t\t// raw pixels\n\n\t\t\t\tpixel_data = data.subarray(\n\t\t\t\t\t offset, offset += ( use_pal ? header.width * header.height : pixel_total )\n\t\t\t\t);\n\n\t\t\t }\n\n\t\t\t return {\n\t\t\t\tpixel_data: pixel_data,\n\t\t\t\tpalettes: palettes\n\t\t\t };\n\n\t\t}\n\n\t\tfunction tgaGetImageData8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image, palettes ) {\n\n\t\t\tvar colormap = palettes;\n\t\t\tvar color, i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = colormap[ ( color * 3 ) + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = colormap[ ( color * 3 ) + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = colormap[ ( color * 3 ) + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar color, i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\tcolor = image[ i + 0 ] + ( image[ i + 1 ] << 8 ); // Inversed ?\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = ( color & 0x7C00 ) >> 7;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = ( color & 0x03E0 ) >> 2;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = ( color & 0x001F ) >> 3;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = ( color & 0x8000 ) ? 0 : 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData24bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 3 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData32bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 4 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 3 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar color, i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tvar i = 0, x, y;\n\t\t\tvar width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction getTgaRGBA( data, width, height, image, palette ) {\n\n\t\t\tvar x_start,\n\t\t\t\ty_start,\n\t\t\t\tx_step,\n\t\t\t\ty_step,\n\t\t\t\tx_end,\n\t\t\t\ty_end;\n\n\t\t\tswitch ( ( header.flags & TGA_ORIGIN_MASK ) >> TGA_ORIGIN_SHIFT ) {\n\n\t\t\t\tdefault:\n\t\t\t\tcase TGA_ORIGIN_UL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_UR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( use_grey ) {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageDataGrey8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageDataGrey16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageData8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image, palette );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageData16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 24:\n\t\t\t\t\t\ttgaGetImageData24bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\ttgaGetImageData32bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Load image data according to specific method\n\t\t\t// var func = 'tgaGetImageData' + (use_grey ? 'Grey' : '') + (header.pixel_size) + 'bits';\n\t\t\t// func(data, y_start, y_step, y_end, x_start, x_step, x_end, width, image, palette );\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// TGA constants\n\n\t\tvar TGA_TYPE_NO_DATA = 0,\n\t\t\tTGA_TYPE_INDEXED = 1,\n\t\t\tTGA_TYPE_RGB = 2,\n\t\t\tTGA_TYPE_GREY = 3,\n\t\t\tTGA_TYPE_RLE_INDEXED = 9,\n\t\t\tTGA_TYPE_RLE_RGB = 10,\n\t\t\tTGA_TYPE_RLE_GREY = 11,\n\n\t\t\tTGA_ORIGIN_MASK = 0x30,\n\t\t\tTGA_ORIGIN_SHIFT = 0x04,\n\t\t\tTGA_ORIGIN_BL = 0x00,\n\t\t\tTGA_ORIGIN_BR = 0x01,\n\t\t\tTGA_ORIGIN_UL = 0x02,\n\t\t\tTGA_ORIGIN_UR = 0x03;\n\n\t\tif ( buffer.length < 19 ) console.error( 'THREE.TGALoader: Not enough data to contain header.' );\n\n\t\tvar content = new Uint8Array( buffer ),\n\t\t\toffset = 0,\n\t\t\theader = {\n\t\t\t\tid_length: content[ offset ++ ],\n\t\t\t\tcolormap_type: content[ offset ++ ],\n\t\t\t\timage_type: content[ offset ++ ],\n\t\t\t\tcolormap_index: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_length: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_size: content[ offset ++ ],\n\t\t\t\torigin: [\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8\n\t\t\t\t],\n\t\t\t\twidth: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\theight: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tpixel_size: content[ offset ++ ],\n\t\t\t\tflags: content[ offset ++ ]\n\t\t\t};\n\n\t\t\t// check tga if it is valid format\n\n\t\ttgaCheckHeader( header );\n\n\t\tif ( header.id_length + offset > buffer.length ) {\n\n\t\t\tconsole.error( 'THREE.TGALoader: No data.' );\n\n\t\t}\n\n\t\t// skip the needn't data\n\n\t\toffset += header.id_length;\n\n\t\t// get targa information about RLE compression and palette\n\n\t\tvar use_rle = false,\n\t\t\tuse_pal = false,\n\t\t\tuse_grey = false;\n\n\t\tswitch ( header.image_type ) {\n\n\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tuse_rle = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t//\n\n\t\tvar useOffscreen = typeof OffscreenCanvas !== 'undefined';\n\n\t\tvar canvas = useOffscreen ? new OffscreenCanvas( header.width, header.height ) : document.createElement( 'canvas' );\n\t\tcanvas.width = header.width;\n\t\tcanvas.height = header.height;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tvar imageData = context.createImageData( header.width, header.height );\n\n\t\tvar result = tgaParse( use_rle, use_pal, header, offset, content );\n\t\tvar rgbaData = getTgaRGBA( imageData.data, header.width, header.height, result.pixel_data, result.palettes );\n\n\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\treturn useOffscreen ? canvas.transferToImageBitmap() : canvas;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\nexport { TGALoader };\n"]}]}